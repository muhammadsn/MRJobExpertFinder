<?xml version="1.0" encoding="utf-8"?>
<posts>
  <row Id="1988675" PostTypeId="2" ParentId="1988668" CreationDate="2010-01-01T14:04:28.117" Score="2" Body="&lt;p&gt;Your &lt;code&gt;xcopy&lt;/code&gt; command failed for some reason.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would guess that either the DLL file doesn't exist (eg, the build failed) or the target path doesn't exist.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Run the same command line in a command prompt and see what error it prints.&lt;/p&gt;&#xA;" OwnerUserId="34397" LastActivityDate="2010-01-01T14:04:28.117" CommentCount="0" />
  <row Id="1988703" PostTypeId="2" ParentId="1988668" CreationDate="2010-01-01T14:14:26.867" Score="14" Body="&lt;p&gt;Found my answer: The command had a line break between the source and destination strings. So, Visual Sudio was treating it as two commands. Eliminating the line break solved the problem.&lt;/p&gt;&#xA;" OwnerUserId="93781" LastActivityDate="2010-01-01T14:14:26.867" CommentCount="2" />
  <row Id="1989926" PostTypeId="2" ParentId="1989900" CreationDate="2010-01-01T22:46:12.463" Score="10" Body="&lt;p&gt;In your test project which Resharper created, remove the reference to the Microsoft unit testing DLL (I don't recall the name off hand, but it's quite a long name).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Then add a new reference - nunit.framework.dll, you should find it on the first tab of the Add Reference dialog.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Add &lt;code&gt;using NUnit.Framework&lt;/code&gt; to to the unit test class file.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You then need to change attributes:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;[TestClass] to [TestFixture]&#xA;[TestMethod] to [Test]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;So if you end up with a MSTest project, use the above steps to get NUnit instead.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;NOTE: Resharper 4.5 onwards does have native support for running MSTest as well as NUNit tests. So you could try that instead.&lt;/p&gt;&#xA;" OwnerUserId="127440" LastEditorUserId="142162" LastEditDate="2011-09-27T14:14:55.950" LastActivityDate="2011-09-27T14:14:55.950" CommentCount="4" />
  <row Id="1991116" PostTypeId="2" ParentId="1989900" CreationDate="2010-01-02T09:38:57.903" Score="4" Body="&lt;p&gt;You don't need to run any wizards to use NUnit. You can just create a class library, add a reference to NUnit and mark your tests with the corresponding attribute. The Wizards are only for MSTest and even then, not required.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Once you have the unit tests, the ReSharper test runner will detect them and on the left-hand margin you'll get some icons that will allow you to run/debug tests. See the first image here for an example:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.jetbrains.com/resharper/features/unit_testing.html#Running_and_debugging_tests&quot; rel=&quot;nofollow&quot;&gt;NUnit and ReSharper&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="239266" LastActivityDate="2010-01-02T09:38:57.903" CommentCount="0" />
  <row Id="1991547" PostTypeId="2" ParentId="1991541" CreationDate="2010-01-02T13:02:26.647" Score="1" Body="&lt;p&gt;One obvious possibility is to have two different build configurations, each of which specifies a different preprocessor symbol. Then you can do:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;#if CUSTOMER1&#xA;   const string LogoResource = &quot;customer1.jpg&quot;;&#xA;#elif CUSTOMER2&#xA;   const string LogoResource = &quot;customer2.jpg&quot;;&#xA;#else&#xA;   #error Must specify CUSTOMER1 or CUSTOMER2&#xA;#endif&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Somewhat ugly, but it would work...&lt;/p&gt;&#xA;" OwnerUserId="22656" LastActivityDate="2010-01-02T13:02:26.647" CommentCount="0" />
  <row Id="1991708" PostTypeId="2" ParentId="1991541" CreationDate="2010-01-02T14:19:56.663" Score="0" Body="&lt;p&gt;you could place the images in a seperate (resource-only) dll, eg customer1.dll and customer2.dll (or you could use the same names which makes the loading easier) and only ship the corresponding dll to each customer. At application startup, load the image from the dll and use it. This makes a pretty extensible system.&lt;/p&gt;&#xA;" OwnerUserId="128384" LastActivityDate="2010-01-02T14:19:56.663" CommentCount="0" />
  <row Id="1991824" PostTypeId="2" ParentId="1991820" CreationDate="2010-01-02T14:57:44.030" Score="3" Body="&lt;p&gt;You can download Visual Studio 2008 Express Edition and SQL Server 2008 Express Edition.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;amp;FamilyID=f3fbb04e-92c2-4701-b4ba-92e26e408569&quot; rel=&quot;nofollow&quot;&gt;Visual Studio 2008 Express Edition&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.microsoft.com/downloads/details.aspx?displaylang=en&amp;amp;FamilyID=7522a683-4cb2-454e-b908-e805e9bd4e28&quot; rel=&quot;nofollow&quot;&gt;SQL Server 2008 Express Edition&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="86191" LastActivityDate="2010-01-02T14:57:44.030" CommentCount="0" />
  <row Id="1991827" PostTypeId="2" ParentId="1991820" CreationDate="2010-01-02T14:59:00.423" Score="6" Body="&lt;p&gt;You don't need anything fake - just get the express editions - they're the real deal!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.microsoft.com/Express/SQL/&quot; rel=&quot;nofollow&quot;&gt;http://www.microsoft.com/Express/SQL/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.microsoft.com/exPress/&quot; rel=&quot;nofollow&quot;&gt;http://www.microsoft.com/exPress/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="241018" LastActivityDate="2010-01-02T14:59:00.423" CommentCount="0" />
  <row Id="1991828" PostTypeId="2" ParentId="1991820" CreationDate="2010-01-02T14:59:35.647" Score="1" Body="&lt;p&gt;You can download 180 day trial here &#xA;&lt;a href=&quot;http://www.microsoft.com/sqlserver/2008/en/us/default.aspx&quot; rel=&quot;nofollow&quot;&gt;http://www.microsoft.com/sqlserver/2008/en/us/default.aspx&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;AdventureWorks database is available for download as well if you're interested&lt;/p&gt;&#xA;" OwnerUserId="239819" LastActivityDate="2010-01-02T14:59:35.647" CommentCount="0" />
  <row Id="1991919" PostTypeId="2" ParentId="1991541" CreationDate="2010-01-02T15:37:09.130" Score="0" Body="&lt;p&gt;Maybe look at the problem domain from a different angle. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Typically you don't want to rebuild you project for each client - the only way around this is to load the image dynamically during runtime.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Generally I would make the image path user specified in a settings file, and load the image during runtime. This would avoid any complicated build settings, etc. as well as giving you the added benefit of scalibility if your client base continue to grow.&lt;/p&gt;&#xA;" OwnerUserId="215546" LastActivityDate="2010-01-02T15:37:09.130" CommentCount="0" />
  <row Id="1992925" PostTypeId="2" ParentId="1992639" CreationDate="2010-01-02T21:31:34.470" Score="1" Body="&lt;p&gt;I'd     have something like that&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;//map this in NH&#xA;public virtual User LoggedInCreator {get;set;}&#xA;//Not mapped&#xA;public virtual User CreatorInformation {&#xA;    get {&#xA;        if(LoggedInCreator != null) return LoggedInCreator;&#xA;        return new User {&#xA;                Name = AnonymousCommenterName,&#xA;                Email = AnonymousCommenterEmail,&#xA;                Website= AnonymousCommenterWebsite&#xA;            };&#xA;    }&#xA;}&#xA;public void SetAnonymouscommenter(string name, string email, string website)&#xA;{&#xA;    LoggedInCreator = null;&#xA;    AnonymousCommenterName = name;&#xA;    AnonymousCommenterEmail = email;&#xA;    AnonymousCommenterWebsite = website;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;However, if you want to do it in a &lt;strong&gt;much cleaner way&lt;/strong&gt;, you'd use a great feature of NHibernate, which is being able to map &lt;strong&gt;Fields&lt;/strong&gt; and also mapping properties that store their values in fields.&lt;br&gt;&#xA;Here is what a cleaner implementation would be:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;protected User _commenter;&#xA;public virtual User Commenter&#xA;{&#xA;    get {&#xA;        if(_commenter != null) return _commenter;&#xA;        return new User {&#xA;                Name = AnonymousCommenterName,&#xA;                Email = AnonymousCommenterEmail,&#xA;                Website= AnonymousCommenterWebsite&#xA;        };&#xA;    }&#xA;    set {&#xA;        bool isAnonymous = value.Id == 0;&#xA;        _commenter = isAnonymous ? null : value;&#xA;        AnonymousCommenterName = isAnonymous ? value.Name : null;&#xA;        AnonymousCommenterEmail = isAnonymous ? value.Email : null;&#xA;        AnonymousCommenterWebsite = isAnonymous ? value.Website : null;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You can see they are essentially the same idea though, just some cleanup using NHibernate features.&lt;/p&gt;&#xA;" OwnerUserId="146656" LastActivityDate="2010-01-02T21:31:34.470" CommentCount="2" />
  <row Id="21381132" PostTypeId="2" ParentId="21380329" CreationDate="2014-01-27T12:38:08.320" Score="0" Body="&lt;p&gt;This doesn't really have anything to do with BackgroundWorker or any specific class. It is just how the C# language works.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can't access non-static members from a static function. A static function has no implicit &lt;code&gt;this&lt;/code&gt; parameter that makes it run against a particular instance of the class. You can run it without ever creating any instances of the class.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This worker&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;private readonly BackgroundWorker worker = new BackgroundWorker();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;will be created once for each instance of the class. But you can call the &lt;code&gt;Add&lt;/code&gt; function without having any instances.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, this doesn't work for the same reason:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;class Adder&#xA;{&#xA;    public int sum = 0;&#xA;&#xA;    public static void Add(int x)&#xA;    {&#xA;        sum += x; // can't reference &quot;sum&quot; from static method! &#xA;    }&#xA;}&#xA;&#xA;...&#xA;&#xA;Adder.Add(5)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;but this works:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;class Adder&#xA;{&#xA;    public int sum = 0;&#xA;&#xA;    public void Add(int x) // no longer static&#xA;    {&#xA;        sum += x; // this refers to the &quot;sum&quot; variable of this particular instance of Adder&#xA;    }&#xA;}&#xA;&#xA;...&#xA;&#xA;var adder = new Adder();&#xA;adder.Add(5);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;and this also works (but differently!):&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;class Adder&#xA;{&#xA;    public static int sum = 0; // we made sum static (there is exactly one, instead of a separate sum for each instance)&#xA;&#xA;    public static void Add(int x)&#xA;    {&#xA;        sum += x; // this refers to the static sum variable&#xA;    }&#xA;}&#xA;&#xA;...&#xA;&#xA;Adder.Add(5);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1087386" LastEditorUserId="1087386" LastEditDate="2014-01-27T12:44:14.230" LastActivityDate="2014-01-27T12:44:14.230" CommentCount="1" />
  <row Id="21381226" PostTypeId="2" ParentId="21380329" CreationDate="2014-01-27T12:42:49.020" Score="0" Body="&lt;p&gt;You cannot access instance variables in static methods. Hence the error. Try and make the BackgroundWorker instance static. Something like the following.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    private readonly static BackgroundWorker worker = new BackgroundWorker();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Not very sure if this will not break any other of your code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Hope this helps.&lt;/p&gt;&#xA;" OwnerUserId="320112" LastActivityDate="2014-01-27T12:42:49.020" CommentCount="0" />
  <row Id="21381340" PostTypeId="2" ParentId="21376551" CreationDate="2014-01-27T12:48:40.627" Score="1" Body="&lt;p&gt;There is no implemented way to do what you want. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;After checking &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;if (ds.Rows.Count &amp;gt; 0) &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;, either way you have to place an own control, like a label, in front of your DGV &#xA;OR you completely draw your message from hand on the DGV. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Easiest way would be to just prompt a Message.Box or to dismiss the DGV in the case there are now Rows in your dataset and show another control with your &quot;No Recores found&quot; message instead &lt;/p&gt;&#xA;" OwnerUserId="3232877" LastActivityDate="2014-01-27T12:48:40.627" CommentCount="0" />
  <row Id="21381596" PostTypeId="2" ParentId="2496148" CreationDate="2014-01-27T13:00:43.343" Score="0" Body="&lt;p&gt;This is a simple looking error message that is deceptively hard to track down.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;it's a compile time error. i also got this error. To Get rid this error ....i opened my  file&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt; proximanova-black.ttf in notepad and saveas . this resolved my error.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;this article should get you back on track without spending hours scratching your head.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;   http://runtingsproper.blogspot.com/2010/03/solved-error-1-ticks-must-be-between.html&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="2978840" LastActivityDate="2014-01-27T13:00:43.343" CommentCount="0" />
  <row Id="21381629" PostTypeId="2" ParentId="21377565" CreationDate="2014-01-27T13:02:23.480" Score="6" Body="&lt;p&gt;&lt;strong&gt;Quick answer&lt;/strong&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Apple does not allow you to do so (it's not a C# limitation).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Longer answer&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There's a &lt;a href=&quot;http://stackoverflow.com/q/832940/220643&quot;&gt;private&lt;/a&gt; &lt;code&gt;GSEventLockDevice&lt;/code&gt; API to do so - but it would prevent your application to be on the appstore (Apple will refuse it because of the private API). Also it seems it is &lt;a href=&quot;http://stackoverflow.com/q/19209887/220643&quot;&gt;not working&lt;/a&gt; anymore for iOS7.&lt;/p&gt;&#xA;" OwnerUserId="220643" LastActivityDate="2014-01-27T13:02:23.480" CommentCount="1" />
  <row Id="21381851" PostTypeId="2" ParentId="21362200" CreationDate="2014-01-27T13:12:02.030" Score="0" Body="&lt;p&gt;Check with speed trace and appsight. They are pretty detailed in profiling and recording data.&lt;/p&gt;&#xA;" OwnerUserId="3066760" LastActivityDate="2014-01-27T13:12:02.030" CommentCount="0" />
  <row Id="21382110" PostTypeId="2" ParentId="21381789" CreationDate="2014-01-27T13:26:13.203" Score="5" Body="&lt;p&gt;It is difficult to combine all your requirements into one regex. The trick here is to use a positive lookahead assertion to check for the overall length.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;(?=^.{6,})(?i)[a-z\d]*?\d[a-z\d]*?\d[a-z\d]*&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;See it &lt;a href=&quot;http://regexr.com?384l1&quot;&gt;here on Regexr&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;(?=^.{6,})&lt;/code&gt; &lt;a href=&quot;http://www.regular-expressions.info/lookaround.html&quot;&gt;lookahead assertion&lt;/a&gt;, checks that the string has a length of at least 6 chars.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;(?i)&lt;/code&gt; &lt;a href=&quot;http://www.regular-expressions.info/modifiers.html&quot;&gt;inline modifier&lt;/a&gt;, makes letter matching case independent.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;[a-z\d]*?\d[a-z\d]*?\d[a-z\d]*&lt;/code&gt; letters or a digit, A digit required, letters or a digit, A digit required, more possible letters or digits.&lt;/p&gt;&#xA;" OwnerUserId="626273" LastActivityDate="2014-01-27T13:26:13.203" CommentCount="1" />
  <row Id="21382658" PostTypeId="2" ParentId="21325103" CreationDate="2014-01-27T13:54:00.567" Score="0" Body="&lt;p&gt;There is a lot to test here:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Testing creation/initialization&lt;/li&gt;&#xA;&lt;li&gt;Check if &lt;code&gt;Tick&lt;/code&gt; comes&lt;/li&gt;&#xA;&lt;li&gt;Check if your code does not fail when nobody registered to &lt;code&gt;Tick&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Testing &lt;code&gt;TriggerNextTickIn&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Look at your code as a block box and what it promises and check whether it holds to that promise. Ideally write the tests before you finished the code itself...&lt;/p&gt;&#xA;" OwnerUserId="2634248" LastActivityDate="2014-01-27T13:54:00.567" CommentCount="0" />
  <row Id="21382819" PostTypeId="2" ParentId="21376551" CreationDate="2014-01-27T14:01:29.713" Score="1" Body="&lt;p&gt;There is no equivalent property in &lt;code&gt;winforms datagridview&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You might look into the solution of this &lt;a href=&quot;http://stackoverflow.com/questions/5866458/how-to-creating-emptydatatext-for-datagridview-in-windows-application&quot;&gt;question&lt;/a&gt;. &lt;/p&gt;&#xA;" OwnerUserId="3165500" LastActivityDate="2014-01-27T14:01:29.713" CommentCount="0" />
  <row Id="21384208" PostTypeId="2" ParentId="21379886" CreationDate="2014-01-27T15:05:04.817" Score="2" Body="&lt;p&gt;Might be worth taking a look at Windows Azure Mobile Services.  Mobile Services provides a REST interface over your Windows Azure SQL Database automatically.  Could be a good option, especially if looking to access the database from multiple devices.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.windowsazure.com/en-us/documentation/articles/mobile-services-windows-store-dotnet-get-started-data/&quot; rel=&quot;nofollow&quot;&gt;http://www.windowsazure.com/en-us/documentation/articles/mobile-services-windows-store-dotnet-get-started-data/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="183343" LastActivityDate="2014-01-27T15:05:04.817" CommentCount="1" />
  <row Id="21385554" PostTypeId="2" ParentId="18538832" CreationDate="2014-01-27T16:01:05.803" Score="0" Body="&lt;p&gt;Each database instance participating in the sync requires its own Sync tracking tables/triggers/sprocs. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;The schema and scope have to do with the syncing process and there can be 1 or more.&lt;/p&gt;&#xA;" OwnerUserId="589577" LastActivityDate="2014-01-27T16:01:05.803" CommentCount="0" />
  <row Id="21385571" PostTypeId="2" ParentId="21385359" CreationDate="2014-01-27T16:01:51.073" Score="0" Body="&lt;p&gt;If you can afford the license fee I would recommend &lt;a href=&quot;http://particular.net/&quot; rel=&quot;nofollow&quot;&gt;NServiceBus&lt;/a&gt;. If you can't afford it, consider &lt;a href=&quot;http://masstransit-project.com/&quot; rel=&quot;nofollow&quot;&gt;MassTransit&lt;/a&gt;. Both of which will manage the message queue for you. They both support multiple queue types such as:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;MSMQ&lt;/li&gt;&#xA;&lt;li&gt;RabbitMQ&lt;/li&gt;&#xA;&lt;li&gt;ActiveMQ&lt;/li&gt;&#xA;&lt;li&gt;Azure&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;Implementing your own queuing system in SQL Server is a poor choice in the long run. Been there, got the t-shirt.&lt;/p&gt;&#xA;" OwnerUserId="119624" LastActivityDate="2014-01-27T16:01:51.073" CommentCount="0" />
  <row Id="21385982" PostTypeId="2" ParentId="18538832" CreationDate="2014-01-27T16:21:47.347" Score="0" Body="&lt;p&gt;the tracking table is for every table you want to sync. a scope is a definition/grouping of what you want to sync.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;if the tables/columns/rows to be synched are the same for the users, they can share the same scope definition.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;the tracking tables are updated via triggers on the base table, i dont think you want multiple triggers updating multiple tracking tables every time you insert/update/delete.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;you use the schema if you want to separate the sync objects in its own schema (you can also use object prefix to clearly identify these objects in your database)&lt;/p&gt;&#xA;" OwnerUserId="2046598" LastActivityDate="2014-01-27T16:21:47.347" CommentCount="0" />
  <row Id="21386807" PostTypeId="2" ParentId="21361305" CreationDate="2014-01-27T16:57:13.303" Score="0" Body="&lt;p&gt;You can remember a group of files and then open them at once with the &lt;a href=&quot;http://vlasovstudio.com/favorite-documents/&quot; rel=&quot;nofollow&quot;&gt;Favorite Documents&lt;/a&gt; extension.&lt;/p&gt;&#xA;" OwnerUserId="84507" LastActivityDate="2014-01-27T16:57:13.303" CommentCount="0" />
  <row Id="21386881" PostTypeId="2" ParentId="18311108" CreationDate="2014-01-27T16:59:58.270" Score="44" Body="&lt;p&gt;Just in case none of the above options worked for anyone I fixed my instance of this error by noticing a corrupt entry in my App.Config due to a missing nuget package in the test project.&lt;/p&gt;&#xA;" OwnerUserId="115492" LastActivityDate="2014-01-27T16:59:58.270" CommentCount="6" />
  <row Id="21389076" PostTypeId="2" ParentId="19162395" CreationDate="2014-01-27T18:46:57.487" Score="0" Body="&lt;p&gt;It must be v11.0, not v10.0, and in the future there will be v12.0+, but there is no v10.0. This has nothing to do with Visual Studio 2010 or SQL Server 2008. LocalDb first came with SQL Express 2012 and is v11.0.&#xA;&lt;a href=&quot;http://blogs.msdn.com/b/sqlexpress/archive/2011/07/12/introducing-localdb-a-better-sql-express.aspx&quot; rel=&quot;nofollow&quot;&gt;http://blogs.msdn.com/b/sqlexpress/archive/2011/07/12/introducing-localdb-a-better-sql-express.aspx&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;LocalDb also required as least .NET 4.02, but unfortunately the version in the registry is always v4.0.30319, even if you have earlier .NET&#xA;&lt;a href=&quot;http://blogs.msdn.com/b/sqlexpress/archive/2011/10/27/net-framework-4-now-supports-localdb.aspx&quot; rel=&quot;nofollow&quot;&gt;http://blogs.msdn.com/b/sqlexpress/archive/2011/10/27/net-framework-4-now-supports-localdb.aspx&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If possible, just upgrade to .NET 4.5&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This problem can also exist if using a named instance instead of v11.0 and the program or service was ran as a different user and that user instance is still attached to the database. Unfortunately the database can take awhile to automatically detach.&lt;/p&gt;&#xA;" OwnerUserId="2323964" LastActivityDate="2014-01-27T18:46:57.487" CommentCount="0" />
  <row Id="21390670" PostTypeId="2" ParentId="21390537" CreationDate="2014-01-27T20:11:41.550" Score="0" Body="&lt;p&gt;A brief bing search showed me this link: &lt;a href=&quot;http://dbaspot.com/sqlserver-programming/399616-what-max-length-sqlcommand-commandtext.html&quot; rel=&quot;nofollow&quot;&gt;http://dbaspot.com/sqlserver-programming/399616-what-max-length-sqlcommand-commandtext.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It says:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;The maximum size for a query batch is 65536 * network packet size. The&#xA;  default packet is 4096 bytes, which gives an upper limit of 268 million&#xA;  bytes.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;It's unclear if that changes for different versions of sql server though.&lt;/p&gt;&#xA;" OwnerUserId="228298" LastActivityDate="2014-01-27T20:11:41.550" CommentCount="5" />
  <row Id="21390805" PostTypeId="2" ParentId="21390537" CreationDate="2014-01-27T20:18:06.463" Score="1" Body="&lt;p&gt;It depends on the SQL Server version.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://technet.microsoft.com/en-us/library/ms143432.aspx&quot; rel=&quot;nofollow&quot;&gt;http://technet.microsoft.com/en-us/library/ms143432.aspx&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For SQL Server 2012, the batch size or SQL Statement (String) = 65,536 * Network packet size.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Network Packet Size is the size of the tabular data stream (TDS) packets used to communicate between applications and the relational Database Engine. The default packet size is 4 KB, and is controlled by the network packet size configuration option.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In short, 64K x 4K = 256 MB.  Again, this assumes you are using default packet sizes.&lt;/p&gt;&#xA;" OwnerUserId="2577687" LastActivityDate="2014-01-27T20:18:06.463" CommentCount="14" />
  <row Id="21390885" PostTypeId="2" ParentId="20332912" CreationDate="2014-01-27T20:22:57.953" Score="2" Body="&lt;p&gt;There is no &quot;Date&quot; type in .NET.  There are DateTime and DateTimeOffset types, but even the Date property of a DateTime object is a DateTIme.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm also not sure what a &quot;TypeName&quot; property of the Column attribute is.  It's not in the &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.data.linq.mapping.columnattribute%28v=vs.110%29.aspx&quot; rel=&quot;nofollow&quot;&gt;documentation&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, nowhere in your sample is lower case d, &quot;date&quot; shown, so I'm not sure where &quot;date&quot; is coming from in the error.&lt;/p&gt;&#xA;" OwnerUserId="107933" LastActivityDate="2014-01-27T20:22:57.953" CommentCount="1" />
  <row Id="21391203" PostTypeId="2" ParentId="21391055" CreationDate="2014-01-27T20:40:11.127" Score="4" Body="&lt;p&gt;you haven't defined an @parameter in your sql statement so you don;t need to add the parameter at all - just get the result of ExecuteScalar - you should be able to cast it to an int - although I cast it specifically in the sql statement too - &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;select cast(Scope_identity() as int) ....&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;so you'd end up with somthing like &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;        string selectStatement = &quot;SELECT cast(SCOPE_IDENTITY() AS int)&quot;;&#xA;        SqlCommand selectCommand = new SqlCommand(selectStatement, sqlConnection);&#xA;        object newIDobj = (int)selectCommand.ExecuteScalar();&#xA;        if(newIDobj!=null)&#xA;            Session[&quot;Id_user&quot;] = (int)newIDobj;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Even better you could create a stored procedure and have the insert done there, where it can then return scope identity.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Edited to include example with insert.  (just typed in here - so likely some typos)&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;int newID = -1;&#xA;string commandString = &quot;insert (code, desc, numbervalue) values (@code,    @desc,@numbervalue); select cast(scope_identity() as int);&quot;&#xA;using(SqlCommand cmd = new SqlCommand(commandString))&#xA;{&#xA;    try&#xA;    {&#xA;          cmd.Parameters.Add(&quot;@code&quot;, )&#xA;          // etc&#xA;          int newid=(int)(cmd.ExecuteScalar()??-1);&#xA;    }&#xA;    catch(Exception e)&#xA;    {&#xA;         // something went wrong&#xA;    }&#xA;}&#xA;&#xA;if(newID!=-1)&#xA;{&#xA;    // do something;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="2537359" LastEditorUserId="2537359" LastEditDate="2014-01-27T22:15:50.957" LastActivityDate="2014-01-27T22:15:50.957" CommentCount="10" />
  <row Id="21391791" PostTypeId="2" ParentId="21391465" CreationDate="2014-01-27T21:13:23.737" Score="0" Body="&lt;p&gt;reader 1 isn't doing anything. It's just iterating over all of the rows returned from the command, assigning them to variables, then not doing anything with them, as far as this snippet shows. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, you don't have any columns in your DataTable named &quot;newUserName&quot; or &quot;numUserId&quot;. Change the last 4 lines to this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;foreach(DataRow row in dt.Rows)&#xA;{&#xA;    ddlCreatedBy.Items.Add(new ListItem(row[&quot;FirstName&quot;] + &quot; &quot; + row[&quot;LastName&quot;], row[&quot;UserId&quot;]);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="2479770" LastActivityDate="2014-01-27T21:13:23.737" CommentCount="1" />
  <row Id="21392231" PostTypeId="2" ParentId="11668150" CreationDate="2014-01-27T21:38:59.057" Score="2" Body="&lt;p&gt;Decorator pattern is better than inheritance if you have many features to be added and you also require to have combination of these features. Suppose your base class is A, and you want to extend(decorate) this base class with feature f1,f2,f3,f4 and some combination of them like (f1,f2) and (f1,f3) and .. ; so you would require to create 4!=4*3*2*1=24 class in your hierarchy (4 for each feature and the rest for their combination). While, Using decorative pattern, you would only need to create 4 classes! &lt;/p&gt;&#xA;&#xA;&lt;hr&gt;&#xA;&#xA;&lt;p&gt;for @Seyed Morteza Mousavi in @Razvi post:&#xA;You are right, we can add two properties Scrollable and Bordered to View class, then check if the property is set to true so run the desired behaviour. But this requires that we already be aware of the number of the feature we require(which is not the case in decorator pattern). otherwise, with every new  feature (say f1) we want to add to our class, we need to alter our main class, or inherit the main class (you would say) and add the property. Taking latter approach, you would further need to alter the part of the code which handles feature combination (this is not good, since it is not obeying the rule of thumb of &quot;loose coupling!&quot;)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;hope this helps. &lt;/p&gt;&#xA;" OwnerUserId="2757620" LastActivityDate="2014-01-27T21:38:59.057" CommentCount="0" />
  <row Id="21392657" PostTypeId="2" ParentId="21392618" CreationDate="2014-01-27T22:03:26.197" Score="0" Body="&lt;p&gt;You got the lock on B because you deleted from it.&lt;/p&gt;&#xA;" OwnerUserId="3167751" LastActivityDate="2014-01-27T22:03:26.197" CommentCount="1" />
  <row Id="21393288" PostTypeId="2" ParentId="21393195" CreationDate="2014-01-27T22:45:35.163" Score="1" Body="&lt;p&gt;Can you post your &lt;strong&gt;MyContext&lt;/strong&gt; class? An attempt you can make is to change your first code snippet to use your &lt;strong&gt;DbEpicerieEntities&lt;/strong&gt; class instead of the &lt;strong&gt;MyContext&lt;/strong&gt; class.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;UserManagerFactory = () =&amp;gt; new UserManager&amp;lt;IdentityUser&amp;gt;(new UserStore&amp;lt;IdentityUser&amp;gt;(new DbEpicerieEntities()));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="3233464" LastActivityDate="2014-01-27T22:45:35.163" CommentCount="1" />
  <row Id="21393380" PostTypeId="2" ParentId="21393335" CreationDate="2014-01-27T22:51:46.110" Score="4" Body="&lt;p&gt;The possible empty statement is:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;if (Connection != null &amp;amp;&amp;amp; Connection.State == ConnectionState.Closed);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;that &lt;code&gt;;&lt;/code&gt; at the end makes the if statement pointless.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;On another note you should be using &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlcommand.parameters%28v=vs.110%29.aspx&quot; rel=&quot;nofollow&quot;&gt;Parameters&lt;/a&gt; to pass your arguments not pasting the strings directly into the query to protect against an SQL injection attack.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having said all that, your &lt;code&gt;if (dr.HasRows)&lt;/code&gt; statement should still be working correctly, assuming the connection is actually valid etc.&lt;/p&gt;&#xA;" OwnerUserId="865643" LastActivityDate="2014-01-27T22:51:46.110" CommentCount="0" />
  <row Id="21393384" PostTypeId="2" ParentId="21393335" CreationDate="2014-01-27T22:51:58.967" Score="7" Body="&lt;p&gt;This line&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt; if (Connection != null &amp;amp;&amp;amp; Connection.State == ConnectionState.Closed);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;contains a semicolon that cause the warning, but you have just opened the connection, what is the purpose to add this check?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Then there are the &lt;a href=&quot;http://stackoverflow.com/questions/332365/how-does-the-sql-injection-from-the-bobby-tables-xkcd-comic-work&quot;&gt;Sql Injection&lt;/a&gt; and parsing problems caused by your string concatenation &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would change your code to&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;using(SqlConnection Connection = new SqlConnection(....))&#xA;{&#xA;    try&#xA;    {&#xA;        Connection.Open();&#xA;        SqlCommand cmd = new SqlCommand(@&quot;SELECT Count(*) FROM Logins &#xA;                                        WHERE Username=@uname and &#xA;                                        Password=@pass&quot;, Connection);&#xA;        cmd.Parameters.AddWithValue(&quot;@uname&quot;, txtUsername.Text);&#xA;        cmd.Parameters.AddWithValue(&quot;@pass&quot;, txtPassword.Text);&#xA;        int result = (int)cmd.ExecuteScalar();&#xA;        if(result &amp;gt; 0)&#xA;            MessageBox.Show(&quot;Login Success&quot;);&#xA;        else&#xA;            MessageBox.Show(&quot;Incorrect login&quot;);&#xA;    }&#xA;    catch(Exception ex)&#xA;    {&#xA;        MessageBox.Show(&quot;Unexpected error:&quot; + ex.Message);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The parameterized approach is safer because it avoids the Sql Injection problem and move the job of properly quoting your values to the framework code. Also the command text is more readable.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I have also changed your code from ExecuteReader to &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlcommand.executescalar%28v=vs.110%29.aspx&quot; rel=&quot;nofollow&quot;&gt;ExecuteScalar&lt;/a&gt; because you need to retrieve only the first column of the first row returned by your query and don't need an SqlDataReader for that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And the last thing that I need to say is: Catching exceptions just to say that something failed is not a good practice. At least, tell to your user what is the error. Use &lt;code&gt;MessageBox.Show(&quot;Unexpected error: &quot; + ex.Message)&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt; OK sorry but I have another one. Storing passwords in clear text is really a big security problem. The right approach is to store an hash of the password and &lt;a href=&quot;http://stackoverflow.com/questions/2138429/hash-and-salt-passwords-in-c-sharp&quot;&gt;apply the hashing function&lt;/a&gt; to the parameter used to pass the password, in this way only the hash result is transmitted along the wire and, if someone manage to stole the database, it will be very difficult to revert back to the clear values&lt;/p&gt;&#xA;" OwnerUserId="1197518" LastEditorUserId="1197518" LastEditDate="2014-01-27T23:17:32.400" LastActivityDate="2014-01-27T23:17:32.400" CommentCount="3" />
  <row Id="21393460" PostTypeId="2" ParentId="21392864" CreationDate="2014-01-27T22:56:30.260" Score="2" Body="&lt;p&gt;This article describes how to create a custom dictionary for code analysis: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb514188.aspx&quot; rel=&quot;nofollow&quot;&gt;http://msdn.microsoft.com/en-us/library/bb514188.aspx&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Create a file called CustomDictionary.xml and add it to your project. Set the Build Action property of the file to &lt;strong&gt;CodeAnalysisDictionary&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The content of the file should look like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;Dictionary&amp;gt;&#xA;    &amp;lt;Words&amp;gt;&#xA;        &amp;lt;Recognized&amp;gt;&#xA;            &amp;lt;Word&amp;gt;ContentProperty&amp;lt;/Word&amp;gt;&#xA;        &amp;lt;/Recognized&amp;gt;&#xA;    &amp;lt;/Words&amp;gt;&#xA;&amp;lt;/Dictionary&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;As suggested by Dr Willy's Apprentice in comments below it might be a good idea to dynamically generate a dictionary based on the framework's architecture.&lt;/p&gt;&#xA;" OwnerUserId="455904" LastEditorUserId="848975" LastEditDate="2014-01-30T13:23:22.447" LastActivityDate="2014-01-30T13:23:22.447" CommentCount="11" />
  <row Id="21393627" PostTypeId="2" ParentId="21392618" CreationDate="2014-01-27T23:08:15.333" Score="1" Body="&lt;p&gt;Several things could cause the table to be locked until the deletion is through:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;You are directly deleting from the table you are trying to select from &lt;/li&gt;&#xA;&lt;li&gt;You have cascade delete turned on for a parent table to the one that is locked.&lt;/li&gt;&#xA;&lt;li&gt;You have a trigger on another table that you are taking an action from that also deletes from the table.&lt;/li&gt;&#xA;&lt;li&gt;You are trying to delete the tables out of order (child table are always deleted first, then parent ones. When deleting from a parent table, it will check to see if child records exist. This of course takes longer than a straight delete and will cause a rollback if the child data exists which takes longer yet. &lt;/li&gt;&#xA;&lt;li&gt;You have deadlock between two process running at the same time.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="9034" LastActivityDate="2014-01-27T23:08:15.333" CommentCount="1" />
  <row Id="21394209" PostTypeId="2" ParentId="18377818" CreationDate="2014-01-27T23:50:46.740" Score="3" Body="&lt;p&gt;Try this...This should be the quickest route...&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;1) Add a button control.&#xA;2) Add a datagridview control.&#xA;3) Add a single column into the datagridview control.&#xA;4) Add a progressbar control.&#xA;5) Leave them all with default names.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Under the button1_Click event, add this chunk of code...&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;int maxnumber = 1000;&#xA;progressBar1.Value = 0;&#xA;progressBar1.Maximum = maxnumber;&#xA;for (int x = 0; x &amp;lt;= maxnumber - 1; x++)&#xA;{&#xA;    Application.DoEvents();&#xA;    dataGridView1.Rows.Add(new string[] {Convert.ToString(x)});&#xA;    progressBar1.Value += 1;&#xA;    label1.Text = progressBar1.Value.ToString();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;That's it. Edit to suit your needs. This isn't the complete exact code you want but it should get you started. I've taken the liberty to declare maxnumber to hold the limit of the progressbar. In your case, this should be the row count of your database and it's subtracted by 1 since index always starts with zero :)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The method above is single threaded, which means you still can't do multitasking while your loop still isn't done yet. In some cases, depending on the algorithm of the code, using the single threaded method may be faster than going for the multithreading route. Anyhow, the second method would be using a backgroundworker. This is most commonly preferred by people since the user can still do things while the list loads. Kind of like installers where you can cancel installation even if it's in the middle of doing something. The website below should get you started. The code is in VB.NET but can be easily converted to C# :)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://social.msdn.microsoft.com/Forums/vstudio/en-US/efd7510c-43ed-47c4-86a3-1fa350eb0d30/fill-datagridview-using-backgroundworker-progressbar?forum=vbgeneral&quot; rel=&quot;nofollow&quot;&gt;http://social.msdn.microsoft.com/Forums/vstudio/en-US/efd7510c-43ed-47c4-86a3-1fa350eb0d30/fill-datagridview-using-backgroundworker-progressbar?forum=vbgeneral&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1889406" LastEditorUserId="1889406" LastEditDate="2014-01-28T00:32:43.180" LastActivityDate="2014-01-28T00:32:43.180" CommentCount="4" />
  <row Id="21394437" PostTypeId="2" ParentId="21394410" CreationDate="2014-01-28T00:09:01.847" Score="0" Body="&lt;p&gt;There is an &lt;strong&gt;Errors&lt;/strong&gt; property collection attached to the SqlException object.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    for (int i = 0; i &amp;lt; e.Errors.Count; i++)&#xA;    {&#xA;        Console.WriteLine(&quot;Index #&quot; + i + &quot;\n&quot; +&#xA;            &quot;Error: &quot; + e.Errors[i].ToString() + &quot;\n&quot;);&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Walking through this collection will give you all of the errors...&lt;/p&gt;&#xA;" OwnerUserId="210908" LastEditorUserId="210908" LastEditDate="2014-01-28T00:16:32.473" LastActivityDate="2014-01-28T00:16:32.473" CommentCount="1" />
  <row Id="21394540" PostTypeId="2" ParentId="21392864" CreationDate="2014-01-28T00:20:45.627" Score="1" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;Does Code Analysis have a way to tell that a word isn't meant to be spell-checked, &lt;strong&gt;like when surrounded by quotation marks&lt;/strong&gt; or something?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;CA2204 &lt;b&gt;only&lt;/b&gt; applies to string literals, i.e. strings that are hard-coded (surrounded by quotation marks).  Disabling this code analysis rule will not prevent CA from checking the spelling on your class names, public members, or other code properties.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your project is an application framework, where most/all string literals will be targeted at developers (like exception messages), I would recommend disabling this rule.  To me, that makes more sense than coming up with a complicated method of excluding every unrecognized string in exception messages.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another option would be to move the &quot;misspelled&quot; strings into a &lt;code&gt;Resource.resx&lt;/code&gt; file.  However, you'll have the same problem if &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/bb264483.aspx&quot; rel=&quot;nofollow&quot;&gt;CA1703&lt;/a&gt; is enabled.&lt;/p&gt;&#xA;" OwnerUserId="3225495" LastActivityDate="2014-01-28T00:20:45.627" CommentCount="1" />
  <row Id="21395916" PostTypeId="2" ParentId="21393195" CreationDate="2014-01-28T02:47:35.817" Score="2" Body="&lt;p&gt;Using the following connection string solved the problem for me :&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;add name=&quot;DefaultConnection&quot; connectionString=&quot;Data Source=localhost;Initial Catalog=Epicerie;Integrated Security=True;&quot; providerName=&quot;System.Data.SqlClient&quot; /&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="3242677" LastActivityDate="2014-01-28T02:47:35.817" CommentCount="0" />
  <row Id="21396277" PostTypeId="2" ParentId="21375925" CreationDate="2014-01-28T03:28:15.943" Score="0" Body="&lt;p&gt;So it turns out the problem is that if any of the assemblies that you hope to instrument over have spaces in their names, the &quot;Profile Test&quot; option fails to instrument them, which in turn means that no data is collected (because &quot;Profile Test&quot; appears to only use Instrumentation).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Obviously the workaround is to just not have assemblies with spaces in their names.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I logged a bug &lt;a href=&quot;https://connect.microsoft.com/VisualStudio/feedback/details/814742/unable-to-profile-test-no-data-collected&quot; rel=&quot;nofollow&quot;&gt;on Microsoft Connect&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="588290" LastActivityDate="2014-01-28T03:28:15.943" CommentCount="0" />
  <row Id="21398332" PostTypeId="2" ParentId="21398171" CreationDate="2014-01-28T06:21:27.940" Score="0" Body="&lt;p&gt;Assuming you've read the above caveats in the comment, and assuming that you are on Sql Server, and assuming you have some sort of key on OrnekTbl (I've used &lt;code&gt;Name&lt;/code&gt;):&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;CREATE TRIGGER t_CalcUnitPrice ON OrnekTbl FOR INSERT, UPDATE AS&#xA;BEGIN&#xA;    UPDATE o&#xA;      -- Depending on the various types of your columns, CAST(x as DECIMAL(N, M)) may be needed&#xA;      SET o.UnitPrice = i.TotalPrice / i.Quantity&#xA;      FROM &#xA;         INSERTED i &#xA;           INNER JOIN OrnekTbl o &#xA;           ON i.Name = o.Name&#xA;      WHERE i.Quantity &amp;gt; 0; -- Avoid Div Zero&#xA;END;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;But I wouldn't really want to be the maintenance dev on your App FWIW - triggers work behind the scenes and hence not immediately obvious w.r.t. understanding and readability.&lt;/p&gt;&#xA;" OwnerUserId="314291" LastActivityDate="2014-01-28T06:21:27.940" CommentCount="5" />
  <row Id="21399112" PostTypeId="2" ParentId="18837225" CreationDate="2014-01-28T07:12:21.473" Score="0" Body="&lt;p&gt;That means that there was an internal error - most likely Xamarin Studio could not connect to the build engine process, or the build engine process crashed. Please check the logs from Help-&gt;Open Log Directory, there should be a more complete error trace in there&lt;/p&gt;&#xA;" OwnerUserId="2926921" LastActivityDate="2014-01-28T07:12:21.473" CommentCount="0" />
  <row Id="21399199" PostTypeId="2" ParentId="4166381" CreationDate="2014-01-28T07:17:52.313" Score="0" Body="&lt;p&gt;In TDD, all the requirements are expressed as tests. If you fake something and all tests pass, your requirements are fulfilled. If this is not giving you the expected behavior, then you have not expressed all your requirements as tests.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you continue faking stuff at this point, you will eventually notice that the easiest solution would be to actually solve the problem.&lt;/p&gt;&#xA;" OwnerUserId="681538" LastActivityDate="2014-01-28T07:17:52.313" CommentCount="0" />
  <row Id="21399557" PostTypeId="2" ParentId="18377818" CreationDate="2014-01-28T07:39:34.067" Score="7" Body="&lt;p&gt;If the problem is that it takes long to fetch the data from the database, i have a possible solution for you:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    private void buttonLoad_Click(object sender, EventArgs e)&#xA;    {&#xA;        progressBar.Visible = true;&#xA;        progressBar.Style = ProgressBarStyle.Marquee;&#xA;        System.Threading.Thread thread = &#xA;          new System.Threading.Thread(new System.Threading.ThreadStart(loadTable));&#xA;        thread.Start();&#xA;    }&#xA;&#xA;    private void loadTable()&#xA;    {&#xA;        // Load your Table...&#xA;        DataTable table = new DataTable();&#xA;        SqlDataAdapter SDA = new SqlDataAdapter();&#xA;        SDA.Fill(table);&#xA;        setDataSource(table);&#xA;    }&#xA;&#xA;    internal delegate void SetDataSourceDelegate(DataTable table);&#xA;    private void setDataSource(DataTable table)&#xA;    {&#xA;        // Invoke method if required:&#xA;        if (this.InvokeRequired)&#xA;        {&#xA;            this.Invoke(new SetDataSourceDelegate(setDataSource), table);&#xA;        }&#xA;        else&#xA;        {&#xA;            dataGridView.DataSource = table;&#xA;            progressBar.Visible = false;&#xA;        }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Put the method loading the data into another thread and set the datasource when it's finished. There should be an invoke required. If you want to show percentage values in the progressbar, don't use the style 'Marquee' and add another function and delegate you can invoke for setting the value of the progress bar.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If binding the data to the grid is the problem, then you can not put the binding into another thread and you may show a progress-popup that runs in another thread.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I hope this helps.&lt;/p&gt;&#xA;" OwnerUserId="2015870" LastActivityDate="2014-01-28T07:39:34.067" CommentCount="0" />
  <row Id="21399723" PostTypeId="2" ParentId="21399549" CreationDate="2014-01-28T07:49:35.943" Score="-1" Body="&lt;p&gt;Sounds like OOO (object oriented overkill). The solution is to abstract to a reasonable level. In this case, if you are &quot;baffled&quot; and it &quot;never made sense&quot;, it's probably unnecessary. There is no right or wrong way to do it, but in my opinion, you won't have any problem doing what you described.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;Of course varchar takes more space than a FK. Calculate the number of records you're planning on storing, and you'll get the size difference. Is is negligible? Probably.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;If anything, that should be faster than populating from a database.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="1377021" LastActivityDate="2014-01-28T07:49:35.943" CommentCount="0" />
  <row Id="21399839" PostTypeId="2" ParentId="21399549" CreationDate="2014-01-28T07:55:26.877" Score="-1" Body="&lt;p&gt;1) CPU only talk in binary, the closest data in our world is number.&#xA;the string/varchar you using, will be translate/map to number when the cpu is crunching them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;so theoritically+logically, using number should be best option&lt;/p&gt;&#xA;&#xA;&lt;p&gt;as for whether the performance gain will be &quot;significant&quot;, this only is more tangible when you testing on a huge volume of data, you have to measure them.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;in db general/best practice, number is recommended as key.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;but imo, varchar should be no difference, though you have to be aware the case-sensitivity(collateral) may break your design&lt;/p&gt;&#xA;&#xA;&lt;p&gt;so using number will save you alot of unforsee/future/integration problems.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;2)&#xA;if you are into performance, denormalization is the generally one of the approach.&#xA;but you should only go into this if you really need the performance and have no better alternative.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;you need to understand why/should you adopt normalization, which generally yield more practical benefits than denormalization.&lt;/p&gt;&#xA;" OwnerUserId="782132" LastActivityDate="2014-01-28T07:55:26.877" CommentCount="0" />
  <row Id="21400332" PostTypeId="2" ParentId="21106570" CreationDate="2014-01-28T08:24:39.237" Score="0" Body="&lt;p&gt;Try this link. It might be useful for you. As it is an example of how to insert data into database.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.codeproject.com/Questions/457705/Csharp-add-data-to-sql-table&quot; rel=&quot;nofollow&quot;&gt;C# add data to sql table&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="3240038" LastActivityDate="2014-01-28T08:24:39.237" CommentCount="0" />
  <row Id="21400728" PostTypeId="2" ParentId="21384357" CreationDate="2014-01-28T08:47:35.507" Score="1" Body="&lt;p&gt;Following code works... Suggestions are welcome.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt; public static List&amp;lt;Product&amp;gt; GetProductsBasedOnInputFilters(List&amp;lt;Product&amp;gt; productList, List&amp;lt;Specification&amp;lt;Product&amp;gt;&amp;gt; productSpecifications)&#xA; {&#xA;            IEnumerable&amp;lt;Product&amp;gt; selectedList = productList;&#xA;            foreach (Specification&amp;lt;Product&amp;gt; specification in productSpecifications)&#xA;            {&#xA;                selectedList = selectedList.Where(specification.IsSatisfiedBy);&#xA;            }&#xA;            return selectedList.ToList();&#xA; }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;It is worth to take a look at the following too..&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://blogs.msdn.com/b/charlie/archive/2008/01/31/expression-tree-basics.aspx&quot; rel=&quot;nofollow&quot;&gt;Expression Tree Basics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://blogs.msdn.com/b/csharpfaq/archive/2009/09/14/generating-dynamic-methods-with-expression-trees-in-visual-studio-2010.aspx&quot; rel=&quot;nofollow&quot;&gt;Generating Dynamic Methods with Expression Trees in Visual Studio 2010&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://www.albahari.com/nutshell/predicatebuilder.aspx&quot; rel=&quot;nofollow&quot;&gt;Dynamically Composing Expression Predicates&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="696627" LastActivityDate="2014-01-28T08:47:35.507" CommentCount="0" />
  <row Id="21401250" PostTypeId="2" ParentId="21396910" CreationDate="2014-01-28T09:11:43.430" Score="0" Body="&lt;p&gt;try with &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;recToUpdate.Value = &quot;100&quot;; // instead of 50&#xA;int i =  db.Update(recToUpdate);&#xA;//check number of rows updated (i), db.Update() returns number of rows updated...&#xA;//or first try with recToUpdate.Value = 100; and see the number of rows affected + use try/catch if an error appears. &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1793906" LastEditorUserId="1793906" LastEditDate="2014-01-28T09:27:02.080" LastActivityDate="2014-01-28T09:27:02.080" CommentCount="1" />
  <row Id="21401321" PostTypeId="2" ParentId="21384357" CreationDate="2014-01-28T09:14:26.100" Score="1" Body="&lt;p&gt;You can do one of several things:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;Combine the filters by stacking &lt;code&gt;Where&lt;/code&gt; invocations on top of each other, like in @Lijo's answer&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Check all specifications on each item:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;return productList&#xA;  .Where(p =&amp;gt; specifications.All(ps =&amp;gt; ps.IsSatisfiedBy(p))&#xA;  .ToList()&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Create a composite 'And' specification that accepts multiple children instead of just two:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class AndSpecification&amp;lt;T&amp;gt; : ISpecification&amp;lt;T&amp;gt;&#xA;{&#xA;    private ISpecification&amp;lt;T&amp;gt;[] _components;&#xA;&#xA;    public AndSpecification(ISpecification&amp;lt;T&amp;gt;[] components) &#xA;    {&#xA;      _components = components;&#xA;    }&#xA;&#xA;    public bool IsSatisfiedBy(T item) &#xA;    {&#xA;      return components.All(c =&amp;gt; c.IsSatisfiedBy(item));&#xA;    }&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Then you could do:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var allFiltersSpecification = new AndSpecification(specifications)&#xA;return productList.Where(allFiltersSpecification.IsSatisfiedBy);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="119694" LastEditorUserId="119694" LastEditDate="2014-01-28T11:50:06.390" LastActivityDate="2014-01-28T11:50:06.390" CommentCount="3" />
  <row Id="21402374" PostTypeId="2" ParentId="21402301" CreationDate="2014-01-28T10:02:07.997" Score="1" Body="&lt;p&gt;You should pass dbnull value then the parameter value is null:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SqlParameter[] sqlParams = new SqlParameter[] { &#xA;            new SqlParameter(&quot;@UserName&quot;,(object)userName ?? DBNull.Value),&#xA;            new SqlParameter(&quot;@Password&quot;,(object)password ?? DBNull.Value)&#xA;  };&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="2236151" LastEditorUserId="2236151" LastEditDate="2014-01-28T10:11:08.980" LastActivityDate="2014-01-28T10:11:08.980" CommentCount="4" />
  <row Id="21404626" PostTypeId="2" ParentId="21403405" CreationDate="2014-01-28T11:38:18.283" Score="0" Body="&lt;p&gt;Here is a complete Server test console program. It is easily testable using telnet client:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;telnet localhost 3000&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;Note, that you will not be able to see what you type, but when you press &lt;em&gt;Enter&lt;/em&gt;, all the line will be sent to the server. But since the server echoes the data (when it receives the &lt;code&gt;&amp;lt;EOF&amp;gt;&lt;/code&gt; string), you will see that in the telnet console as a response.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is mostly your code.&#xA;I added many *Console.WriteLine*s for you to better understand the flow of events, the multithreading nature of the asynchronous Socket usage.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Note the changes in the &lt;code&gt;while(true)&lt;/code&gt; loop: when the server receives &lt;code&gt;end&amp;lt;EOF&amp;gt;&lt;/code&gt; it will not only set &lt;em&gt;IsEnded&lt;/em&gt; to &lt;em&gt;true&lt;/em&gt;, but will also set the &lt;em&gt;ManualResetEvent&lt;/em&gt;, so that the waiting listening thread unblock and notice the &lt;em&gt;IsEnded&lt;/em&gt; flag.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also to get rid of the second &lt;em&gt;SocketException&lt;/em&gt; (in &lt;em&gt;Socket.Shutdown&lt;/em&gt;) you &lt;strong&gt;WILL NOT try to shutdown your listening socket&lt;/strong&gt;. Shutdown only the sockets you read and write from.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also note the &lt;code&gt;try-catch(ObjectDisposedException)&lt;/code&gt; in the AcceptCallback: with my code you will not likely stumble upon this exception, but as I wrote the sample, I used it to grasefully catch the event of closing the listening socket.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;using System;&#xA;using System.Net;&#xA;using System.Net.Sockets;&#xA;using System.Text;&#xA;using System.Threading;&#xA;&#xA;class Program&#xA;{&#xA;    static void Main(string[] args)&#xA;    {&#xA;        var asyncSocketListener = new AsynchronousSocketListener();&#xA;        var listenerThread = new Thread(asyncSocketListener.StartListening);&#xA;        listenerThread.Start();&#xA;        Console.WriteLine(&quot;Server Started&quot;);&#xA;&#xA;        listenerThread.Join();&#xA;        Console.WriteLine(&quot;Press any key to exit...&quot;);&#xA;        Console.ReadKey();&#xA;    }&#xA;&#xA;    public class Singleton&#xA;    {&#xA;        private static Singleton instance;&#xA;        private bool isEnded;&#xA;&#xA;        private Singleton() { }&#xA;&#xA;        public static Singleton Instance&#xA;        {&#xA;            get&#xA;            {&#xA;                if (instance == null)&#xA;                {&#xA;                    instance = new Singleton();&#xA;                }&#xA;                return instance;&#xA;            }&#xA;        }&#xA;&#xA;        public bool IsEnded&#xA;        {&#xA;            get { return isEnded; }&#xA;            set { isEnded = value; }&#xA;        }&#xA;    }&#xA;&#xA;    public class AsynchronousSocketListener&#xA;    {&#xA;        // State object for reading client data asynchronously&#xA;        private class StateObject&#xA;        {&#xA;            // Size of receive buffer.&#xA;            public const int BufferSize = 1024;&#xA;            // Receive buffer.&#xA;            public byte[] Buffer = new byte[BufferSize];&#xA;            // Client  socket.&#xA;            public Socket WorkSocket;&#xA;            // Received data string.&#xA;            public StringBuilder Sb = new StringBuilder();&#xA;        }&#xA;&#xA;        // Thread signal.&#xA;        private static ManualResetEvent allDone = new ManualResetEvent(false);&#xA;&#xA;        public void StartListening()&#xA;        {&#xA;            var localEndPoint = new IPEndPoint(IPAddress.Any, 3000);&#xA;            var listener = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);&#xA;&#xA;            // Bind the socket to the local endpoint and listen for incoming connections.&#xA;            try&#xA;            {&#xA;                listener.Bind(localEndPoint);&#xA;                listener.Listen(100);&#xA;                Console.WriteLine(&quot;Listening on {0}...&quot;, localEndPoint.ToString());&#xA;&#xA;                while (true)&#xA;                {&#xA;                    allDone.Reset();&#xA;&#xA;                    if (Singleton.Instance.IsEnded)&#xA;                    {&#xA;                        Console.WriteLine(&quot;Closing listener socket...&quot;);&#xA;&#xA;                        listener.Close();&#xA;                        break;&#xA;                    }&#xA;&#xA;                    Console.WriteLine(&quot;Waiting for a new connection...&quot;);&#xA;                    listener.BeginAccept(AcceptCallback, state: listener);&#xA;&#xA;                    allDone.WaitOne();&#xA;                }&#xA;&#xA;                Console.WriteLine(&quot;Server stopped.&quot;);&#xA;            }&#xA;            catch (Exception e)&#xA;            {&#xA;                Console.WriteLine(e.ToString());&#xA;            }&#xA;        }&#xA;&#xA;        public static void AcceptCallback(IAsyncResult ar)&#xA;        {&#xA;            Socket clientSocket;&#xA;            try&#xA;            {&#xA;                clientSocket = ((Socket)ar.AsyncState).EndAccept(ar);&#xA;            }&#xA;            catch (ObjectDisposedException)&#xA;            {&#xA;                Console.WriteLine(&quot; Listening socket has been closed.&quot;);&#xA;                allDone.Set();&#xA;                return;&#xA;            }&#xA;&#xA;            Console.WriteLine(&quot; Connection accepted {0}&quot;, clientSocket.RemoteEndPoint.ToString());&#xA;&#xA;            var stateObject = new StateObject { WorkSocket = clientSocket };&#xA;            clientSocket.BeginReceive(stateObject.Buffer, 0, StateObject.BufferSize, 0, ReadCallback, stateObject);&#xA;&#xA;            // Signal the main thread to continue.&#xA;            Console.WriteLine(&quot; Signal the main thread to accept a new connection&quot;);&#xA;            allDone.Set();&#xA;        }&#xA;&#xA;        public static void ReadCallback(IAsyncResult ar)&#xA;        {&#xA;            string content;&#xA;&#xA;            // Retrieve the state object and the handler socket&#xA;            // from the asynchronous state object.&#xA;            var stateObject = (StateObject)ar.AsyncState;&#xA;            Socket clientSocket = stateObject.WorkSocket;&#xA;&#xA;            // Read data from the client socket. &#xA;            int bytesRead = clientSocket.EndReceive(ar);&#xA;&#xA;            if (bytesRead &amp;gt; 0)&#xA;            {&#xA;                // There  might be more data, so store the data received so far.&#xA;                stateObject.Sb.Append(Encoding.ASCII.GetString(stateObject.Buffer, 0, bytesRead));&#xA;&#xA;                // Check for end-of-file tag. If it is not there, read &#xA;                // more data.&#xA;                content = stateObject.Sb.ToString();&#xA;                if (content.IndexOf(&quot;&amp;lt;EOF&amp;gt;&quot;) &amp;gt; -1)&#xA;                {&#xA;                    // All the data has been read from the &#xA;                    // client. Display it on the console.&#xA;                    Console.WriteLine(&quot;     Read {0} bytes from socket. \n      Data : {1}&quot;, content.Length, content);&#xA;                    if (content.Equals(&quot;end&amp;lt;EOF&amp;gt;&quot;))&#xA;                    {&#xA;                        Console.WriteLine(&quot;     !!!Should stop the server&quot;);&#xA;                        Singleton.Instance.IsEnded = true;&#xA;                        allDone.Set();&#xA;                    }&#xA;&#xA;                    // Echo the data back to the client.&#xA;                    byte[] byteData = Encoding.ASCII.GetBytes(content);&#xA;                    clientSocket.BeginSend(byteData, 0, byteData.Length, 0, WriteCallback, clientSocket);&#xA;                }&#xA;                else&#xA;                {&#xA;                    // Not all data received. Get more.&#xA;                    clientSocket.BeginReceive(stateObject.Buffer, 0, StateObject.BufferSize, 0, ReadCallback, stateObject);&#xA;                }&#xA;            }&#xA;        }&#xA;&#xA;        private static void WriteCallback(IAsyncResult ar)&#xA;        {&#xA;            try&#xA;            {&#xA;                // Retrieve the socket from the state object.&#xA;                var clientSocket = (Socket)ar.AsyncState;&#xA;&#xA;                // Complete sending the data to the remote device.&#xA;                int bytesSent = clientSocket.EndSend(ar);&#xA;                Console.WriteLine(&quot;         Sent {0} bytes to client.&quot;, bytesSent);&#xA;                Console.WriteLine(&quot;         Disconnecting the client...&quot;);&#xA;&#xA;                clientSocket.Shutdown(SocketShutdown.Both);&#xA;                clientSocket.Close();&#xA;&#xA;                Console.WriteLine(&quot;         Client disconnected.&quot;);&#xA;            }&#xA;            catch (Exception e)&#xA;            {&#xA;                Console.WriteLine(e.ToString());&#xA;            }&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1876226" LastEditorUserId="1876226" LastEditDate="2014-01-29T09:26:57.983" LastActivityDate="2014-01-29T09:26:57.983" CommentCount="4" />
  <row Id="21404726" PostTypeId="2" ParentId="21404645" CreationDate="2014-01-28T11:42:58.350" Score="5" Body="&lt;p&gt;It enables you to do things like:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SettingsManager settings = new SettingsManager();&#xA;var setting = settings[&quot;my setting&quot;];&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;A common use is with the &lt;code&gt;List&amp;lt;T&amp;gt;&lt;/code&gt; class.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It has the definition:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class List&amp;lt;T&amp;gt; : IList&amp;lt;T&amp;gt;, ICollection&amp;lt;T&amp;gt;, IList, ICollection, IReadOnlyList&amp;lt;T&amp;gt;, IReadOnlyCollection&amp;lt;T&amp;gt;, IEnumerable&amp;lt;T&amp;gt;, IEnumerable&#xA;{&#xA;    // ....&#xA;&#xA;    public T this[int index] { get; set; }&#xA;&#xA;    // ....&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This allows you to 'index' the internal values in a similar way to an array.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;using System;&#xA;using System.Collections.Generic;&#xA;using System.IO;&#xA;using System.Linq;&#xA;using System.Text;&#xA;using System.Threading;&#xA;using System.Threading.Tasks;&#xA;&#xA;namespace test&#xA;{&#xA;    static class Program&#xA;    {&#xA;        static void Main()&#xA;        {&#xA;            List&amp;lt;string&amp;gt; myStrings = new List&amp;lt;string&amp;gt;();&#xA;&#xA;            myStrings.Add(&quot;abc&quot;);&#xA;            myStrings.Add(&quot;def&quot;);&#xA;&#xA;            Console.WriteLine(myStrings[0]); // outputs: &quot;abc&quot;&#xA;            Console.WriteLine(myStrings[1]); // outputs: &quot;def&quot;&#xA;&#xA;            Console.Read();&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1213006" LastEditorUserId="1213006" LastEditDate="2014-01-28T11:48:52.077" LastActivityDate="2014-01-28T11:48:52.077" CommentCount="0" />
  <row Id="21404731" PostTypeId="2" ParentId="21404645" CreationDate="2014-01-28T11:43:05.617" Score="5" Body="&lt;p&gt;They are &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/6x16t2tx.aspx&quot;&gt;indexers&lt;/a&gt;, allowing to access your class like an array, in the example your provided you see the usage in this line:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var result = Handler[key];&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="3042204" LastActivityDate="2014-01-28T11:43:05.617" CommentCount="1" />
  <row Id="21404934" PostTypeId="2" ParentId="21404668" CreationDate="2014-01-28T11:53:04.830" Score="1" Body="&lt;p&gt;If you want to omit the value for the first column, just add &lt;code&gt;null&lt;/code&gt; or &lt;a href=&quot;http://msdn.microsoft.com/en-US/library/system.dbnull.value%28v=vs.110%29.aspx&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;DBNull.Value&lt;/code&gt;&lt;/a&gt;, e.g.:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;DataGridView1.Rows.Add(DBNull.Value, Count++);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This way, the first column will be empty while the second columns contains the value of &lt;code&gt;Count&lt;/code&gt;.&lt;/p&gt;&#xA;" OwnerUserId="142637" LastActivityDate="2014-01-28T11:53:04.830" CommentCount="0" />
  <row Id="21405024" PostTypeId="2" ParentId="15169083" CreationDate="2014-01-28T11:56:26.040" Score="0" Body="&lt;p&gt;without doing anything else that works fine for me.&#xA;&lt;img src=&quot;http://i.stack.imgur.com/1NQqC.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&#xA;" OwnerUserId="2545990" LastActivityDate="2014-01-28T11:56:26.040" CommentCount="0" />
  <row Id="21405286" PostTypeId="2" ParentId="21404986" CreationDate="2014-01-28T12:08:19.487" Score="1" Body="&lt;p&gt;There's no way to unit test this code in isolation. You'd better write an integration test for it where you would have some IIS instance to test it on.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You could abstract this logic behind an interface:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public interface IWebServer&#xA;{&#xA;    void AppPoolRemoval(string poolName);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;and then unit test in isolation the code that depends on this. But the actual implementation which is tied to a real &lt;code&gt;ServerManager&lt;/code&gt; cannot be unit tested.&lt;/p&gt;&#xA;" OwnerUserId="29407" LastActivityDate="2014-01-28T12:08:19.487" CommentCount="1" />
  <row Id="21406258" PostTypeId="2" ParentId="21405946" CreationDate="2014-01-28T13:01:36.633" Score="4" Body="&lt;p&gt;Creating &lt;code&gt;SqlConnection&lt;/code&gt; with a connection string which has no &lt;code&gt;DataSource&lt;/code&gt; results in a default value which is an empty string (&quot;&quot;).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;empty string (&quot;&quot;) will be translated later to &lt;code&gt;localhost&lt;/code&gt;, try &lt;code&gt;ping &quot;&quot;&lt;/code&gt; from &lt;code&gt;cmd&lt;/code&gt; and see you actually pinging &lt;code&gt;localhost&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;See &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/d7469at0%28v=vs.110%29.aspx&quot; rel=&quot;nofollow&quot; title=&quot;SqlConnection&quot;&gt;MSDN SqlConnection&lt;/a&gt;, Remarks section - &lt;code&gt;DataSource&lt;/code&gt; initial value is &lt;code&gt;empty string (&quot;&quot;)&#xA;&lt;/code&gt;&lt;/p&gt;&#xA;" OwnerUserId="1361084" LastActivityDate="2014-01-28T13:01:36.633" CommentCount="1" />
  <row Id="21406313" PostTypeId="2" ParentId="21405946" CreationDate="2014-01-28T13:04:08.780" Score="0" Body="&lt;p&gt;The default host name is your localhost.So it will connect your localhost without specifying servername &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/d7469at0%28v=vs.110%29.aspx&quot; rel=&quot;nofollow&quot;&gt;MSDN&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="3081648" LastActivityDate="2014-01-28T13:04:08.780" CommentCount="2" />
  <row Id="21406769" PostTypeId="2" ParentId="21406492" CreationDate="2014-01-28T13:23:29.903" Score="3" Body="&lt;p&gt;By looking at the code you provided, it seems to me that your logic for combining filters is sound. The problem is the &lt;code&gt;List&amp;lt;Specification&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt;. By having compound specification in place, you can combine them and only pass a &lt;code&gt;Specification&amp;lt;T&amp;gt;&lt;/code&gt; (which would be a &lt;code&gt;CompositeSpecification&amp;lt;T&amp;gt;&lt;/code&gt;):&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;class Program&#xA;{&#xA;&#xA;    static void Main(string[] args)&#xA;    {&#xA;&#xA;        List&amp;lt;Product&amp;gt; list = new List&amp;lt;Product&amp;gt;();&#xA;&#xA;        Product p1 = new Product(false, 99);&#xA;        Product p2 = new Product(true, 99);&#xA;        Product p3 = new Product(true, 101);&#xA;        Product p4 = new Product(true, 110);&#xA;        Product p5 = new Product(false, 110);&#xA;&#xA;        list.Add(p1);&#xA;        list.Add(p2);&#xA;        list.Add(p3);&#xA;        list.Add(p4);&#xA;        list.Add(p5);&#xA;&#xA;        double priceLimit = 100;&#xA;&#xA;         var specification =&#xA;             new OnSaleSpecificationForProduct()&#xA;                 .And(new PriceGreaterThanSpecificationForProduct(priceLimit)&#xA;                              .Or(new PriceGreaterThan105()));&#xA;&#xA;        List&amp;lt;Product&amp;gt; selectedList = ProductFilterHelper.GetProductsBasedOnInputFilters(list, specification);&#xA;&#xA;        Console.ReadKey();&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And your filtering method becomes:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt; public static List&amp;lt;Product&amp;gt; GetProductsUisngDynamicFilters(List&amp;lt;Product&amp;gt; productList, Specification&amp;lt;Product&amp;gt; productSpecification)&#xA;    {&#xA;        return productList.Where(p =&amp;gt; productSpecification.IsSatisfiedBy(p))&#xA;                          .ToList();&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;As a side note, you should consider moving the &lt;code&gt;Or&lt;/code&gt;, &lt;code&gt;And&lt;/code&gt; and &lt;code&gt;Not&lt;/code&gt; method from the abstract &lt;code&gt;Specification&amp;lt;T&amp;gt;&lt;/code&gt; to an extension method. And perhaps use interfaces instead.&lt;/p&gt;&#xA;" OwnerUserId="2518184" LastEditorUserId="2518184" LastEditDate="2014-01-28T14:50:07.283" LastActivityDate="2014-01-28T14:50:07.283" CommentCount="0" />
  <row Id="21406791" PostTypeId="2" ParentId="13108222" CreationDate="2014-01-28T13:24:08.720" Score="0" Body="&lt;p&gt;I have created one article which explains SOLID with simple C# examples &lt;a href=&quot;http://www.codeproject.com/Articles/703634/SOLID-architecture-principles-using-simple-Csharp&quot; rel=&quot;nofollow&quot;&gt;http://www.codeproject.com/Articles/703634/SOLID-architecture-principles-using-simple-Csharp&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="993672" LastActivityDate="2014-01-28T13:24:08.720" CommentCount="0" />
  <row Id="21406808" PostTypeId="2" ParentId="21405367" CreationDate="2014-01-28T13:24:54.467" Score="2" Body="&lt;p&gt;I am not sure about your problem, but did you close the listener before you start to listen again?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I think the exception got raised because you want to listen on a reserverd port.&#xA;Try to close the listener before you start to listen again on the port 3000.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;tcpListener.Close();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Greeds,&#xA;Lacky&lt;/p&gt;&#xA;" OwnerUserId="1835201" LastActivityDate="2014-01-28T13:24:54.467" CommentCount="0" />
  <row Id="21406874" PostTypeId="2" ParentId="6597930" CreationDate="2014-01-28T13:27:30.447" Score="0" Body="&lt;p&gt;Here is an update for Visual Studio 2012 T4 Template to generate a simple DTO objects on the base of an existing EDMX file. It skips navigational properties and only generates simple properties.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Using &lt;a href=&quot;http://automapper.codeplex.com/&quot; rel=&quot;nofollow&quot;&gt;AutoMapper&lt;/a&gt; I was able to copy my POCO data into the DTO objects. &#xA;These are serializiable and can be transported as XML. When rebuilding the objects a the target site it is possible to attach them to the dbContext and call DetectChanges(). &#xA;References will be fixed thereafter.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;#@ template language=&quot;C#&quot; debug=&quot;true&quot; hostspecific=&quot;true&quot; #&amp;gt;&#xA;&amp;lt;#@ Assembly Name=&quot;System.Core, Version=4.0.0.0, Culture=neutral&quot; #&amp;gt;&#xA;&amp;lt;#@ Assembly Name=&quot;Microsoft.CSharp, Version=4.0.0.0, Culture=neutral&quot; #&amp;gt;&#xA;&amp;lt;#@ include file=&quot;EF.Utility.CS.ttinclude&quot;#&amp;gt;&#xA;&amp;lt;#@ output extension=&quot;.cs&quot;#&amp;gt;&#xA;&amp;lt;#&#xA;&#xA;&#xA;const string inputFile = @&quot;../Model/ModelTest.edmx&quot;;&#xA;var textTransform = DynamicTextTransformation.Create(this);&#xA;var code = new CodeGenerationTools(this);&#xA;var ef = new MetadataTools(this);&#xA;var typeMapper = new TypeMapper(code, ef, textTransform.Errors);&#xA;var fileManager = EntityFrameworkTemplateFileManager.Create(this);&#xA;var itemCollection = new EdmMetadataLoader(textTransform.Host, textTransform.Errors).CreateEdmItemCollection(inputFile);&#xA;var codeStringGenerator = new CodeStringGenerator(code, typeMapper, ef);&#xA;&#xA;if (!typeMapper.VerifyCaseInsensitiveTypeUniqueness(typeMapper.GetAllGlobalItems(itemCollection), inputFile))&#xA;{&#xA;    return string.Empty;&#xA;}&#xA;&#xA;WriteHeader(codeStringGenerator, fileManager);&#xA;&#xA;foreach (var entity in typeMapper.GetItemsToGenerate&amp;lt;EntityType&amp;gt;(itemCollection))&#xA;{&#xA;    fileManager.StartNewFile(entity.Name + &quot;Dto.cs&quot;);&#xA;    BeginNamespace(code);&#xA;#&amp;gt;&#xA;&amp;lt;#=codeStringGenerator.UsingDirectives(false)#&amp;gt;&#xA;&amp;lt;#=codeStringGenerator.EntityClassOpening(entity)#&amp;gt;&#xA;{&#xA;&amp;lt;#&#xA;    var simpleProperties = typeMapper.GetSimpleProperties(entity);&#xA;    if (simpleProperties.Any())&#xA;    {&#xA;        foreach (var edmProperty in simpleProperties)&#xA;        {&#xA;#&amp;gt;&#xA;    &amp;lt;#=codeStringGenerator.Property(edmProperty)#&amp;gt;&#xA;&amp;lt;#&#xA;        }&#xA;    }&#xA;#&amp;gt;&#xA;}&#xA;&amp;lt;#&#xA;    EndNamespace(code);&#xA;}&#xA;&#xA;foreach (var complex in typeMapper.GetItemsToGenerate&amp;lt;ComplexType&amp;gt;(itemCollection))&#xA;{&#xA;    fileManager.StartNewFile(complex.Name + &quot;.cs&quot;);&#xA;    BeginNamespace(code);&#xA;#&amp;gt;&#xA;&amp;lt;#=codeStringGenerator.UsingDirectives(false, false)#&amp;gt;&#xA;&amp;lt;#=Accessibility.ForType(complex)#&amp;gt; partial class &amp;lt;#=code.Escape(complex)#&amp;gt;&#xA;{&#xA;&amp;lt;#&#xA;&#xA;    var simpleProperties = typeMapper.GetSimpleProperties(complex);&#xA;    if (simpleProperties.Any())&#xA;    {&#xA;        foreach(var edmProperty in simpleProperties)&#xA;        {&#xA;#&amp;gt;&#xA;    &amp;lt;#=codeStringGenerator.Property(edmProperty)#&amp;gt;&#xA;&amp;lt;#&#xA;        }&#xA;    }&#xA;#&amp;gt;&#xA;}&#xA;&amp;lt;#&#xA;    EndNamespace(code);&#xA;}&#xA;fileManager.Process();&#xA;#&amp;gt;&#xA;&#xA;&amp;lt;#+&#xA;&#xA;public void WriteHeader(CodeStringGenerator codeStringGenerator, EntityFrameworkTemplateFileManager fileManager)&#xA;{&#xA;    fileManager.StartHeader();&#xA;#&amp;gt;&#xA;//------------------------------------------------------------------------------&#xA;// &amp;lt;auto-generated&amp;gt;&#xA;// &amp;lt;#=GetResourceString(&quot;Template_GeneratedCodeCommentLine1&quot;)#&amp;gt;&#xA;//&#xA;// &amp;lt;#=GetResourceString(&quot;Template_GeneratedCodeCommentLine2&quot;)#&amp;gt;&#xA;// &amp;lt;#=GetResourceString(&quot;Template_GeneratedCodeCommentLine3&quot;)#&amp;gt;&#xA;// &amp;lt;/auto-generated&amp;gt;&#xA;//------------------------------------------------------------------------------&#xA;&amp;lt;#=codeStringGenerator.UsingDirectives(true)#&amp;gt;&#xA;&amp;lt;#+&#xA;    fileManager.EndBlock();&#xA;}&#xA;&#xA;public void BeginNamespace(CodeGenerationTools code)&#xA;{&#xA;    var codeNamespace = code.VsNamespaceSuggestion();&#xA;    if (!String.IsNullOrEmpty(codeNamespace))&#xA;    {&#xA;#&amp;gt;&#xA;namespace &amp;lt;#=code.EscapeNamespace(codeNamespace)#&amp;gt;&#xA;{&#xA;&amp;lt;#+&#xA;        PushIndent(&quot;    &quot;);&#xA;    }&#xA;}&#xA;&#xA;public void EndNamespace(CodeGenerationTools code)&#xA;{&#xA;    if (!String.IsNullOrEmpty(code.VsNamespaceSuggestion()))&#xA;    {&#xA;        PopIndent();&#xA;#&amp;gt;&#xA;}&#xA;&amp;lt;#+&#xA;    }&#xA;}&#xA;&#xA;public const string TemplateId = &quot;CSharp_DbContext_Types_EF5&quot;;&#xA;&#xA;public class CodeStringGenerator&#xA;{&#xA;    private readonly CodeGenerationTools _code;&#xA;    private readonly TypeMapper _typeMapper;&#xA;    private readonly MetadataTools _ef;&#xA;&#xA;    public CodeStringGenerator(CodeGenerationTools code, TypeMapper typeMapper, MetadataTools ef)&#xA;    {&#xA;        ArgumentNotNull(code, &quot;code&quot;);&#xA;        ArgumentNotNull(typeMapper, &quot;typeMapper&quot;);&#xA;        ArgumentNotNull(ef, &quot;ef&quot;);&#xA;&#xA;        _code = code;&#xA;        _typeMapper = typeMapper;&#xA;        _ef = ef;&#xA;    }&#xA;&#xA;    public string Property(EdmProperty edmProperty)&#xA;    {&#xA;        return string.Format(&#xA;            CultureInfo.InvariantCulture,&#xA;            &quot;[DataMember()] {0} {1} {2} {3} {{get; {4}set; }}&quot;,&#xA;            Accessibility.ForProperty(edmProperty),&#xA;            _typeMapper.GetTypeName(edmProperty.TypeUsage),&#xA;            _code.Escape(edmProperty),&#xA;            _code.SpaceAfter(Accessibility.ForGetter(edmProperty)),&#xA;            _code.SpaceAfter(Accessibility.ForSetter(edmProperty)));&#xA;    }&#xA;&#xA;&#xA;    public string EntityClassOpening(EntityType entity)&#xA;    {&#xA;            return string.Format(&#xA;                CultureInfo.InvariantCulture,&#xA;                &quot;[DataContract()]\r\n{0} {1}partial class {2}Dto{3}&quot;,&#xA;                Accessibility.ForType(entity),&#xA;                _code.SpaceAfter(_code.AbstractOption(entity)),&#xA;                _code.Escape(entity),&#xA;                _code.StringBefore(&quot; : &quot;, _typeMapper.GetTypeName(entity.BaseType)));&#xA;    }&#xA;&#xA;&#xA;    public string UsingDirectives(bool inHeader, bool includeCollections = true)&#xA;    {&#xA;        return inHeader == string.IsNullOrEmpty(_code.VsNamespaceSuggestion())&#xA;            ? string.Format(&#xA;                CultureInfo.InvariantCulture,&#xA;                &quot;{0}using System;&quot; +Environment.NewLine+&#xA;                &quot;using System.Runtime.Serialization;{1}&quot; +&#xA;                &quot;{2}&quot;,&#xA;                inHeader ? Environment.NewLine : &quot;&quot;,&#xA;                includeCollections ? (Environment.NewLine + &quot;using System.Collections.Generic;&quot;) : &quot;&quot;,&#xA;                inHeader ? &quot;&quot; : Environment.NewLine)&#xA;            : &quot;&quot;;&#xA;    }&#xA;}&#xA;&#xA;public class TypeMapper&#xA;{&#xA;    private const string ExternalTypeNameAttributeName = @&quot;http://schemas.microsoft.com/ado/2006/04/codegeneration:ExternalTypeName&quot;;&#xA;&#xA;    private readonly System.Collections.IList _errors;&#xA;    private readonly CodeGenerationTools _code;&#xA;    private readonly MetadataTools _ef;&#xA;&#xA;    public TypeMapper(CodeGenerationTools code, MetadataTools ef, System.Collections.IList errors)&#xA;    {&#xA;        ArgumentNotNull(code, &quot;code&quot;);&#xA;        ArgumentNotNull(ef, &quot;ef&quot;);&#xA;        ArgumentNotNull(errors, &quot;errors&quot;);&#xA;&#xA;        _code = code;&#xA;        _ef = ef;&#xA;        _errors = errors;&#xA;    }&#xA;&#xA;    public string GetTypeName(TypeUsage typeUsage)&#xA;    {&#xA;        return typeUsage == null ? null : GetTypeName(typeUsage.EdmType, _ef.IsNullable(typeUsage), null);&#xA;    }&#xA;&#xA;    public string GetTypeName(EdmType edmType)&#xA;    {&#xA;        return GetTypeName(edmType, null,  null);&#xA;    }&#xA;&#xA;    public string GetTypeName(TypeUsage typeUsage, string modelNamespace)&#xA;    {&#xA;        return typeUsage == null ? null : GetTypeName(typeUsage.EdmType, _ef.IsNullable(typeUsage), modelNamespace);&#xA;    }&#xA;&#xA;    public string GetTypeName(EdmType edmType, string modelNamespace)&#xA;    {&#xA;        return GetTypeName(edmType, null, modelNamespace);&#xA;    }&#xA;&#xA;    public string GetTypeName(EdmType edmType, bool? isNullable, string modelNamespace)&#xA;    {&#xA;        if (edmType == null)&#xA;        {&#xA;            return null;&#xA;        }&#xA;&#xA;        var collectionType = edmType as CollectionType;&#xA;        if (collectionType != null)&#xA;        {&#xA;            return String.Format(CultureInfo.InvariantCulture, &quot;ICollection&amp;lt;{0}&amp;gt;&quot;, GetTypeName(collectionType.TypeUsage, modelNamespace));&#xA;        }&#xA;&#xA;        var typeName = _code.Escape(edmType.MetadataProperties&#xA;                                .Where(p =&amp;gt; p.Name == ExternalTypeNameAttributeName)&#xA;                                .Select(p =&amp;gt; (string)p.Value)&#xA;                                .FirstOrDefault())&#xA;            ?? (modelNamespace != null &amp;amp;&amp;amp; edmType.NamespaceName != modelNamespace ?&#xA;                _code.CreateFullName(_code.EscapeNamespace(edmType.NamespaceName), _code.Escape(edmType)) :&#xA;                _code.Escape(edmType));&#xA;&#xA;        if (edmType is StructuralType)&#xA;        {&#xA;            return typeName;&#xA;        }&#xA;&#xA;        if (edmType is SimpleType)&#xA;        {&#xA;            var clrType = UnderlyingClrType(edmType);&#xA;            if (!IsEnumType(edmType))&#xA;            {&#xA;                typeName = _code.Escape(clrType);&#xA;            }&#xA;&#xA;            return clrType.IsValueType &amp;amp;&amp;amp; isNullable == true ?&#xA;                String.Format(CultureInfo.InvariantCulture, &quot;Nullable&amp;lt;{0}&amp;gt;&quot;, typeName) :&#xA;                typeName;&#xA;        }&#xA;&#xA;        throw new ArgumentException(&quot;edmType&quot;);&#xA;    }&#xA;&#xA;    public Type UnderlyingClrType(EdmType edmType)&#xA;    {&#xA;        ArgumentNotNull(edmType, &quot;edmType&quot;);&#xA;&#xA;        var primitiveType = edmType as PrimitiveType;&#xA;        if (primitiveType != null)&#xA;        {&#xA;            return primitiveType.ClrEquivalentType;&#xA;        }&#xA;&#xA;        if (IsEnumType(edmType))&#xA;        {&#xA;            return GetEnumUnderlyingType(edmType).ClrEquivalentType;&#xA;        }&#xA;&#xA;        return typeof(object);&#xA;    }&#xA;&#xA;&#xA;&#xA;    public bool IsEnumType(GlobalItem edmType)&#xA;    {&#xA;        ArgumentNotNull(edmType, &quot;edmType&quot;);&#xA;&#xA;        return edmType.GetType().Name == &quot;EnumType&quot;;&#xA;    }&#xA;&#xA;    public PrimitiveType GetEnumUnderlyingType(EdmType enumType)&#xA;    {&#xA;        ArgumentNotNull(enumType, &quot;enumType&quot;);&#xA;&#xA;        return (PrimitiveType)enumType.GetType().GetProperty(&quot;UnderlyingType&quot;).GetValue(enumType, null);&#xA;    }&#xA;&#xA;    public string CreateLiteral(object value)&#xA;    {&#xA;        if (value == null || value.GetType() != typeof(TimeSpan))&#xA;        {&#xA;            return _code.CreateLiteral(value);&#xA;        }&#xA;&#xA;        return string.Format(CultureInfo.InvariantCulture, &quot;new TimeSpan({0})&quot;, ((TimeSpan)value).Ticks);&#xA;    }&#xA;&#xA;    public bool VerifyCaseInsensitiveTypeUniqueness(IEnumerable&amp;lt;string&amp;gt; types, string sourceFile)&#xA;    {&#xA;        ArgumentNotNull(types, &quot;types&quot;);&#xA;        ArgumentNotNull(sourceFile, &quot;sourceFile&quot;);&#xA;&#xA;        var hash = new HashSet&amp;lt;string&amp;gt;(StringComparer.InvariantCultureIgnoreCase);&#xA;        if (types.Any(item =&amp;gt; !hash.Add(item)))&#xA;        {&#xA;            _errors.Add(&#xA;                new CompilerError(sourceFile, -1, -1, &quot;6023&quot;,&#xA;                    String.Format(CultureInfo.CurrentCulture, GetResourceString(&quot;Template_CaseInsensitiveTypeConflict&quot;))));&#xA;            return false;&#xA;        }&#xA;        return true;&#xA;    }&#xA;&#xA;&#xA;&#xA;    public IEnumerable&amp;lt;T&amp;gt; GetItemsToGenerate&amp;lt;T&amp;gt;(IEnumerable&amp;lt;GlobalItem&amp;gt; itemCollection) where T: EdmType&#xA;    {&#xA;        return itemCollection&#xA;            .OfType&amp;lt;T&amp;gt;()&#xA;            .Where(i =&amp;gt; !i.MetadataProperties.Any(p =&amp;gt; p.Name == ExternalTypeNameAttributeName))&#xA;            .OrderBy(i =&amp;gt; i.Name);&#xA;    }&#xA;&#xA;    public IEnumerable&amp;lt;string&amp;gt; GetAllGlobalItems(IEnumerable&amp;lt;GlobalItem&amp;gt; itemCollection)&#xA;    {&#xA;        return itemCollection&#xA;            .Where(i =&amp;gt; i is EntityType || i is ComplexType || i is EntityContainer || IsEnumType(i))&#xA;            .Select(g =&amp;gt; GetGlobalItemName(g));&#xA;    }&#xA;&#xA;    public string GetGlobalItemName(GlobalItem item)&#xA;    {&#xA;        if (item is EdmType)&#xA;        {&#xA;            return ((EdmType)item).Name;&#xA;        }&#xA;        else&#xA;        {&#xA;            return ((EntityContainer)item).Name;&#xA;        }&#xA;    }&#xA;&#xA;    public IEnumerable&amp;lt;EdmProperty&amp;gt; GetSimpleProperties(EntityType type)&#xA;    {&#xA;        return type.Properties.Where(p =&amp;gt; p.TypeUsage.EdmType is SimpleType &amp;amp;&amp;amp; p.DeclaringType == type);&#xA;    }&#xA;&#xA;    public IEnumerable&amp;lt;EdmProperty&amp;gt; GetSimpleProperties(ComplexType type)&#xA;    {&#xA;        return type.Properties.Where(p =&amp;gt; p.TypeUsage.EdmType is SimpleType &amp;amp;&amp;amp; p.DeclaringType == type);&#xA;    }&#xA;}&#xA;&#xA;public class EdmMetadataLoader&#xA;{&#xA;    private readonly IDynamicHost _host;&#xA;    private readonly System.Collections.IList _errors;&#xA;&#xA;    public EdmMetadataLoader(IDynamicHost host, System.Collections.IList errors)&#xA;    {&#xA;        ArgumentNotNull(host, &quot;host&quot;);&#xA;        ArgumentNotNull(errors, &quot;errors&quot;);&#xA;&#xA;        _host = host;&#xA;        _errors = errors;&#xA;    }&#xA;&#xA;    public IEnumerable&amp;lt;GlobalItem&amp;gt; CreateEdmItemCollection(string sourcePath)&#xA;    {&#xA;        ArgumentNotNull(sourcePath, &quot;sourcePath&quot;);&#xA;&#xA;        if (!ValidateInputPath(sourcePath))&#xA;        {&#xA;            return new EdmItemCollection();&#xA;        }&#xA;&#xA;        var schemaElement = LoadRootElement(_host.ResolvePath(sourcePath));&#xA;        if (schemaElement != null)&#xA;        {&#xA;            using (var reader = schemaElement.CreateReader())&#xA;            {&#xA;                IList&amp;lt;EdmSchemaError&amp;gt; errors;&#xA;                var itemCollection = MetadataItemCollectionFactory.CreateEdmItemCollection(new[] { reader }, out errors);&#xA;&#xA;                ProcessErrors(errors, sourcePath);&#xA;&#xA;                return itemCollection;&#xA;            }&#xA;        }&#xA;        return new EdmItemCollection();&#xA;    }&#xA;&#xA;    public string GetModelNamespace(string sourcePath)&#xA;    {&#xA;        ArgumentNotNull(sourcePath, &quot;sourcePath&quot;);&#xA;&#xA;        if (!ValidateInputPath(sourcePath))&#xA;        {&#xA;            return string.Empty;&#xA;        }&#xA;&#xA;        var model = LoadRootElement(_host.ResolvePath(sourcePath));&#xA;        if (model == null)&#xA;        {&#xA;            return string.Empty;&#xA;        }&#xA;&#xA;        var attribute = model.Attribute(&quot;Namespace&quot;);&#xA;        return attribute != null ? attribute.Value : &quot;&quot;;&#xA;    }&#xA;&#xA;    private bool ValidateInputPath(string sourcePath)&#xA;    {&#xA;        if (sourcePath == &quot;$&quot; + &quot;edmxInputFile&quot; + &quot;$&quot;)&#xA;        {&#xA;            _errors.Add(&#xA;                new CompilerError(_host.TemplateFile ?? sourcePath, 0, 0, string.Empty,&#xA;                    GetResourceString(&quot;Template_ReplaceVsItemTemplateToken&quot;)));&#xA;            return false;&#xA;        }&#xA;&#xA;        return true;&#xA;    }&#xA;&#xA;    public XElement LoadRootElement(string sourcePath)&#xA;    {&#xA;        ArgumentNotNull(sourcePath, &quot;sourcePath&quot;);&#xA;&#xA;        var root = XElement.Load(sourcePath, LoadOptions.SetBaseUri | LoadOptions.SetLineInfo);&#xA;        return root.Elements()&#xA;            .Where(e =&amp;gt; e.Name.LocalName == &quot;Runtime&quot;)&#xA;            .Elements()&#xA;            .Where(e =&amp;gt; e.Name.LocalName == &quot;ConceptualModels&quot;)&#xA;            .Elements()&#xA;            .Where(e =&amp;gt; e.Name.LocalName == &quot;Schema&quot;)&#xA;            .FirstOrDefault()&#xA;                ?? root;&#xA;    }&#xA;&#xA;    private void ProcessErrors(IEnumerable&amp;lt;EdmSchemaError&amp;gt; errors, string sourceFilePath)&#xA;    {&#xA;        foreach (var error in errors)&#xA;        {&#xA;            _errors.Add(&#xA;                new CompilerError(&#xA;                    error.SchemaLocation ?? sourceFilePath,&#xA;                    error.Line,&#xA;                    error.Column,&#xA;                    error.ErrorCode.ToString(CultureInfo.InvariantCulture),&#xA;                    error.Message)&#xA;                {&#xA;                    IsWarning = error.Severity == EdmSchemaErrorSeverity.Warning&#xA;                });&#xA;        }&#xA;    }&#xA;&#xA;&#xA;}&#xA;&#xA;public static void ArgumentNotNull&amp;lt;T&amp;gt;(T arg, string name) where T : class&#xA;{&#xA;    if (arg == null)&#xA;    {&#xA;        throw new ArgumentNullException(name);&#xA;    }&#xA;}&#xA;&#xA;private static readonly Lazy&amp;lt;System.Resources.ResourceManager&amp;gt; ResourceManager =&#xA;    new Lazy&amp;lt;System.Resources.ResourceManager&amp;gt;(&#xA;        () =&amp;gt; new System.Resources.ResourceManager(&quot;System.Data.Entity.Design&quot;, typeof(MetadataItemCollectionFactory).Assembly),  true);&#xA;&#xA;public static string GetResourceString(string resourceName)&#xA;{&#xA;    ArgumentNotNull(resourceName, &quot;resourceName&quot;);&#xA;&#xA;    return ResourceManager.Value.GetString(resourceName, null);&#xA;}&#xA;&#xA;#&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="2575490" LastActivityDate="2014-01-28T13:27:30.447" CommentCount="0" />
  <row Id="21407205" PostTypeId="2" ParentId="21405367" CreationDate="2014-01-28T13:42:33.327" Score="3" Body="&lt;p&gt;A good habbit to get into is the using keyword which will close the connection automatically when done. For Example:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;using (TcpClient tcpClient = new TcpClient())&#xA;{&#xA;     //operations&#xA;     tcpClient.Close();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;If you need to forcibly free up the socket you can set the SO_REUSEADDR socket option. You need to do this before binding to the listening port.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SetSocketOption(SocketOptionLevel.Socket, SocketOptionName.ReuseAddress, 1);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1105627" LastActivityDate="2014-01-28T13:42:33.327" CommentCount="1" />
  <row Id="21407930" PostTypeId="2" ParentId="20515586" CreationDate="2014-01-28T14:14:16.740" Score="0" Body="&lt;p&gt;I have a working solution although different to my question as it doesn't involve an array at all. See my other question here &lt;a href=&quot;http://stackoverflow.com/q/21404668/2952390&quot;&gt;Adding rows to second column ONLY - populating data using a for loop&lt;/a&gt; and the actual question is the answer for this one. I have used just FileInfo and DataGridView.&lt;/p&gt;&#xA;" OwnerUserId="2952390" LastActivityDate="2014-01-28T14:14:16.740" CommentCount="0" />
  <row Id="21408335" PostTypeId="2" ParentId="21395795" CreationDate="2014-01-28T14:29:35.467" Score="10" Body="&lt;p&gt;You can't reference both &lt;code&gt;Xamarin.Android.Support.V4&lt;/code&gt; and &lt;code&gt;Mono.Android.Support.V4&lt;/code&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'd suggest referencing just &lt;code&gt;Xamarin.Android.Support.V4&lt;/code&gt; as it is the updated binding to the Android Support Library v4. Remove &lt;code&gt;Mono.Android.Support.V4&lt;/code&gt; and &lt;code&gt;android-support-v4.jar&lt;/code&gt;.&lt;/p&gt;&#xA;" OwnerUserId="33483" LastActivityDate="2014-01-28T14:29:35.467" CommentCount="4" />
  <row Id="21408538" PostTypeId="2" ParentId="21408129" CreationDate="2014-01-28T14:37:50.887" Score="0" Body="&lt;p&gt;The WSDL file does not contain the address of the service endpoint. You probably created a Service Reference or a Web Reference, which has created a client class for you. If you instantiate this client (lets call it &lt;code&gt;ExampleClient&lt;/code&gt;) with the default constructor:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var serviceCLient = new ExampleClient();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then the URI will be the path of the WSDL file you imported. This mostly works fine if you import a generated WSDL file file the actual service URI, but in your case, you need to tell it where the service is running. You can either pass the service URI in the constructor:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var serviceCLient = new ExampleClient(&quot;http://example.com/service/endpoint&quot;);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Or edit your &lt;code&gt;app.config&lt;/code&gt; or &lt;code&gt;web.config&lt;/code&gt; (depending on project type). It will have something like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;system.serviceModel&amp;gt;&#xA;    &amp;lt;client&amp;gt;&#xA;        &amp;lt;endpoint address=&quot;C:\path\to\your.wsdl&quot; etc etc etc... /&amp;gt; &#xA;    &amp;lt;/client&amp;gt;&#xA;&amp;lt;/system.serviceModel&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And you should change the &lt;code&gt;address&lt;/code&gt; attribute there.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For old style web references, you can right click on the reference in Visual Studio (under your project in the &lt;code&gt;Web References&lt;/code&gt; folder, and select &quot;properties&quot;. The properties screen contains a &quot;Web Reference Url&quot; which you can edit to point to the actual service URI.&lt;/p&gt;&#xA;" OwnerUserId="928483" LastActivityDate="2014-01-28T14:37:50.887" CommentCount="0" />
  <row Id="21410082" PostTypeId="2" ParentId="21407748" CreationDate="2014-01-28T15:40:12.027" Score="0" Body="&lt;p&gt;Hmm, not sure but couldn't you do something like this?&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;context.Setup(s =&amp;gt; DbFunctions.TruncateTime(It.IsAny&amp;lt;DateTime&amp;gt;()))&#xA;    .Returns&amp;lt;DateTime?&amp;gt;(new Func&amp;lt;DateTime?,DateTime?&amp;gt;(&#xA;        (x) =&amp;gt; {&#xA;            /*  whatever modification is required here */&#xA;            return x; //or return modified;&#xA;        }));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1509728" LastEditorUserId="1509728" LastEditDate="2014-01-28T17:44:52.483" LastActivityDate="2014-01-28T17:44:52.483" CommentCount="2" />
  <row Id="21410220" PostTypeId="2" ParentId="21410146" CreationDate="2014-01-28T15:45:35.347" Score="13" Body="&lt;p&gt;&lt;code&gt;clicks++&lt;/code&gt; will return the value of &lt;code&gt;clicks&lt;/code&gt; &lt;em&gt;before&lt;/em&gt; the increment.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;code&gt;clicks+=1&lt;/code&gt; will return the value of &lt;code&gt;clicks&lt;/code&gt; &lt;em&gt;after&lt;/em&gt; the increment.  This would be identical to &lt;code&gt;++clicks&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you ignore the return value, then there is no difference.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And while it doesn't apply to your specific case, were you to increment &lt;code&gt;clicks&lt;/code&gt; not by a compile time literal &lt;code&gt;1&lt;/code&gt;, but by some other expression that resolved to a &lt;code&gt;1&lt;/code&gt;, that expression could have side effects being evaluated.&lt;/p&gt;&#xA;" OwnerUserId="1159478" LastActivityDate="2014-01-28T15:45:35.347" CommentCount="0" />
  <row Id="21410225" PostTypeId="2" ParentId="21410146" CreationDate="2014-01-28T15:45:44.533" Score="3" Body="&lt;p&gt;Performance wise? None. The compiler will optimize both as appropriate for given architecture and even then, the performance difference would unmeasurable unless the user is clicking million times per second and even then, the event system would be much bigger performance problem than simple increment.&lt;/p&gt;&#xA;" OwnerUserId="463623" LastActivityDate="2014-01-28T15:45:44.533" CommentCount="0" />
  <row Id="21410299" PostTypeId="2" ParentId="21410146" CreationDate="2014-01-28T15:48:24.207" Score="1" Body="&lt;p&gt;As said no difference, but there can be a difference if you use prefix vs postfix increment, i.e. &lt;code&gt;clicks++&lt;/code&gt; vs &lt;code&gt;++clicks&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Consider e.g.:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    int clicks = 9;&#xA;    if (clicks++ == 10) // first, we compare current value of clicks (9), then increase it by 1&#xA;    {&#xA;        Console.WriteLine(&quot;10 clicks&quot;); // is not shown&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;vs&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    int clicks = 9;&#xA;    if (++clicks == 10) // first, we increase clicks by 1, then compare the value to 10&#xA;    {&#xA;        Console.WriteLine(&quot;10 clicks&quot;); // gets shown&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="885844" LastActivityDate="2014-01-28T15:48:24.207" CommentCount="0" />
  <row Id="21410473" PostTypeId="2" ParentId="21410146" CreationDate="2014-01-28T15:55:53.510" Score="0" Body="&lt;p&gt;Performance wise, if you consider hardware architectures, X++ (++X, X--, --X) commands exist because they are highly used and are implemented so they run faster than X+=1 ( ... ). also X+=1 like commands runs faster than X = X + 1.&#xA;Note that compilers my be so intelligent to understand they can compile X+=1 command to X++.&lt;/p&gt;&#xA;" OwnerUserId="1994844" LastActivityDate="2014-01-28T15:55:53.510" CommentCount="0" />
  <row Id="21411110" PostTypeId="2" ParentId="21197633" CreationDate="2014-01-28T16:21:55.650" Score="1" Body="&lt;p&gt;I had to deal with same problem in my company when trying to retrieve items based on the radius. The only difference for our data we already store Lat, Long in database for each item that we need. In some cases we are starting to use &lt;a href=&quot;http://technet.microsoft.com/en-us/library/bb933811.aspx&quot; rel=&quot;nofollow&quot;&gt;GeographyPoint&lt;/a&gt; data type to remove additional workload on the server during the return. Some of our tools are unable to create Geography data type so its use is limited.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is sample of the stored procedure that we use to do this. Look at the comments.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;CREATE PROCEDURE [dbo].GetItems_ByRadius&#xA;(&#xA; @pLat DECIMAL(20, 13)      --= 35.151&#xA;,@pLon DECIMAL(20, 13)      --= -86.59&#xA;,@pRadius DECIMAL(7, 2)     --= 2&#xA;)&#xA;AS&#xA;BEGIN&#xA;    SET NOCOUNT ON;&#xA;    /*Declare Local Variables to avoid parameter sniffing*/&#xA;    DECLARE @Lat VARCHAR(20) = @pLat&#xA;       ,@Lon VARCHAR(20) = @pLon&#xA;       ,@Radius DECIMAL(7, 2) = @pRadius&#xA;       ,@Earth_Radius INT = 6371000&#xA;&#xA;    /*Declare additional variables that are needed for calculations*/   &#xA;    DECLARE @Distance DECIMAL(10, 2) = @Radius * 1609.344&#xA;       ,@Point_geo GEOGRAPHY&#xA;       ,@Min_Lat DECIMAL(20, 13)&#xA;       ,@Max_Lat DECIMAL(20, 13)&#xA;       ,@Min_Long DECIMAL(20, 13)&#xA;       ,@Max_Long DECIMAL(20, 13)&#xA;&#xA;    /*Convert original Lat Long parameters to GeographyPoint this will be used to check radius distance*/&#xA;    SET @Point_geo = GEOGRAPHY::STGeomFromText('POINT(' + @Lon + ' ' + @Lat + ')', 4326)&#xA;&#xA;    /*Build Bounding Box*/           &#xA;    SET @Min_Lat = @Lat - DEGREES(@distance / @Earth_Radius)&#xA;    SET @Max_Lat = @Lat + DEGREES(@distance / @Earth_Radius)    &#xA;    SET @Min_Long = @Lon - DEGREES(@distance / @Earth_Radius / COS(RADIANS(@Lat)))&#xA;    SET @Max_Long = @Lon + DEGREES(@distance / @Earth_Radius / COS(RADIANS(@Lat)));&#xA;&#xA;    WITH    MyBoxResults&#xA;              AS ( SELECT *&#xA;                       ,GEOGRAPHY::STPointFromText('POINT(' + CAST(Geog_Long AS VARCHAR(20)) + ' '&#xA;                                                   + CAST(Geog_Lat AS VARCHAR(20)) + ')', 4326) AS GeogLocation&#xA;                    FROM MyTable&#xA;                    WHERE ( Geog_Lat BETWEEN @Min_Lat AND @Max_Lat )&#xA;                        AND ( Geog_Long BETWEEN @Min_Long AND @Max_Long )) \&#xA;/*Using Long and Lat decimal columns we get results that are within the box that surrounds radius*/&#xA;        SELECT *&#xA;            FROM MyBoxResults&#xA;            WHERE @Point_geo.STDistance(GeogLocation) &amp;lt;= @Distance; &#xA;/*This further limits results to only the radius instead of original box.*/&#xA;&#xA;END&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Within procedure we made several ways to speed up performance. &lt;br&gt;&#xA;- Use of local variables prevent &lt;strong&gt;Parameter Sniffing&lt;/strong&gt; &lt;a href=&quot;http://blogs.msdn.com/b/turgays/archive/2013/09/10/parameter-sniffing-problem-and-workarounds.aspx&quot; rel=&quot;nofollow&quot;&gt;Read here more about it&lt;/a&gt; &lt;br&gt;&#xA;- Use CTE to limit results to a bounding box that can be done fast with indexes on Lat and Long columns.&#xA;- Using &lt;a href=&quot;http://technet.microsoft.com/en-us/library/bb933917.aspx&quot; rel=&quot;nofollow&quot;&gt;Geography functions&lt;/a&gt; and in perticular the &lt;a href=&quot;http://technet.microsoft.com/en-us/library/bb933808.aspx&quot; rel=&quot;nofollow&quot;&gt;STDistance&lt;/a&gt; only when needed. If that function is used on whole data set instead of limited results, procedure takes much longer to return.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Let me know if you have any questions about the procedure.&lt;/p&gt;&#xA;" OwnerUserId="275683" LastActivityDate="2014-01-28T16:21:55.650" CommentCount="0" />
  <row Id="21411379" PostTypeId="2" ParentId="21411170" CreationDate="2014-01-28T16:33:12.050" Score="0" Body="&lt;p&gt;Most likely a security issue. If using windows authentication then make sure the thread pool that the web application is running as has sufficient DB access\privileges. &lt;/p&gt;&#xA;" OwnerUserId="987608" LastActivityDate="2014-01-28T16:33:12.050" CommentCount="1" />
  <row Id="21412852" PostTypeId="2" ParentId="21412821" CreationDate="2014-01-28T17:42:18.677" Score="6" Body="&lt;p&gt;Looks like valus for second and third column should are swapped. Should be:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;insert into EnteryItem (ItemName, ImageIndex, DateEntery, Index0, ItemBarcode)&#xA;Values (@ItemName, @ImageIndex, GETDATE(), @Index0, @ItemBarcode)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Also note you are not using &lt;code&gt;@DateEntery&lt;/code&gt; parameter, although you are adding it to the param list.&lt;/p&gt;&#xA;" OwnerUserId="728795" LastActivityDate="2014-01-28T17:42:18.677" CommentCount="4" />
  <row Id="21412874" PostTypeId="2" ParentId="21412821" CreationDate="2014-01-28T17:43:14.497" Score="3" Body="&lt;p&gt;Compare your column names and values&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ItemName   ImageIndex  DateEntery   Index0   ItemBarcode&#xA;@ItemName  GETDATE()   @ImageIndex  @Index0  @ItemBarcode&#xA;           ^           ^&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You'll see the two marked are backwards. It's trying to put a date into an integer column. Correct that and you should be fine&lt;/p&gt;&#xA;" OwnerUserId="1007939" LastActivityDate="2014-01-28T17:43:14.497" CommentCount="2" />
  <row Id="21413070" PostTypeId="2" ParentId="6959079" CreationDate="2014-01-28T17:52:25.727" Score="1" Body="&lt;p&gt;You can wrap the information you need with a Generic Result class.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class MyClass&#xA;{&#xA;    public static void Main()&#xA;    {&#xA;        var result = new MyClass().TrySomeFunction();&#xA;&#xA;        if (result.Succeeded)&#xA;        {&#xA;            // use it&#xA;            MyReturningResultType resultValue = result.GetResultValue();&#xA;        }&#xA;        else&#xA;        {&#xA;            // use message&#xA;            string message = result.ResultMessage;&#xA;        }&#xA;&#xA;    }&#xA;&#xA;    Result&amp;lt;MyReturningResultType&amp;gt; TrySomeFunction()&#xA;    {&#xA;        try&#xA;        {&#xA;            MyReturningResultType value = CalculateIt();&#xA;            return new Result&amp;lt;MyReturningResultType&amp;gt;(value) { Succeeded = true };&#xA;        }&#xA;        catch (Exception exception)&#xA;        {&#xA;            return new Result&amp;lt;MyReturningResultType&amp;gt;(default(MyReturningResultType))&#xA;            {&#xA;                Succeeded = false,&#xA;                ResultMessage = exception.Message&#xA;            };&#xA;        }&#xA;    }&#xA;}&#xA;&#xA;public class Result&amp;lt;T&amp;gt;&#xA;{&#xA;    public Result(T resultValue) { this.ResultValue = resultValue; }&#xA;    public bool Succeeded { get; set; }&#xA;    public string ResultMessage { get; set; }&#xA;    public T GetResultValue()&#xA;    {&#xA;        if (ResultValue is T)&#xA;        {&#xA;            return (T)this.ResultValue;&#xA;        }&#xA;&#xA;        return default(T);&#xA;    }&#xA;&#xA;    private T ResultValue;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="661622" LastActivityDate="2014-01-28T17:52:25.727" CommentCount="0" />
  <row Id="21413751" PostTypeId="2" ParentId="18377818" CreationDate="2014-01-28T18:24:42.893" Score="2" Body="&lt;p&gt;The problem is all the data load together and return back from database.&#xA;You need to get the data loading progress. This can be done from database.&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;p&gt;Get the count to data rows from database. (This query would return a single number, so it would be quicker).&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;Get the data in parts (Divide &amp;amp; conquer strategy), you can use OFFSET and FETCH database queries. (This is return part of data on each call)&#xA;OFFSET and FETCH is available on different database. In MSSQL, it was introduced in version 2012.&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;When we are getting the data in parts from server, we can calculate the progress.&lt;/p&gt;&#xA;" OwnerUserId="1353825" LastActivityDate="2014-01-28T18:24:42.893" CommentCount="1" />
  <row Id="21414157" PostTypeId="2" ParentId="21407748" CreationDate="2014-01-28T18:44:21.630" Score="1" Body="&lt;p&gt;Check out this answer:  &lt;a href=&quot;http://stackoverflow.com/a/14975425/1509728&quot;&gt;http://stackoverflow.com/a/14975425/1509728&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To be honest, upon thinking about it I totally agree with the answer and generally follow the principle that my EF queries are tested against the database and only my application code is tested with Moq.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;It looks like there is no elegant solution to using Moq for testing EF queries with your query above, while there are some hacky ideas out there.  For example &lt;a href=&quot;http://stackoverflow.com/a/15300685/1509728&quot;&gt;this one&lt;/a&gt; and the answer that follows it.  Both seem like they could work for you.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another approach to testing your queries would be one implemented on another project I worked on:  Using VS out of box unit tests, each query (again refactored into its own method) test would be wrapped in a transaction scope.  Then the project's test framework would take care of manually entering phony data into the db and the query would try to filter this phony data.  At the end, the transaction is never completed so it is rolled back.  &lt;strong&gt;Due to the nature of transaction scopes, this might not be an ideal scenario for a lot of projects.&lt;/strong&gt;  Most probably not on prod environments.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Otherwise if you must continue mocking functionality, you might want to consider other mocking frameworks.&lt;/p&gt;&#xA;" OwnerUserId="1509728" LastEditorUserId="1509728" LastEditDate="2014-01-28T18:53:39.943" LastActivityDate="2014-01-28T18:53:39.943" CommentCount="0" />
  <row Id="21414384" PostTypeId="2" ParentId="21406438" CreationDate="2014-01-28T18:56:27.700" Score="1" Body="&lt;p&gt;From looking at your code, it seems you misunderstood the SelectedItem property of the ListView. It will be populated with one of your WorkListItem objects when the selection changes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The ListView does not have a command property like the Button does, so you need to handle the SelectionChanged event of the ListView and invoke the Command on your Viewmodel manually. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can do this in code-behind or take a look at one of the &lt;a href=&quot;http://msdn.microsoft.com/en-us/magazine/dn237302.aspx&quot; rel=&quot;nofollow&quot;&gt;EventToCommand&lt;/a&gt;  helpers to do it directly in xaml.&lt;/p&gt;&#xA;" OwnerUserId="3209483" LastActivityDate="2014-01-28T18:56:27.700" CommentCount="1" />
  <row Id="21414891" PostTypeId="2" ParentId="21414488" CreationDate="2014-01-28T19:25:32.173" Score="2" Body="&lt;p&gt;Ask yourself why do you create a new &lt;code&gt;UINavigationController&lt;/code&gt; on your &lt;code&gt;UINavigationController&lt;/code&gt; ?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your &lt;code&gt;homeViewController&lt;/code&gt; is a &lt;code&gt;UINavigationController&lt;/code&gt; then simply do:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;window.RootViewController = new HomeViewController_iPhone ();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;or maybe your &lt;code&gt;homeViewController&lt;/code&gt; should not be a navigation controller ?&lt;/p&gt;&#xA;" OwnerUserId="220643" LastActivityDate="2014-01-28T19:25:32.173" CommentCount="3" />
  <row Id="21415057" PostTypeId="2" ParentId="21414835" CreationDate="2014-01-28T19:33:35.813" Score="0" Body="&lt;p&gt;You are storing the name of the MultiLine value from the TextBoxMode enum.  You should be referencing the textarea object.  Try this&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt; com.Parameters.AddWithValue(&quot;@comment&quot;, commentarea.Text);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Also, the textarea in the html is missing the runat attribute&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;textarea id=&quot;commentarea&quot; name=&quot;S1&quot; cols=&quot;30&quot; rows=&quot;5&quot; runat=&quot;server&quot;&amp;gt;&amp;lt;/textarea&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="2258605" LastActivityDate="2014-01-28T19:33:35.813" CommentCount="0" />
  <row Id="21415058" PostTypeId="2" ParentId="21414835" CreationDate="2014-01-28T19:33:36.487" Score="1" Body="&lt;p&gt;You need to use a TextBox:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;asp:TextBox runat=&quot;server&quot; id=&quot;commentarea&quot; TextMode=&quot;MultiLine&quot; Rows=&quot;5&quot; Columns=&quot;30&quot;/&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then use &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;com.Parameters.AddWithValue(&quot;@comment&quot;, commentArea.Text);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="76337" LastActivityDate="2014-01-28T19:33:36.487" CommentCount="0" />
  <row Id="21415125" PostTypeId="2" ParentId="21414835" CreationDate="2014-01-28T19:37:08.160" Score="0" Body="&lt;p&gt;Your text area must be inside a form provide it with an ID (say frm), also name and id for your text area also (say txtArea1) then use the following code to get the value of your textarea:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;HtmlTextArea txtImageupload = (HtmlTextArea)(frm.FindControl(&quot;txtArea1&quot;));&#xA;string txtval = txtImageupload.Value;&#xA;com.Parameters.AddWithValue(&quot;@comment&quot;, txtval);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;But you can avoid all this by using a textbox control with TextMode set to MultiLine.&lt;/p&gt;&#xA;" OwnerUserId="1549209" LastActivityDate="2014-01-28T19:37:08.160" CommentCount="0" />
  <row Id="21415543" PostTypeId="2" ParentId="21415406" CreationDate="2014-01-28T19:57:45.330" Score="2" Body="&lt;p&gt;The concept is called *&lt;em&gt;broadcast&lt;/em&gt;*ing. Here are examples in Java and C#:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6568446/how-to-broadcast-in-java-network&quot;&gt;How to broadcast in java network&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/870328/receiving-a-broadcast-message-in-c-sharp&quot;&gt;receiving a broadcast message in c#&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Be aware that it only works with UDP! So be prepared for packet loss and the like.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Oh and it also only works for local networks. No broadcasting to the internet!&lt;/p&gt;&#xA;" OwnerUserId="642532" LastActivityDate="2014-01-28T19:57:45.330" CommentCount="1" />
  <row Id="21415816" PostTypeId="2" ParentId="21415730" CreationDate="2014-01-28T20:13:19.877" Score="0" Body="&lt;p&gt;That entirely depends on what's going on inside that &lt;code&gt;RicherTextBox&lt;/code&gt; control. Does it just extend the regular &lt;code&gt;RichTextBox&lt;/code&gt; control? They could be intercepting and handling events. You'll have to check out the source code to be sure.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;See if they're subscribing to the &lt;code&gt;KeyDown&lt;/code&gt; and &lt;code&gt;KeyUp&lt;/code&gt; events. There's a &lt;code&gt;Handled&lt;/code&gt; property on the &lt;code&gt;KeyEventArgs&lt;/code&gt; parameter for those events. If they set &lt;code&gt;e.Handled = true&lt;/code&gt;, it'll prevent the event from going any further up the chain.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I don't see a &lt;code&gt;Handled&lt;/code&gt; event in the &lt;code&gt;LinkClickedEventArgs&lt;/code&gt; that's passed to the &lt;code&gt;LinkClicked&lt;/code&gt; event, so I'm not sure. You'll have to dig into the source code.&lt;/p&gt;&#xA;" OwnerUserId="301857" LastEditorUserId="301857" LastEditDate="2014-01-28T20:18:12.137" LastActivityDate="2014-01-28T20:18:12.137" CommentCount="0" />
  <row Id="21416386" PostTypeId="2" ParentId="21396910" CreationDate="2014-01-28T20:41:29.437" Score="0" Body="&lt;p&gt;If you are including an existing db in your app bundle, you cannot write to it.  The app bundle is read only - this is an iOS security measure.  In order to write to your db, you will need to move it to a user writable folder.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;// in your app startup&#xA;string rootPath = &quot;/mydb.db&quot;;&#xA;string userPath = Path.Combine(Environment.GetFolderPath (Environment.SpecialFolder.MyDocuments), &quot;mydb.db&quot;;&#xA;&#xA;// if userdb does not exist, copy it from the app bundle&#xA;if (!File.Exists(userPath)) {&#xA;  File.Copy(rootPath, userPath);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;When you want to actually access your db, you just use the db access code you already have, but be sure you are using the user writable path.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var db = new SqliteConnection (userPath);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Finally, if your db is read-only and will not be updated by the user, you can leave it in the app bundle and don't need to make a writable copy.&lt;/p&gt;&#xA;" OwnerUserId="1338" LastActivityDate="2014-01-28T20:41:29.437" CommentCount="1" />
  <row Id="21417104" PostTypeId="2" ParentId="19086598" CreationDate="2014-01-28T21:20:45.520" Score="0" Body="&lt;p&gt;select projectname then  rightclick then proparties then setting then select the conniction string click in column value then choose .... screen connection proparties will appear on this screen choose advanced then choose character and wright utf8 then choose treat blobs as utf8 change value to true all arabic data will transfer will to my sql. &lt;/p&gt;&#xA;" OwnerUserId="3246376" LastEditorUserId="2682142" LastEditDate="2014-01-28T21:44:03.520" LastActivityDate="2014-01-28T21:44:03.520" CommentCount="0" />
  <row Id="21418123" PostTypeId="2" ParentId="21412161" CreationDate="2014-01-28T22:18:56.010" Score="7" Body="&lt;p&gt;This is just ridicules ... I got it working using this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;config.MapHttpAttributeRoutes();&#xA;config.EnsureInitialized();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;So basically this runs the init of the configuration for the &lt;code&gt;config.MapHttpAttributeRoutes()&lt;/code&gt; I guess I would have thought this was done automatically.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;But now it works and I'm happy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For more information on this issue see: &lt;a href=&quot;http://ifyoudo.net/post/2014/01/28/How-to-unit-test-ASPNET-Web-API-2-Route-Attributes.aspx&quot;&gt;http://ifyoudo.net/post/2014/01/28/How-to-unit-test-ASPNET-Web-API-2-Route-Attributes.aspx&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="196872" LastEditorUserId="196872" LastEditDate="2014-01-29T12:32:50.390" LastActivityDate="2014-01-29T12:32:50.390" CommentCount="0" />
  <row Id="21418481" PostTypeId="2" ParentId="21417751" CreationDate="2014-01-28T22:42:05.233" Score="0" Body="&lt;p&gt;There is no built in method to do that. &lt;/p&gt;&#xA;" OwnerUserId="74015" LastActivityDate="2014-01-28T22:42:05.233" CommentCount="2" />
  <row Id="21418742" PostTypeId="2" ParentId="21417751" CreationDate="2014-01-28T22:58:19.357" Score="1" Body="&lt;p&gt;Just for posterity, this is not that hard to do - run this in Linqpad with a reference to &lt;code&gt;System.Data&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void Main()&#xA;{&#xA;     Console.WriteLine(GetSqlTypes());&#xA;}&#xA;&#xA;Dictionary&amp;lt;string,Type&amp;gt; GetSqlTypes()&#xA;{&#xA;   var types=new Dictionary&amp;lt;string,Type&amp;gt;();&#xA;   var a = Assembly.Load(&quot;System.Data&quot;);&#xA;     foreach (var sqlType in a.GetTypes().Where(t=&amp;gt;t.Namespace==&quot;System.Data.SqlTypes&quot; &#xA;                    &amp;amp;&amp;amp; t.Name.StartsWith(&quot;Sql&quot;)&#xA;                     &amp;amp;&amp;amp; !t.Name.Contains(&quot;Exception&quot;)&#xA;                     &amp;amp;&amp;amp; !t.Name.Contains(&quot;Schema&quot;)&#xA;                     &amp;amp;&amp;amp; !t.Name.Contains(&quot;Stream&quot;)))&#xA;         {&#xA;            types.Add(sqlType.Name,sqlType);&#xA;         }&#xA;         return types;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;So you can just bind your dropdown to GetSqlTypes:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    ddlTypes.DataSource = GetSqlTypes();&#xA;    ddlTypes.DataTextField = &quot;Value&quot;;&#xA;    ddlTypes.DataValueField = &quot;Key&quot;;&#xA;    ddlTypes.DataBind();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Of course this is a pure brute-force hack and no doubt someone else has a more elegant way to do it, but this will at least get you up and running.&lt;/p&gt;&#xA;" OwnerUserId="1362136" LastActivityDate="2014-01-28T22:58:19.357" CommentCount="1" />
  <row Id="21420520" PostTypeId="2" ParentId="21415406" CreationDate="2014-01-29T01:43:53.313" Score="1" Body="&lt;p&gt;&quot;Broadcasting&quot; over the network on specific port will do sending packets to all system connected to same network and listening for &quot;UDP&quot; packet at specific port will do receiving at specific system ends. &lt;/p&gt;&#xA;" OwnerUserId="2444433" LastActivityDate="2014-01-29T01:43:53.313" CommentCount="0" />
  <row Id="21420597" PostTypeId="2" ParentId="21412787" CreationDate="2014-01-29T01:52:24.423" Score="0" Body="&lt;pre&gt;&lt;code&gt;foo.pl/armchair/rest/message/device&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Well, connection should be made to foo.p1 because it is the actual name of the server which can be resolved by the DNS. &lt;code&gt;&quot;/armchair/rest/message/device&quot;&lt;/code&gt;, now this is the path in the server. Now if you want specific file in that path, connect to the server at &quot;foo.p1&quot; and use GET method to get the file in the specific path. You can construct a GET request like &lt;a href=&quot;http://stackoverflow.com/questions/16881613/writing-proper-head-and-get-request-in-winsock-c&quot;&gt;this&lt;/a&gt; and you are done. :)&lt;/p&gt;&#xA;" OwnerUserId="2444433" LastActivityDate="2014-01-29T01:52:24.423" CommentCount="0" />
  <row Id="21422779" PostTypeId="2" ParentId="20806514" CreationDate="2014-01-29T05:23:05.490" Score="1" Body="&lt;p&gt;Try this it will work:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SqlParameter[] sqlParams = new SqlParameter[] { &#xA;            new SqlParameter(&quot;@UserName&quot;,(object)userName ?? DBNull.Value),&#xA;            new SqlParameter(&quot;@Password&quot;,(object)password ?? DBNull.Value)&#xA;};&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;If parameter is NULL than replace it with DBNull Type using ?? Operator&lt;/p&gt;&#xA;" OwnerUserId="1760979" LastActivityDate="2014-01-29T05:23:05.490" CommentCount="0" />
  <row Id="21423658" PostTypeId="2" ParentId="21423598" CreationDate="2014-01-29T06:27:09.437" Score="0" Body="&lt;p&gt;You must change your Connection String according to the other PC 's settings.&#xA;eg: Server,PC&lt;/p&gt;&#xA;" OwnerUserId="3156647" LastActivityDate="2014-01-29T06:27:09.437" CommentCount="0" />
  <row Id="21424000" PostTypeId="2" ParentId="21423565" CreationDate="2014-01-29T06:48:17.143" Score="0" Body="&lt;p&gt;I would say you firstly create a new class for storing your data (like StudentInfo)&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class StudentInfo&#xA;{&#xA;    public StudentInfo(int ID, string Name, string Email, string PhoneNo)&#xA;    {&#xA;        this.ID = ID;&#xA;        this.Name = Name;&#xA;        this.Email = Email;&#xA;        this.PhoneNo = PhoneNo;&#xA;    }&#xA;    public int ID { get; set; }&#xA;    public string Name { get; set; }&#xA;    public string Email { get; set; }&#xA;    public string PhoneNo { get; set; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then use this function that return's a List of StudentInfo class&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public List&amp;lt;StudentInfo&amp;gt; GetData()&#xA;{&#xA;    List&amp;lt;StudentInfo&amp;gt; data = new List&amp;lt;StudentInfo&amp;gt;();&#xA;    SqlConnection con = new SqlConnection(&quot;Your connection string&quot;);&#xA;    SqlCommand command = new SqlCommand(&quot;SELECT * FROM [Registration]&quot;, con);&#xA;    con.Open();&#xA;    SqlDataReader sdr = command.ExecuteReader();&#xA;    while(sdr.Read())&#xA;    {&#xA;         data.Add((int)sdr[&quot;ID&quot;], (string)sdr[&quot;Name&quot;], (string)sdr[&quot;Email&quot;], (string)sdr[&quot;PhoneNo&quot;]);&#xA;    }&#xA;    con.Close();&#xA;    return data;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then you use it like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;List&amp;lt;StudentInfo&amp;gt; info = GetData();&#xA;foreach(StudentInfo si in info)&#xA;{&#xA;     Response.Write(&quot;&amp;lt;h3&amp;gt;ID is &quot; + si.ID + &quot;&amp;lt;/h3&amp;gt;&amp;lt;p&amp;gt;StudentName is &quot; + si.Name + &quot;&amp;lt;/p&amp;gt;&quot;);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;To update the values do this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public void SetValue(int StudentID, String NewName, String NewEmail, String NewPhone)&#xA;{&#xA;    SqlConnection con = new SqlConnection(&quot;Your connection string&quot;);&#xA;    SqlCommand command = new SqlCommand(&quot;UPDATE [Registration] SET [Name]='&quot; + NewName + &quot;', [Email]='&quot; + NewEmail + &quot;', [PhoneNo]='&quot; + NewPhone + &quot;' WHERE [ID]=&quot; + StudentID + &quot;&quot;, con);&#xA;    con.Open();&#xA;    command.ExecuteNonQuery();&#xA;    con.close();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And I would suggest you to read some articles about sql&lt;/p&gt;&#xA;" OwnerUserId="1952580" LastEditorUserId="1952580" LastEditDate="2014-01-31T07:19:42.740" LastActivityDate="2014-01-31T07:19:42.740" CommentCount="8" />
  <row Id="21424011" PostTypeId="2" ParentId="21423598" CreationDate="2014-01-29T06:48:54.390" Score="0" Body="&lt;p&gt;Try this connection string.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Driver={SQL Native Client};Server=[IP of the Server]\SQLExpress;AttachDbFilename=[path]\*.mdf; Database=dbname;Trusted_Connection=Yes;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You can refer &lt;a href=&quot;http://www.connectionstrings.com/sql-server-2005/&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="3089494" LastActivityDate="2014-01-29T06:48:54.390" CommentCount="0" />
  <row Id="21424273" PostTypeId="2" ParentId="21423895" CreationDate="2014-01-29T07:02:07.667" Score="0" Body="&lt;p&gt;it's no error as i see.. 0x0 is good compiling &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you wrote on c++, you can add smth like &lt;code&gt;getc&lt;/code&gt; or &lt;code&gt;cin&lt;/code&gt;, and your program don't close after running &lt;/p&gt;&#xA;" OwnerUserId="2185412" LastActivityDate="2014-01-29T07:02:07.667" CommentCount="2" />
  <row Id="21425729" PostTypeId="2" ParentId="21425667" CreationDate="2014-01-29T08:28:56.740" Score="0" Body="&lt;p&gt;You created the socket, but you don't bind it to a port after creation. You bind it when you want to send data.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Binding only when you want to send data is incorrect behavior.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You also only have to bind the socket to a local &lt;code&gt;IPEndpoint&lt;/code&gt;. The remote &lt;code&gt;IPEndpoint&lt;/code&gt; is used when you send the datagram with the function &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/eae4f5y0%28v=vs.110%29.aspx&quot; rel=&quot;nofollow&quot;&gt;SendTo()&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="603059" LastActivityDate="2014-01-29T08:28:56.740" CommentCount="1" />
  <row Id="21426134" PostTypeId="2" ParentId="21411170" CreationDate="2014-01-29T08:49:33.737" Score="0" Body="&lt;p&gt;The issue is that the web.config references another config file&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;appSettings file=&quot;config/dev.config&quot;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;and so the connection string in web.config is ignored over the one in dev.config - an error to have it in both (the one on the test server was created by someone else and worked on static pages - it only failed when the website had to query the database), that's why the version in Visual Studio was running fine.&lt;/p&gt;&#xA;" OwnerUserId="195279" LastActivityDate="2014-01-29T08:49:33.737" CommentCount="1" />
  <row Id="21427071" PostTypeId="2" ParentId="21426915" CreationDate="2014-01-29T09:36:33.860" Score="2" Body="&lt;p&gt;The ORA-12577 error is related to Windows Environment or Oracle Home PATH because sqlplus command works smoothly when I execute it inside ORACLE_HOME\bin .&#xA;Its because of two or more oracle installs  (say database and companion) in separate ORACLE_HOMEs on that machine unset the ORACLE_HOME value in your window&#xA;For Details please follow the following steps and hope so you will get the solution.&#xA;&lt;a href=&quot;http://www.dba-oracle.com/t_ora_12577.htm&quot; rel=&quot;nofollow&quot;&gt;http://www.dba-oracle.com/t_ora_12577.htm&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1600387" LastActivityDate="2014-01-29T09:36:33.860" CommentCount="4" />
  <row Id="21427298" PostTypeId="2" ParentId="5484308" CreationDate="2014-01-29T09:47:07.153" Score="0" Body="&lt;p&gt;Open Visual Studio Command Prompt &#xA;and Run devenv /resetsettings&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/ptXxZ.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/4bNGB.png&quot; alt=&quot;Step 2&quot;&gt;&lt;/p&gt;&#xA;" OwnerUserId="992786" LastActivityDate="2014-01-29T09:47:07.153" CommentCount="0" />
  <row Id="21427426" PostTypeId="2" ParentId="21427226" CreationDate="2014-01-29T09:52:19.130" Score="1" Body="&lt;p&gt;First of all: instead of getting new images set every time you type something in your textbox, keep them in a collection maybe and add to your listbox only filtered part of it, like: &lt;code&gt;listBox1.DataSource = SomeLocalCollection.Where(i=&amp;gt;i.ItemName.Contains(textBox2.Text)).ToList()&lt;/code&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, use debugger to check which part goes wrong in your code.&lt;/p&gt;&#xA;" OwnerUserId="1284902" LastActivityDate="2014-01-29T09:52:19.130" CommentCount="3" />
  <row Id="21427475" PostTypeId="2" ParentId="21427226" CreationDate="2014-01-29T09:53:59.630" Score="1" Body="&lt;p&gt;As far as i know sql and wildcards like &lt;code&gt;%&lt;/code&gt; works only with a &lt;code&gt;LIKE&lt;/code&gt; operator.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.w3schools.com/sql/sql_wildcards.asp&quot; rel=&quot;nofollow&quot;&gt;SQL Wildcards&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1767534" LastActivityDate="2014-01-29T09:53:59.630" CommentCount="1" />
  <row Id="21429562" PostTypeId="2" ParentId="21429189" CreationDate="2014-01-29T11:20:59.460" Score="0" Body="&lt;p&gt;If this service is run on local system you can just check it with following code: &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt; using System.ServiceProcess;&#xA;&#xA; ...&#xA;&#xA;        ServiceController sc = new ServiceController(&quot;MSSQLFDLauncher$MSSQLSERVER2012&quot;);&#xA;&#xA;        switch (sc.Status)&#xA;        {&#xA;            case ServiceControllerStatus.Running:&#xA;                Console.WriteLine(&quot;Running&quot;);&#xA;                break;&#xA;            default:&#xA;                Console.WriteLine(&quot;Else&quot;);&#xA;                break;&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You can check service name in windows services.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;EDIT:&#xA;To check service names automatically use following code:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;DataTable dt = System.Data.Sql.SqlDataSourceEnumerator.Instance.GetDataSources();&#xA;ServiceController sc&#xA;foreach(DataRow d in dt.Rows)&#xA;{&#xA; string instance = dr[&quot;InstanceName&quot;].ToString();&#xA; sc = new ServiceController(&quot;MSSQLFDLauncher$&quot;+instance );&#xA;&#xA; switch (sc.Status)&#xA;        {&#xA;            case ServiceControllerStatus.Running:&#xA;                Console.WriteLine(&quot;MSSQLFDLauncher for&quot; + instance + &quot;is Running&quot;);&#xA;                break;&#xA;            default:&#xA;                Console.WriteLine(&quot;MSSQLFDLauncher for&quot; + instance + &quot;is NOT Running&quot;);&#xA;                break;&#xA;        }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="2499932" LastEditorUserId="2499932" LastEditDate="2014-01-30T10:49:44.687" LastActivityDate="2014-01-30T10:49:44.687" CommentCount="5" />
  <row Id="21429957" PostTypeId="2" ParentId="13533259" CreationDate="2014-01-29T11:37:29.327" Score="8" Body="&lt;p&gt;In my recent experience all of the above did not work. My test method &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public async void ListCaseReplace() { ... }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;was not showing up but compiling fine. When I removed the &lt;code&gt;async&lt;/code&gt; keyword the test the showed up in the Test Explorer. This is bacause &lt;code&gt;async void&lt;/code&gt; is a 'fire-and-forget' method. Make the method &lt;code&gt;async Task&lt;/code&gt; and you will get your test back!&lt;/p&gt;&#xA;" OwnerUserId="626442" LastEditorUserId="626442" LastEditDate="2014-01-29T12:23:09.493" LastActivityDate="2014-01-29T12:23:09.493" CommentCount="1" />
  <row Id="21430188" PostTypeId="2" ParentId="21429792" CreationDate="2014-01-29T11:46:09.007" Score="2" Body="&lt;pre&gt;&lt;code&gt;AlmostEquals(ref a, ref b).Should().BeTrue(&quot;because matrices a and b are almost equal&quot;);&#xA;AlmostEquals(ref a, ref b, epsilon).Should().BeTrue(&quot;because matrices a and b are almost equal&quot;);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You can even add some info about the matrices and epsilon into the message like&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;AlmostEquals(ref a, ref b, epsilon).Should().BeTrue(&quot;because matrices a and b are almost equal with {0} precision&quot;, epsilon);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;May be you would need to introduce a local bool variable to make the FluentAssertions work (I don't have it installed) and assign it a value of &lt;em&gt;AlmostEquals&lt;/em&gt; and then run assertion against the boolean variable.&lt;/p&gt;&#xA;" OwnerUserId="1876226" LastActivityDate="2014-01-29T11:46:09.007" CommentCount="0" />
  <row Id="21430540" PostTypeId="2" ParentId="19379672" CreationDate="2014-01-29T12:01:44.723" Score="4" Body="&lt;p&gt;The way I got rid of these warnings was to only create the shims which are needed. I added the following to the fakes config file.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  &amp;lt;ShimGeneration&amp;gt;&#xA;    &amp;lt;Clear/&amp;gt;&#xA;    &amp;lt;Add FullName=&quot;ATypeToShim!&quot;/&amp;gt;&#xA;    &amp;lt;Add FullName=&quot;AnotherTypeToShim!&quot;/&amp;gt;&#xA;  &amp;lt;/ShimGeneration&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The ! at the end of the filter makes it a precise case-sensitive match.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For stubs, I only ever stub interfaces so its easy:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;StubGeneration&amp;gt;&#xA;  &amp;lt;Clear /&amp;gt;&#xA;  &amp;lt;Add Interfaces =&quot;true&quot;/&amp;gt;&#xA;&amp;lt;/StubGeneration&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;There are more details here: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/hh708916.aspx#bkmk_type_filtering&quot; rel=&quot;nofollow&quot;&gt;http://msdn.microsoft.com/en-us/library/hh708916.aspx#bkmk_type_filtering&lt;/a&gt; &lt;/p&gt;&#xA;" OwnerUserId="1069816" LastEditorUserId="1069816" LastEditDate="2014-11-13T16:57:12.320" LastActivityDate="2014-11-13T16:57:12.320" CommentCount="0" />
  <row Id="21430985" PostTypeId="2" ParentId="21428513" CreationDate="2014-01-29T12:20:48.117" Score="0" Body="&lt;p&gt;You want to receive different pictures from multiple clients at a same time. Then you'll need to learn using threads. The recipient server will listen for clients and start a new thread for each client where code to receive image will be written. Like this you can simultaneously receive or send data in parallel manner.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.tutorialspoint.com/csharp/csharp_multithreading.htm&quot; rel=&quot;nofollow&quot;&gt;This&lt;/a&gt; will get you started with threads in c#&lt;/p&gt;&#xA;" OwnerUserId="2444433" LastActivityDate="2014-01-29T12:20:48.117" CommentCount="2" />
  <row Id="21431214" PostTypeId="2" ParentId="21425667" CreationDate="2014-01-29T12:31:28.087" Score="0" Body="&lt;p&gt;Working with sockets involves the following basic steps:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Creating socket&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Binding to the network interface&lt;/li&gt;&#xA;&lt;li&gt;Listen for connections or make socket connection&lt;/li&gt;&#xA;&lt;li&gt;Making receive and send calls&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Once you are done with the first three steps, socket connection is made and you will need to use that connection to make send and receive system calls.This means, first three listed points are &quot;do once&quot; only and you will use it to make send and recv calls any number of times until connection is finally closed. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.codeproject.com/Questions/468439/Basic-Introduction-Tutorial-to-writing-sockets-in&quot; rel=&quot;nofollow&quot;&gt;This link&lt;/a&gt; will help you further..&lt;/p&gt;&#xA;" OwnerUserId="2444433" LastActivityDate="2014-01-29T12:31:28.087" CommentCount="1" />
  <row Id="21431314" PostTypeId="2" ParentId="21431221" CreationDate="2014-01-29T12:35:24.350" Score="0" Body="&lt;p&gt;@anilglpl, Before you ask for help from others, go online and try to help yourself.&lt;/p&gt;&#xA;" OwnerUserId="1412975" LastActivityDate="2014-01-29T12:35:24.350" CommentCount="1" />
  <row Id="21431637" PostTypeId="2" ParentId="21431221" CreationDate="2014-01-29T12:48:37.477" Score="0" Body="&lt;p&gt;if you want to store your images in bytes to database and use it refer this link&#xA;&lt;a href=&quot;http://www.aspsnippets.com/Articles/Display-images-from-SQL-Server-Database-in-ASP.Net-GridView-control.aspx&quot; rel=&quot;nofollow&quot;&gt;Image Gallery using GridView Control&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;for using image grid you can refer this link&#xA;&lt;a href=&quot;http://geekswithblogs.net/omtalsania7/archive/2012/12/27/how-to-create-an-image-grid-with-asp.net-44.5-using.aspx&quot; rel=&quot;nofollow&quot;&gt;Image Gallery using ImageGrid&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1289928" LastEditorUserId="13302" LastEditDate="2014-01-29T13:59:07.180" LastActivityDate="2014-01-29T13:59:07.180" CommentCount="2" />
  <row Id="21431877" PostTypeId="2" ParentId="21428787" CreationDate="2014-01-29T13:00:12.307" Score="1" Body="&lt;p&gt;Since obviously there is a lot to be done to set up the &lt;code&gt;DataGridViewCell&lt;/code&gt;'s and &lt;code&gt;DataGridView&lt;/code&gt;'s, why don't you try something else?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First, create a component that does your special formatting:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class SpecialFormatter&#xA;{&#xA;  public object Format(object value)&#xA;  {&#xA;    var formattedValue = string.Empty;&#xA;    // ... logic to test here&#xA;    return FormattedValue;&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And then use it your &lt;code&gt;DataGridViewCell&lt;/code&gt; implementation:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class MyCell : DataGridViewCell&#xA;{&#xA;  protected override object GetFormattedValue(object value, int rowIndex, ref System.Windows.Forms.DataGridViewCellStyle cellStyle, System.ComponentModel.TypeConverter valueTypeConverter, System.ComponentModel.TypeConverter formattedValueTypeConverter, System.Windows.Forms.DataGridViewDataErrorContexts context)&#xA;  {&#xA;    return MyCustomFormatting(value);&#xA;  }&#xA;&#xA;  private object MyCustomFormatting(object value)&#xA;  {&#xA;    return new SpecialFormatter.Format(value);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then you go ahead and unit test &lt;code&gt;SpecialFormatter&lt;/code&gt; and you're done. Unless there is much else going on in your &lt;code&gt;DataGridViewCell&lt;/code&gt; implementation, then there is not much value in testing it.&lt;/p&gt;&#xA;" OwnerUserId="2634248" LastActivityDate="2014-01-29T13:00:12.307" CommentCount="1" />
  <row Id="21432392" PostTypeId="2" ParentId="21432174" CreationDate="2014-01-29T13:22:50.117" Score="0" Body="&lt;p&gt;the line &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;IsCurrentOrder = (reader[&quot;IsCurrentOrder&quot;] != DBNull.Value &amp;amp;&amp;amp; !string.IsNullOrEmpty(reader[&quot;IsCurrentOrder&quot;].ToString())) ? true : false;&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;It's not actually checking the value of the field, only that it's not null or empty.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Try&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;if(&#xA;(reader[&quot;IsCurrentOrder&quot;] != DBNull.Value &#xA;&amp;amp;&amp;amp; &#xA;!string.IsNullOrEmpty(reader[&quot;IsCurrentOrder&quot;].ToString())) &#xA;)&#xA;{&#xA;    IsCurrentOrder = reader[&quot;IsCurrentOrder&quot;];&#xA;}&#xA;else&#xA;IsCurrentOrder = false;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;I think there is a lot of refactoring you could do to this method though that will simplify the logic. &lt;/p&gt;&#xA;" OwnerUserId="1221057" LastActivityDate="2014-01-29T13:22:50.117" CommentCount="1" />
  <row Id="21432405" PostTypeId="2" ParentId="21432174" CreationDate="2014-01-29T13:23:15.853" Score="2" Body="&lt;p&gt;The problem could be with this expression:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;!string.IsNullOrEmpty(reader[&quot;IsCurrentOrder&quot;].ToString())&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Instead of calling &lt;code&gt;ToString()&lt;/code&gt;, try simply casting it to a string:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;!string.IsNullOrEmpty((string)reader[&quot;IsCurrentOrder&quot;])&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Possibly even better (the previous line might throw an exception if it's not really a string):&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;!string.IsNullOrEmpty(reader[&quot;IsCurrentOrder&quot;] as string)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;The reason being is that if the string is really null, calling &lt;code&gt;ToString()&lt;/code&gt; will return a &lt;em&gt;non-null&lt;/em&gt; string &quot;null&quot;.&lt;/p&gt;&#xA;" OwnerUserId="425871" LastActivityDate="2014-01-29T13:23:15.853" CommentCount="6" />
  <row Id="21432468" PostTypeId="2" ParentId="18837225" CreationDate="2014-01-29T13:26:01.330" Score="0" Body="&lt;p&gt;Lots of times dealing with this error. I just closed and reopened. It happens every time I add a solution and then delete it. I think Xamarin Ide is not a really good Ide, not in Mac at least.&lt;/p&gt;&#xA;" OwnerUserId="2658381" LastActivityDate="2014-01-29T13:26:01.330" CommentCount="0" />
  <row Id="21432737" PostTypeId="2" ParentId="16795116" CreationDate="2014-01-29T13:37:18.797" Score="1" Body="&lt;p&gt;Lots of time having this issue. What i did:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Remove &quot;resources.designer.cs&quot; using Xamarin (secondary button-&gt;remove).&lt;/li&gt;&#xA;&lt;li&gt;Go to command line (finder on Mac/Explorer on Windows) and delete manually the file (be sure you deleted it).&lt;/li&gt;&#xA;&lt;li&gt;Go to Xamarin, clean-&gt;build (this will regenerate the resoruces.designer.cs).&lt;/li&gt;&#xA;&lt;li&gt;As you remove the file from the project, you have to add it again. secondary button over project-&gt; add Files-&gt;select Resources.designer.cs (tipically on /Resources folder).&lt;/li&gt;&#xA;&lt;li&gt;Clean and build.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&#xA;&lt;p&gt;At least it have worked most of the time.&lt;/p&gt;&#xA;" OwnerUserId="2658381" LastActivityDate="2014-01-29T13:37:18.797" CommentCount="0" />
  <row Id="21433002" PostTypeId="2" ParentId="21432855" CreationDate="2014-01-29T13:49:00.233" Score="0" Body="&lt;p&gt;A good decision would be breaking your large data into smaller packages.&lt;/p&gt;&#xA;" OwnerUserId="1969863" LastActivityDate="2014-01-29T13:49:00.233" CommentCount="1" />
  <row Id="21433008" PostTypeId="2" ParentId="21432855" CreationDate="2014-01-29T13:49:11.690" Score="0" Body="&lt;p&gt;Modify the API to &quot;page&quot; the results.  In other words, instead of &lt;code&gt;GetALL()&lt;/code&gt; expose &lt;code&gt;Get(int start, int end)&lt;/code&gt; and have the user go through them a chunk at a time.  Your code in &lt;code&gt;GetALL&lt;/code&gt; would change to something like:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var result = (from user in entity.User select user).Skip(start).Take(end-start).ToList();&#xA;    return result;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;It's also a nicer thing to do for your users so you don't overwhelm them with too much data.&lt;/p&gt;&#xA;" OwnerUserId="1698557" LastActivityDate="2014-01-29T13:49:11.690" CommentCount="4" />
  <row Id="21434110" PostTypeId="2" ParentId="21433944" CreationDate="2014-01-29T14:33:10.747" Score="0" Body="&lt;p&gt;Since you're sending via a socket you're at the mercy of the network. First, the network will have broken your message down in multiple packates each of which is received separately by your listener. Every now and then, the underlying socket on the listening machine will say to itself 'Got some incoming, but there's more to come. Wait a bit'. After a while it'll say, 'Oh well, give what I've got' and keep waiting'.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;That's what's happening. In WCF, the WCF implementation gets its data via sockets which do exactly the same thing. But WCF waits till the whole message arrives before giving it to your waiting code. That's one of the advantages of using a Framework like WCF. It protects you from the metal.&lt;/p&gt;&#xA;" OwnerUserId="3014322" LastActivityDate="2014-01-29T14:33:10.747" CommentCount="2" />
  <row Id="21434135" PostTypeId="2" ParentId="21433944" CreationDate="2014-01-29T14:34:12.843" Score="0" Body="&lt;p&gt;Any message sent over TCP may be divided into several packets depending on its size. That's why you should &lt;em&gt;never&lt;/em&gt; assume to get a message in one go, but read until you're sure you've received everything.&lt;/p&gt;&#xA;" OwnerUserId="117362" LastActivityDate="2014-01-29T14:34:12.843" CommentCount="1" />
  <row Id="21434598" PostTypeId="2" ParentId="21434492" CreationDate="2014-01-29T14:54:16.000" Score="2" Body="&lt;p&gt;You can write the query as this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;declare @Ids varchar(500) = '12964,12965,12966'&#xA;&#xA;select *&#xA;from tblBooks&#xA;where ','+cast(BookID as varchar(500))+',' like '%,'+@Ids+',%';&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;But you don't want to do that because the performance is bad -- the query cannot use indexes.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Three other options.  Use dynamic SQL and plug the list directly into the query.  Or use a &lt;code&gt;split&lt;/code&gt; function to split the string.  Or use a table variable:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;declare @ids table (id int);&#xA;insert into @ids(id)&#xA;    select 12964 union all select 12965 union all select 12966;&#xA;&#xA;select b.*&#xA;from tblBooks b&#xA;where b.BookId in (select id from @ids);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1144035" LastActivityDate="2014-01-29T14:54:16.000" CommentCount="0" />
  <row Id="21434620" PostTypeId="2" ParentId="21434492" CreationDate="2014-01-29T14:54:56.700" Score="7" Body="&lt;p&gt;Use a table variable:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;DECLARE @Ids TABLE (ID INT);&#xA;INSERT @Ids VALUES (12964),(12965),(12966);&#xA;&#xA;SELECT *&#xA;FROM tblBooks&#xA;WHERE BookID in (SELECT ID FROM @Ids);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;If you need to pass this to a procedure then you can use a table valued parameter:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;CREATE TYPE dbo.ListOfInt AS TABLE (ID INT);&#xA;GO&#xA;CREATE PROCEDURE dbo.GetBooks @IDs dbo.ListOfInt READONLY&#xA;AS&#xA;BEGIN&#xA;    SELECT *&#xA;    FROM tblBooks&#xA;    WHERE BookID in (SELECT ID FROM @Ids);&#xA;END&#xA;GO&#xA;&#xA;DECLARE @IDs dbo.ListofInt;&#xA;INSERT @Ids VALUES (12964),(12965),(12966);&#xA;EXECUTE dbo.GetBooks @Ids;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Or From c#&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var table = new DataTable();&#xA;table.Columns.Add(&quot;ID&quot;, typeof(int));&#xA;&#xA;// ADD YOUR LIST TO THE TABLE&#xA;&#xA;using (var connection = new SqlConnection(&quot;Connection String&quot;))&#xA;using (var command = new SqlCommand(&quot;dbo.GetBooks&quot;, connection))&#xA;{&#xA;    command.CommandType = CommandType.StoredProcedure;&#xA;    var param = new SqlParameter(&quot;@Ids&quot;, SqlDbType.Structured);&#xA;    param.TypeName = &quot;dbo.ListofInt&quot;;&#xA;    param.Value = table;&#xA;    command.Parameters.Add(table);&#xA;    connection.Open();&#xA;&#xA;    using (var reader = command.ExecuteReader())&#xA;    {&#xA;        while (reader.Read())&#xA;        {&#xA;            // do something&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Once the TYPE is in place, you don't even need to use a stored procedure. You can simply call a normal query:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;using (var connection = new SqlConnection(&quot;Connection String&quot;))&#xA;using (var command = new SqlCommand(&quot;SELECT * FROM tblBooks WHERE BookID IN (SELECT ID FROM @IDs)&quot;, connection))&#xA;{&#xA;    var param = new SqlParameter(&quot;@Ids&quot;, SqlDbType.Structured);&#xA;    param.TypeName = &quot;dbo.ListofInt&quot;;&#xA;    param.Value = table;&#xA;    command.Parameters.Add(table);&#xA;    connection.Open();&#xA;&#xA;    // ETC&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Doing the split in c# using &lt;code&gt;String.Split()&lt;/code&gt; and passing the list to SQL will be more efficient than any approach that does the split in SQL&lt;/p&gt;&#xA;" OwnerUserId="1048425" LastEditorUserId="1048425" LastEditDate="2014-01-29T15:00:42.253" LastActivityDate="2014-01-29T15:00:42.253" CommentCount="2" />
  <row Id="21434667" PostTypeId="2" ParentId="21423598" CreationDate="2014-01-29T14:56:58.967" Score="0" Body="&lt;p&gt;Open Application.exe.config and change your connection string according to that machine. For example &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;connectionStrings&amp;gt;&#xA;    &amp;lt;add name=&quot;StoreConnectionString&quot;&#xA;      connectionString=&quot;Data Source=PCName\InstanceName;MultipleActiveResultSets=True;Initial Catalog=YourDatabase;Integrated Security=False;&quot;&#xA;      providerName=&quot;System.Data.SqlClient&quot; /&amp;gt;&#xA;&amp;lt;/connectionStrings&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1168751" LastActivityDate="2014-01-29T14:56:58.967" CommentCount="0" />
  <row Id="21434707" PostTypeId="2" ParentId="21434492" CreationDate="2014-01-29T14:58:00.807" Score="2" Body="&lt;p&gt;This won't work. SQL Server does not split strings for you implicitly and there is no built in  string split function in SQL Server either. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are driving this via C# you can use Table value parameters. You can also pass your query through Dapper-Dot-Net which will automatically parameterize an &quot;In&quot; query.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you really must do this in T-SQL, you can also use a string splitting logic here is a relatively concise one. &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SELECT i.value('./text()[1]', 'int') [id] into #ids &#xA;FROM( values(CONVERT(xml,'&amp;lt;r&amp;gt;' + REPLACE(@Ids+left(@@dbts,0),',','&amp;lt;/r&amp;gt;&amp;lt;r&amp;gt;') +  '&amp;lt;/r&amp;gt;')) ) a(_) &#xA;CROSS APPLY _.nodes('./r') x(i)&#xA;select *&#xA;from tblBooks a&#xA;join #ids i on i.id = a.bookId&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="468672" LastActivityDate="2014-01-29T14:58:00.807" CommentCount="0" />
  <row Id="21434726" PostTypeId="2" ParentId="21434492" CreationDate="2014-01-29T14:58:39.453" Score="0" Body="&lt;p&gt;Create this function:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;CREATE FUNCTION [dbo].[SplitDelimiterString] (@StringWithDelimiter VARCHAR(8000), @Delimiter VARCHAR(8))&#xA;&#xA;RETURNS @ItemTable TABLE (Item VARCHAR(8000))&#xA;&#xA;AS&#xA;BEGIN&#xA;    DECLARE @StartingPosition INT;&#xA;    DECLARE @ItemInString VARCHAR(8000);&#xA;&#xA;    SELECT @StartingPosition = 1;&#xA;    --Return if string is null or empty&#xA;    IF LEN(@StringWithDelimiter) = 0 OR @StringWithDelimiter IS NULL RETURN; &#xA;&#xA;    WHILE @StartingPosition &amp;gt; 0&#xA;    BEGIN&#xA;        --Get starting index of delimiter .. If string&#xA;        --doesn't contain any delimiter than it will returl 0 &#xA;        SET @StartingPosition = CHARINDEX(@Delimiter,@StringWithDelimiter); &#xA;&#xA;        --Get item from string        &#xA;        IF @StartingPosition &amp;gt; 0                &#xA;            SET @ItemInString = SUBSTRING(@StringWithDelimiter,0,@StartingPosition)&#xA;        ELSE&#xA;            SET @ItemInString = @StringWithDelimiter;&#xA;        --If item isn't empty than add to return table    &#xA;        IF( LEN(@ItemInString) &amp;gt; 0)&#xA;            INSERT INTO @ItemTable(Item) VALUES (@ItemInString);            &#xA;&#xA;        --Remove inserted item from string&#xA;        SET @StringWithDelimiter = SUBSTRING(@StringWithDelimiter,@StartingPosition + &#xA;                     LEN(@Delimiter),LEN(@StringWithDelimiter) - @StartingPosition)&#xA;&#xA;        --Break loop if string is empty&#xA;        IF LEN(@StringWithDelimiter) = 0 BREAK;&#xA;    END&#xA;&#xA;    RETURN&#xA;END&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then call it like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;declare @Ids varchar(500) = '12964,12965,12966'&#xA;&#xA;select *&#xA;from tblBooks&#xA;where BookID in (SELECT * FROM dbo.SplitDelimiterString(@ids,','))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="529193" LastActivityDate="2014-01-29T14:58:39.453" CommentCount="1" />
  <row Id="21434918" PostTypeId="2" ParentId="21434492" CreationDate="2014-01-29T15:06:09.567" Score="0" Body="&lt;p&gt;one way is to cast int to varchar. many other ways....&lt;/p&gt;&#xA;&#xA;&lt;p&gt;select *&#xA;from tblBooks&#xA;where CAST(BookID as varchar(50)) in (@Ids)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;related: &lt;a href=&quot;http://stackoverflow.com/questions/1707326/define-variable-to-use-with-in-operator-t-sql&quot;&gt;Define variable to use with IN operator (T-SQL)&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1331896" LastActivityDate="2014-01-29T15:06:09.567" CommentCount="0" />
  <row Id="21434973" PostTypeId="2" ParentId="21434846" CreationDate="2014-01-29T15:08:04.660" Score="2" Body="&lt;p&gt;You want a ListBox with a WrapPanel, but you prob want your objects to be the same size, width and height, which will be equal to your widest and tallest object, that's why we use a grid with IsSharedSizeScope with a WrapPanel.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;ListBox Name=&quot;ButtonList&quot; &#xA;                 HorizontalContentAlignment=&quot;Stretch&quot; &#xA;                 BorderThickness=&quot;0&quot; &#xA;                 ScrollViewer.HorizontalScrollBarVisibility=&quot;Disabled&quot; &#xA;                 Padding=&quot;0&quot;  &#xA;                 Background=&quot;Transparent&quot; &#xA;                 Margin=&quot;0&quot;&#xA;                 Grid.IsSharedSizeScope=&quot;True&quot;&#xA;                 &amp;gt;&#xA;&#xA;&#xA;            &amp;lt;ListBox.ItemsPanel&amp;gt;&#xA;                &amp;lt;ItemsPanelTemplate &amp;gt;&#xA;                    &amp;lt;WrapPanel /&amp;gt;&#xA;                &amp;lt;/ItemsPanelTemplate&amp;gt;&#xA;            &amp;lt;/ListBox.ItemsPanel&amp;gt;&#xA;            &amp;lt;ListBox.ItemTemplate&amp;gt;&#xA;                &amp;lt;DataTemplate&amp;gt;&#xA;                    &amp;lt;Grid&amp;gt;&#xA;                        &amp;lt;!-- you need the grid, otherwise buttons are different heights depending on the control --&amp;gt;&#xA;                        &amp;lt;Grid.RowDefinitions&amp;gt;&#xA;                            &amp;lt;RowDefinition SharedSizeGroup=&quot;row1&quot;/&amp;gt;&#xA;                        &amp;lt;/Grid.RowDefinitions&amp;gt;&#xA;                        &amp;lt;Grid.ColumnDefinitions&amp;gt;&#xA;                            &amp;lt;ColumnDefinition SharedSizeGroup=&quot;col1&quot;/&amp;gt;&#xA;                        &amp;lt;/Grid.ColumnDefinitions&amp;gt;&#xA;&amp;lt;!-- put some control here --&amp;gt; &#xA;&#xA;  &amp;lt;/Grid&amp;gt;&#xA;                &amp;lt;/DataTemplate&amp;gt;&#xA;            &amp;lt;/ListBox.ItemTemplate&amp;gt;&#xA;        &amp;lt;/ListBox&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="73804" LastActivityDate="2014-01-29T15:08:04.660" CommentCount="0" />
  <row Id="21435034" PostTypeId="2" ParentId="21392399" CreationDate="2014-01-29T15:10:10.667" Score="0" Body="&lt;p&gt;In the assembly, I used a timer to periodically check the .txt file status, something like this:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;System.Timers.Timer _logFileCheckTimer;      &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    public FijiLauncherControl()&#xA;&#xA;    {        // timer set up&#xA;                    _logFileCheckTimer = new System.Timers.Timer(250);  &#xA;                    _logFileCheckTimer.Enabled = true;&#xA;                    _logFileCheckTimer.Elapsed += new System.Timers.ElapsedEventHandler(_logFileCheckTimer_Elapsed);&#xA;                   _logFileCheckTimer.Start();  // start the timer&#xA;&#xA;     }    &#xA;&#xA;     void _logFileCheckTimer_Elapsed(object sender, EventArgs e)&#xA;        {&#xA;            if (_processOn &amp;amp;&amp;amp; IsLogOn)&#xA;            {&#xA;                try&#xA;                {&#xA;                    _processFinished = CheckStatuts();  // checking file status&#xA;&#xA;                    if (_processFinished) // fire event if checking status returns true&#xA;                    {&#xA;                        OnIjmFinished(EventArgs.Empty);&#xA;                        _processOn = false;&#xA;                        _logFileCheckTimer.Stop();&#xA;                    }&#xA;                }&#xA;                catch (Exception ex)&#xA;                {&#xA;&#xA;                }&#xA;            }&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;In the aseembly. setup a event in the dll that will be triggered if the &lt;code&gt;_processFinished = CheckStatuts();&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;// event delegate&#xA;    public delegate void IjmFinishedEventHandler(object sender, EventArgs e);&#xA;     public event IjmFinishedEventHandler IjmFinished;  // event handler&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;   protected virtual void OnIjmFinished(EventArgs e)&#xA;   {&#xA;      if (IjmFinished != null)   // trigger event&#xA;                IjmFinished(this, e);          &#xA;   }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;In the main application, there should be event receiver, something like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;private FijiLauncherControl _fl; // the object of your assembly&#xA;&#xA;  _fl.IjmFinished += new IjmFinishedEventHandler(_fl_IjmFinished); // event from the assembly should trigger an event handler&#xA;&#xA;   void _fl_IjmFinished(object sender, EventArgs e)   // event handler&#xA;        {&#xA;            _vm.IjmFinished = true;   // a boolean var in viewmodel in main app set to be true once the event from the assembly is triggered&#xA;&#xA;            //throw new NotImplementedException();&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;That should do the job.&lt;/p&gt;&#xA;" OwnerUserId="1277239" LastEditorUserId="1277239" LastEditDate="2014-01-29T15:16:49.417" LastActivityDate="2014-01-29T15:16:49.417" CommentCount="1" />
  <row Id="21435084" PostTypeId="2" ParentId="21432174" CreationDate="2014-01-29T15:12:13.980" Score="1" Body="&lt;p&gt;IsCurrentOrder is not declared locally.  It seems to be declared at a higher scope.  When you enter this function, nothing is initializing the variable (back to false). So, it is remaining at its last setting.  Try this code instead:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public bool IsCurrentOrderFind(string itemNumber)&#xA;{&#xA;    bool IsCurrentOrder = false;&#xA;&#xA;    //and the rest of your source code&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="283895" LastEditorUserId="283895" LastEditDate="2014-01-29T20:03:54.707" LastActivityDate="2014-01-29T20:03:54.707" CommentCount="0" />
  <row Id="21435333" PostTypeId="2" ParentId="3202317" CreationDate="2014-01-29T15:21:38.367" Score="0" Body="&lt;p&gt;What worked for me in Visual Studio 2012:&lt;/p&gt;&#xA;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Go to Tools -&gt; Options -&gt; Projects and Solutions -&gt; Build and Run&lt;/li&gt;&#xA;&lt;li&gt;For &quot;On Run, when projects are out of date&quot; select &quot;Always build&quot;&lt;/li&gt;&#xA;&lt;li&gt;Uncheck &quot;Only build startup projects and dependencies on Run&quot;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;" OwnerUserId="632084" LastActivityDate="2014-01-29T15:21:38.367" CommentCount="0" />
  <row Id="21435425" PostTypeId="2" ParentId="21435319" CreationDate="2014-01-29T15:28:22.967" Score="2" Body="&lt;p&gt;Problem is due to line:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;cmd.Parameters.Clear();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You are clearing out parameters after adding them, you will get the same error for parameter &lt;code&gt;@Name&lt;/code&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am not really sure why you are adding &lt;code&gt;Photo&lt;/code&gt; parameter in line:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;cmd.Parameters.Add(new SqlParameter(&quot;Photo&quot;, imgByteArr));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You can just comment out the lines:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;cmd.Parameters.Add(new SqlParameter(&quot;Photo&quot;, imgByteArr));&#xA;cmd.Parameters.Clear();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;and your code should be good enough&lt;/p&gt;&#xA;" OwnerUserId="961113" LastActivityDate="2014-01-29T15:28:22.967" CommentCount="3" />
  <row Id="21436043" PostTypeId="2" ParentId="21435932" CreationDate="2014-01-29T15:54:26.180" Score="6" Body="&lt;p&gt;The reason for this is that you are using SQL LIKE operator.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you take a look at LIKE &lt;a href=&quot;http://technet.microsoft.com/en-us/library/ms179859.aspx&quot; rel=&quot;nofollow&quot;&gt;documentation&lt;/a&gt;, you can see that '_' character has special meaning and need to be escaped just like you are doing with percent sign. &lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;_ (underscore)  - Any single character.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;To escape &lt;code&gt;_&lt;/code&gt; character just use square brackets like so &lt;code&gt;[_]&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So your query becomes something like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SELECT * &#xA;FROM Users&#xA;WHERE email LIKE '%a[_]Scott%'&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="3070052" LastEditorUserId="3070052" LastEditDate="2014-04-21T08:43:53.193" LastActivityDate="2014-04-21T08:43:53.193" CommentCount="0" />
  <row Id="21436238" PostTypeId="2" ParentId="21436111" CreationDate="2014-01-29T16:01:59.200" Score="0" Body="&lt;p&gt;You can do it with Visual Studio using &lt;a href=&quot;http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d&quot; rel=&quot;nofollow&quot;&gt;Entity Framework Power Tools&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Take a look at step-by-step tutorial &lt;a href=&quot;http://msdn.microsoft.com/en-us/data/jj200620.aspx&quot; rel=&quot;nofollow&quot;&gt;here&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="3070052" LastActivityDate="2014-01-29T16:01:59.200" CommentCount="1" />
  <row Id="21436241" PostTypeId="2" ParentId="21436111" CreationDate="2014-01-29T16:02:05.410" Score="2" Body="&lt;p&gt;Yes, there is a feature in Visual Studio which allows you to create a Code First model from an existing Database.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here is the doc: &lt;a href=&quot;http://msdn.microsoft.com/en-us/data/jj200620&quot; rel=&quot;nofollow&quot;&gt;http://msdn.microsoft.com/en-us/data/jj200620&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Under the heading &quot;Reverse Engineer Model&quot;, see the notes about using the &quot;Reverse Engineer Code First&quot; feature.&lt;/p&gt;&#xA;" OwnerUserId="346561" LastActivityDate="2014-01-29T16:02:05.410" CommentCount="1" />
  <row Id="21436260" PostTypeId="2" ParentId="21436111" CreationDate="2014-01-29T16:03:03.417" Score="1" Body="&lt;p&gt;Use the following tools: &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://visualstudiogallery.msdn.microsoft.com/72a60b14-1581-4b9b-89f2-846072eff19d&quot; rel=&quot;nofollow&quot;&gt;Entity Framework Power Tools&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1230092" LastActivityDate="2014-01-29T16:03:03.417" CommentCount="1" />
  <row Id="21436264" PostTypeId="2" ParentId="21436182" CreationDate="2014-01-29T16:03:34.653" Score="0" Body="&lt;p&gt;this sql will list all user tables and row counts in a database. It will be a starting point..&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SELECT o.name,&#xA;  ddps.row_count &#xA;FROM sys.indexes AS i&#xA;  INNER JOIN sys.objects AS o ON i.OBJECT_ID = o.OBJECT_ID&#xA;  INNER JOIN sys.dm_db_partition_stats AS ddps ON i.OBJECT_ID = ddps.OBJECT_ID&#xA;  AND i.index_id = ddps.index_id &#xA;WHERE i.index_id &amp;lt; 2  AND o.is_ms_shipped = 0 ORDER BY o.NAME &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Hth,&#xA;O&lt;/p&gt;&#xA;" OwnerUserId="844705" LastEditorUserId="352176" LastEditDate="2014-01-29T16:04:14.460" LastActivityDate="2014-01-29T16:04:14.460" CommentCount="0" />
  <row Id="21436480" PostTypeId="2" ParentId="21315773" CreationDate="2014-01-29T16:12:03.110" Score="0" Body="&lt;p&gt;The problem was that i was closing the zip and after that trying to add the file...&#xA;I really hated myself for a few hours but that's what was going on thanks.&lt;/p&gt;&#xA;" OwnerUserId="3120770" LastActivityDate="2014-01-29T16:12:03.110" CommentCount="0" />
  <row Id="21436786" PostTypeId="2" ParentId="21436629" CreationDate="2014-01-29T16:24:49.693" Score="3" Body="&lt;p&gt;Add a unique constraint on those columns:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;ALTER TABLE dbo.Appointement&#xA;  ADD CONSTRAINT uAppt UNIQUE (doctorId, dateApt, hourAp)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Or add it when you create the table:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;CREATE TABLE [dbo].[Appointement] (&#xA;     [aptId]       INT      IDENTITY (1, 1) NOT NULL,&#xA;     [clientId]    INT      NULL,&#xA;     [doctorId]   INT      NOT NULL,&#xA;     [dateApt]   DATE     NOT NULL,&#xA;     [hourApt]  TIME (7) NOT NULL,&#xA;     [IsAvailable] BIT      NULL,&#xA;     PRIMARY KEY CLUSTERED ([rdvId] ASC),&#xA;     CONSTRAINT [fk_doctorID] FOREIGN KEY ([doctorId]) REFERENCES [dbo].[Doctor] ([Id]),&#xA;     CONSTRAINT [fk_clientID] FOREIGN KEY ([clientId]) REFERENCES [dbo].[User] ([Id_user]),&#xA;     CONSTRAINT uAppt UNIQUE (doctorId, dateApt, hourAp)&#xA; );&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="226897" LastActivityDate="2014-01-29T16:24:49.693" CommentCount="1" />
  <row Id="21436800" PostTypeId="2" ParentId="21436629" CreationDate="2014-01-29T16:25:18.513" Score="0" Body="&lt;p&gt;I think what you're looking for is a &lt;code&gt;unique constraint&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;CONSTRAINT [UQ_DoctorID_DateApt_HourApt] UNIQUE NONCLUSTERED&#xA;(&#xA;    [DoctorId], [DateApt], [HoursApt]&#xA;)&#xA;) ON [PRIMARY]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;(This is syntax for part of &lt;code&gt;CREATE TABLE&lt;/code&gt; statement)&lt;/p&gt;&#xA;" OwnerUserId="546000" LastActivityDate="2014-01-29T16:25:18.513" CommentCount="3" />
  <row Id="21436804" PostTypeId="2" ParentId="21435932" CreationDate="2014-01-29T16:25:24.680" Score="0" Body="&lt;p&gt;Here's a sql fiddle to clear up the understandings&#xA;&lt;a href=&quot;http://sqlfiddle.com/#!6/d88af/4&quot; rel=&quot;nofollow&quot;&gt;http://sqlfiddle.com/#!6/d88af/4&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="2359268" LastActivityDate="2014-01-29T16:25:24.680" CommentCount="0" />
  <row Id="21436880" PostTypeId="2" ParentId="21057408" CreationDate="2014-01-29T16:28:58.427" Score="2" Body="&lt;p&gt;Judging by the code sample you've given, it looks like the data is encoded using &lt;a href=&quot;https://code.google.com/p/protobuf/&quot; rel=&quot;nofollow&quot;&gt;Protocol Buffers&lt;/a&gt;, Google's serialization format.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Fortunately, there are at least two libraries implementing Protocol Buffers for .NET:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/protobuf-net/&quot; rel=&quot;nofollow&quot;&gt;protobuf-net&lt;/a&gt;: Written for .NET from the ground up, this is a good choice if you don't particularly need the C# code to look like the equivalent Java/C++ code.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&quot;https://code.google.com/p/protobuf-csharp-port/&quot; rel=&quot;nofollow&quot;&gt;protobuf-csharp-port&lt;/a&gt;: This is a port from the Java client code, with some .NET idioms added - so if you're working with Protocol Buffers on multiple platforms, this &lt;em&gt;may&lt;/em&gt; be more appropriate. (Disclaimer: I did most of the coding for this port.)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;The good news is that the wire format for the two is the same, because it's the standard Protocol Buffer wire format. So if you decide later on that you've made the wrong choice, you don't need to worry about the data format changing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In terms of communicating with the server, &lt;code&gt;TcpClient&lt;/code&gt; should be absolutely fine. You'll need to find out &lt;em&gt;exactly&lt;/em&gt; what the protocol is - for example, whether it's Protocol Buffers over HTTP, or something similar. (If it &lt;em&gt;is&lt;/em&gt; over HTTP, &lt;code&gt;WebClient&lt;/code&gt; would be a simpler approach.) However, beyond that it's straight TCP/IP: you write the bytes to the server, and it should write a reply. You can use &lt;a href=&quot;http://www.wireshark.org/&quot; rel=&quot;nofollow&quot;&gt;Wireshark&lt;/a&gt; to look at the traffic between the client and the server, if you need to trace where problems are occurring.&lt;/p&gt;&#xA;" OwnerUserId="22656" LastActivityDate="2014-01-29T16:28:58.427" CommentCount="0" />
  <row Id="21437022" PostTypeId="2" ParentId="21436629" CreationDate="2014-01-29T16:34:26.530" Score="1" Body="&lt;p&gt;I added this line &#xA;     CONSTRAINT uniqueAPT UNIQUE (doctorId, dateApt, hourApt)&lt;/p&gt;&#xA;" OwnerUserId="3127986" LastActivityDate="2014-01-29T16:34:26.530" CommentCount="0" />
  <row Id="21437065" PostTypeId="2" ParentId="21436182" CreationDate="2014-01-29T16:36:01.437" Score="0" Body="&lt;p&gt;This query will help you to find the column with particular name and datatype&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SELECT t.name AS table_name,&#xA;    SCHEMA_NAME(t.schema_id) AS schema_name,&#xA;    c.name AS column_name ,tp.name&#xA;FROM sys.tables AS t&#xA;INNER JOIN sys.columns c ON t.OBJECT_ID = c.OBJECT_ID&#xA;INNER JOIN sys.types tp ON tp.user_type_id=c.user_type_id&#xA;WHERE c.name LIKE '%Product%' AND tp.name LIKE '%int%'&#xA;ORDER BY schema_name, table_name;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1377902" LastActivityDate="2014-01-29T16:36:01.437" CommentCount="0" />
  <row Id="21437334" PostTypeId="2" ParentId="21437244" CreationDate="2014-01-29T16:47:58.257" Score="6" Body="&lt;p&gt;You never execute the insert command, you have to do &lt;code&gt;cmd.ExecuteNonQuery();&lt;/code&gt; or something like that.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, instead of passing the arguments to the command, you're causing a syntax error. Use this instead:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SqlCommand cmd = new SqlCommand(&quot;INSERT into Table33(Product_Name,Product_Price) values(@name, @price)&quot;);&#xA;cmd.Parameters.AddWithValue(&quot;@name&quot;, menuAndPriceList[i].key);&#xA;cmd.Parameters.AddWithValue(&quot;@price&quot;, menuAndPriceList[i].Value);&#xA;cmd.ExecuteNonQuery();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;As another sidenote, don't catch all exceptions without doing anything with the caught exception. Have a look at the exceptions thrown, log them, otherwise you have no idea what's going wrong.&lt;/p&gt;&#xA;" OwnerUserId="3032289" LastActivityDate="2014-01-29T16:47:58.257" CommentCount="0" />
  <row Id="21437385" PostTypeId="2" ParentId="5567945" CreationDate="2014-01-29T16:49:49.077" Score="0" Body="&lt;p&gt;I recently needed to do a System Restore and it caused several of my files to change/disappear that I had been working on since the restore.  Some of those were DLL files.  I used Source Control to retrieve the entire project but I still had a similar issue as above.  I found &lt;a href=&quot;http://forums.asp.net/t/1960217.aspx&quot; rel=&quot;nofollow&quot;&gt;this answer&lt;/a&gt; that described you may need to remove a DLL and readd it to get your errors fixed.  This was the case in my scenario.  &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Removing &lt;code&gt;WebMatrix.WebData&lt;/code&gt; and readding it as well as adding in &lt;code&gt;WebMatrix.Data&lt;/code&gt; fixed my error of &lt;code&gt;The type or namespace name 'Data' does not exist in the namespace 'WebMatrix' ...&lt;/code&gt;.&lt;/p&gt;&#xA;" OwnerUserId="1558269" LastActivityDate="2014-01-29T16:49:49.077" CommentCount="0" />
  <row Id="21437392" PostTypeId="2" ParentId="21436025" CreationDate="2014-01-29T16:50:01.233" Score="0" Body="&lt;p&gt;I don't know everything that your IGraphics interface needs to do; so, assuming it has a &quot;draw&quot; operation, you could create a &lt;em&gt;spy&lt;/em&gt; implementation like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class GraphicsSpy : IGraphics&#xA;{&#xA;    public void Draw()&#xA;    {&#xA;        DrawCalled = true;&#xA;    }&#xA;    public bool DrawCalled{get;private set;}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then, use that in your unit test (depending on your test framework):&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;[Test]&#xA;public void LockedCrateObjectIsDrawnCorrectly()&#xA;{&#xA;    var graphicsSpy = new GraphicsSpy();&#xA;    var lockedCrateObject = new LockedCrateObject(graphicsSpy);&#xA;    lockedCrateObject.Draw();&#xA;    Assert.IsTrue(graphicsSpy.DrawCalled);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="5620" LastActivityDate="2014-01-29T16:50:01.233" CommentCount="1" />
  <row Id="21437518" PostTypeId="2" ParentId="21436025" CreationDate="2014-01-29T16:55:00.767" Score="2" Body="&lt;p&gt;One argument would be: separation of concerns would suggest that your rendering and behavioural code should live in separate classes. However, I know how hard that can be to implement in some games engines.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So, as an alternative to not &quot;having to create an entire mock object implementing &lt;code&gt;IGraphics&lt;/code&gt;&quot;, how about &quot;easily create that mock?&quot;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For example, using &lt;a href=&quot;https://www.nuget.org/packages/moq/&quot; rel=&quot;nofollow&quot;&gt;Moq&lt;/a&gt;, it could be this simple:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var mockGraphics = new Mock&amp;lt;IGraphics&amp;gt;();&#xA;var target = new LockedCrateObject(mockGraphics.Object);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Since you aren't unit testing the methods that require the &lt;code&gt;IGraphics&lt;/code&gt; object, it doesn't matter that the mock's behaviour isn't fleshed out.&lt;/p&gt;&#xA;" OwnerUserId="281678" LastActivityDate="2014-01-29T16:55:00.767" CommentCount="5" />
  <row Id="21437966" PostTypeId="2" ParentId="21437648" CreationDate="2014-01-29T17:12:41.750" Score="1" Body="&lt;p&gt;First thing would be to read up on parameterized SQL queries. The code you have there is completely open to SQL injection attacks. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is a good resource for that: &lt;a href=&quot;http://www.codinghorror.com/blog/2005/04/give-me-parameterized-sql-or-give-me-death.html&quot; rel=&quot;nofollow&quot;&gt;http://www.codinghorror.com/blog/2005/04/give-me-parameterized-sql-or-give-me-death.html&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Then for the problem you would be better off using a Stored Procedure to do the work. Something along the lines of :&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;CREATE PROCEDURE Nutrition_Insert&#xA;    @weight varchar(10),&#xA;    @height varchar(10),&#xA;    @bmi varchar(10),&#xA;    @date varchar(10),&#xA;    @username varchar(10),&#xA;    //etc for your fields&#xA;AS BEGIN&#xA;&#xA;    DECLARE @memberId varchar(10)&#xA;    SELECT @memberId = UserId From Users where Username = @username&#xA;&#xA;    INSERT INTO Nutrition(Weight, Height, Bmi, Date, WaterIntake, CalorieIntake, MemberId) &#xA;    values (@weight, @height, @bmi, ....., @memberId)&#xA;&#xA;END&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Note - I've made some assumptions there as I don't know your data types, they all look like strings, but not knowing the size of the varchar used,  I picked an arbitary value. Replace the (10) with the actual field size.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you must use embedded SQL - then this is how you parameterize it. I've also fixed the insert statement to pull the MemberId from the Members table as part of the insert.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;        using (var conn = new SqlConnection(&quot;YOUR CONNECTION STRING&quot;))&#xA;        {&#xA;            conn.Open();&#xA;            using (&#xA;                var cmd = new SqlCommand(&#xA;                    &quot;INSERT INTO Nutrition(...fields...) SELECT @Weight, @Height, @Bmi,...., Members.MemberId FROM Members WHERE Members.Username = @Username&quot;, conn)&#xA;                )&#xA;            {&#xA;&#xA;                cmd.Parameters.AddWithValue(&quot;@Weight&quot;, txtWeight.Text);&#xA;                cmd.Parameters.AddWithValue(&quot;@Height&quot;, txtHeight.Text);&#xA;                ...&#xA;                cmd.Parameters.AddWithValue(&quot;@Username&quot;, lblRegistered.Text);&#xA;&#xA;                cmd.ExecuteNonQuery();&#xA;            }&#xA;            conn.Close();&#xA;        }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You'll notice the &lt;code&gt;using&lt;/code&gt; statements too. This will make sure your connection are disposed of cleanly.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Hope that helps.&lt;/p&gt;&#xA;" OwnerUserId="2316414" LastEditorUserId="2316414" LastEditDate="2014-01-29T19:58:48.503" LastActivityDate="2014-01-29T19:58:48.503" CommentCount="2" />
  <row Id="21438006" PostTypeId="2" ParentId="21436249" CreationDate="2014-01-29T17:14:50.027" Score="1" Body="&lt;p&gt;UIKit's &lt;code&gt;[UIPopoverControllerDelegate popoverControllerShouldDismissPopover:]&lt;/code&gt; translates to &lt;a href=&quot;http://iosapi.xamarin.com/?link=M%3aMonoTouch.UIKit.UIPopoverControllerDelegate_Extensions.ShouldDismiss&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;UIPopoverControllerDelegate.ShouldDismiss&lt;/code&gt; in MonoTouch&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;popover.Delegate = new MyPopoverDelegate();&#xA;&#xA;...&#xA;&#xA;class MyPopoverDelegate : UIPopoverControllerDelegate&#xA;{&#xA;    public override bool ShouldDismiss (UIPopoverController popoverController)&#xA;    {&#xA;        return false;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;I'm not completely positive, but I believe you can also just have your main class implement the &lt;code&gt;IUIPopoverControllerDelegate&lt;/code&gt; interface and add &lt;code&gt;ShouldDismiss&lt;/code&gt; directly to it:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;popover.Delegate = this;&#xA;&#xA;...&#xA;&#xA;public override bool ShouldDismiss (UIPopoverController popoverController)&#xA;{&#xA;    return false;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="860000" LastActivityDate="2014-01-29T17:14:50.027" CommentCount="1" />
  <row Id="21438215" PostTypeId="2" ParentId="21438097" CreationDate="2014-01-29T17:24:21.870" Score="1" Body="&lt;p&gt;If it's truly a single application, with the content being determined by the host header name, then making multiple databases will become a maintenance nightmare sooner or later.  A single database will do just fine.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As for your second question you'll have to determine if a user id can be used in more than one city and your answer will come from that.  If you are driving this by subdomains, then I fail to see the need for a session variable that duplicates what's in the host header (Request[&quot;SERVER_NAME&quot;])&lt;/p&gt;&#xA;" OwnerUserId="3167751" LastActivityDate="2014-01-29T17:24:21.870" CommentCount="0" />
  <row Id="21438218" PostTypeId="2" ParentId="21438097" CreationDate="2014-01-29T17:24:23.307" Score="1" Body="&lt;p&gt;You are describing it yourself actually.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would go with the following domain model:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class City {&#xA;   id,&#xA;   name,&#xA;   // other info&#xA;&#xA;   Site site;&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then you have your site model:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class Site{&#xA;   id,&#xA;   // back navigation : City &#xA;   Then site properties.&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Ps. i would go with a single database as well.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can manage your users as City/site users as follows:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;class User{&#xA;  // props&#xA;  City navigation&#xA;  Site navigation&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="177883" LastActivityDate="2014-01-29T17:24:23.307" CommentCount="0" />
  <row Id="21439034" PostTypeId="2" ParentId="21438751" CreationDate="2014-01-29T18:02:49.800" Score="2" Body="&lt;p&gt;I don't know what optimizations it is doing but I can show you how you can find out for your self.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First build your code optimized and start it without the debugger attached (the JIT compiler will generate different code if the debugger is attached). Run your code so that you know that section was entered at least once so the JIT Compiler had a chance to process it and in Visual Studio go to &lt;code&gt;Debug-&amp;gt;Attach To Process...&lt;/code&gt;. From the new menu choose your running application. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Put a breakpoint in the spot you are wondering about and let the program stop, once stopped go to &lt;code&gt;Debug-&amp;gt;Windows-&amp;gt;Dissasembly&lt;/code&gt;. That will show you the compiled code the JIT created and you will be able to inspect what it is doing.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;sub&gt;(Click for larger view)&lt;/sub&gt;&#xA;&lt;a href=&quot;http://i.stack.imgur.com/iWBdB.png&quot; rel=&quot;nofollow&quot;&gt;&lt;img src=&quot;http://i.stack.imgur.com/iWBdB.png&quot; alt=&quot;enter image description here&quot;&gt;&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="80274" LastActivityDate="2014-01-29T18:02:49.800" CommentCount="9" />
  <row Id="21439049" PostTypeId="2" ParentId="21438751" CreationDate="2014-01-29T18:04:08.063" Score="4" Body="&lt;p&gt;To get a good understanding, you should look at the IL code generated.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Compile the assembly, then make a copy of it and compile again with the optimizations. Then open both assemblies in .net reflector and compare the difference of the compiled IL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Update:&#xA;Dotnet Reflector is available at &lt;a href=&quot;http://www.red-gate.com/products/dotnet-development/reflector/&quot; rel=&quot;nofollow&quot;&gt;http://www.red-gate.com/products/dotnet-development/reflector/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Update 2:&#xA;IlSpy seems like a good open source alternative.&#xA;&lt;a href=&quot;http://ilspy.net/&quot; rel=&quot;nofollow&quot;&gt;http://ilspy.net/&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/2425973/open-source-alternatives-to-reflector&quot;&gt;Open Source Alternatives to Reflector?&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="567524" LastEditorUserId="567524" LastEditDate="2014-01-29T18:20:10.450" LastActivityDate="2014-01-29T18:20:10.450" CommentCount="4" />
  <row Id="21439169" PostTypeId="2" ParentId="21436629" CreationDate="2014-01-29T18:10:37.630" Score="0" Body="&lt;p&gt;Here's an INSTEAD OF trigger that ignores duplicate appointments:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;create trigger ignoreDups on Appointement &#xA;instead of insert&#xA;as&#xA;  declare @cId int&#xA;  set @cid = (select clientId from inserted)&#xA;  declare @did int&#xA;  set @did = (select doctorId from inserted)&#xA;  declare @dApt date&#xA;  set @dApt = (select dateApt from inserted)&#xA;  declare @hApt time&#xA;  set @hApt = (select hourApt from inserted)&#xA;  declare @avail bit&#xA;  set @avail = (select IsAvailable from inserted)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;if (select count(*) from Appointement&#xA;      where @dApt = dateApt and  @hApt = hourApt and  doctorid=@did) = 0&#xA;          insert Appointement (clientId, doctorid, dateApt, hourApt, IsAvailable) values (@cid, @did, @dApt,@hApt,@avail)&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Here's the &lt;a href=&quot;http://sqlfiddle.com/#!3/ace9b/7&quot; rel=&quot;nofollow&quot;&gt;sqlfidle&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="731453" LastActivityDate="2014-01-29T18:10:37.630" CommentCount="2" />
  <row Id="21439316" PostTypeId="2" ParentId="15483369" CreationDate="2014-01-29T18:17:37.760" Score="1" Body="&lt;p&gt;You can also use SQL Server Import &amp;amp; Export Data (32 bit) to transfer data from an excel file to a table on sql azure. It is extremely fast.&#xA;Make sure when you choose a destination, it is .Net Framework Data Provider for SqlServer. You will have to set Data Source, User ID, Password &amp;amp; Initial Catalog property as well.&lt;/p&gt;&#xA;" OwnerUserId="2585299" LastActivityDate="2014-01-29T18:17:37.760" CommentCount="0" />
  <row Id="21439635" PostTypeId="2" ParentId="21439618" CreationDate="2014-01-29T18:33:35.930" Score="1" Body="&lt;p&gt;If you want to ignore single quotes, then remove them:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;lastName.Trim().Replace(&quot;'&quot;,&quot;&quot;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Just swap that in where you currently have this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;lastName.Trim()&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;e.g.:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;command.Parameters.Add(new SqlParameter(&quot;@LastName&quot;, lastName.Trim()));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Becomes:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;command.Parameters.Add(new SqlParameter(&quot;@LastName&quot;, lastName.Trim().Replace(&quot;'&quot;,&quot;&quot;));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Now, you didn't bother showing the code where you actually check the table, but there I suspect you will also need to do something like:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-sql prettyprint-override&quot;&gt;&lt;code&gt;WHERE REPLACE(column,'''','') LIKE @LastName + '%';&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;To avoid forcing a scan of the entire table by applying this replace function to the column, you could consider creating a computed column with apostrophes removed (and persisting and/or indexing it) and checking against that column instead of the primary column (you want to keep the apostrophes there, rather than obliterating them completely, because you still want to display the data correctly).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course you will probably want to handle a set of other characters too, e.g. if someone enters &lt;code&gt;Moseley-Williams&lt;/code&gt; or &lt;code&gt;MoseleyWilliams&lt;/code&gt;, do you want both &lt;code&gt;Moseley-Williams&lt;/code&gt; and &lt;code&gt;MoseleyWilliams&lt;/code&gt; to come back? What about smart apostrophes (&lt;code&gt;’&lt;/code&gt;)? What about errant characters anyone might have put in at data entry time &lt;em&gt;or&lt;/em&gt; during the search? Do you want to correct user types like &lt;code&gt;Sm&quot;th&lt;/code&gt; or &lt;code&gt;Sm&quot;ith&lt;/code&gt;?&lt;/p&gt;&#xA;" OwnerUserId="61305" LastEditorUserId="61305" LastEditDate="2014-01-30T16:11:46.360" LastActivityDate="2014-01-30T16:11:46.360" CommentCount="5" />
  <row Id="21439661" PostTypeId="2" ParentId="21439616" CreationDate="2014-01-29T18:35:05.803" Score="3" Body="&lt;p&gt;Ten thousand numbers is nothing.  A few million is enough to make you think about memory, but likely is not enough that you'll have a problem putting them all in memory.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you get up to billions, trillions, or more, then you're to the point where you likely can't pull them into memory.  It doesn't seem like you're to that point yet.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;You can pull them all into a &lt;code&gt;List&lt;/code&gt; and shouldn't need to be concerned.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having said that, the &lt;code&gt;Average&lt;/code&gt; method of LINQ doesn't actually need to eagerly load in all of the numbers to compute the average; it can just modify an aggregate value using the &quot;current&quot; item and then discard it, so its memory footprint is very low.  The same can be said of all of the StdDev methods that you linked to in the question; they all have a small &lt;em&gt;constant&lt;/em&gt; memory footprint.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So all you need to do is create an &lt;code&gt;IEnumerable&amp;lt;double&amp;gt;&lt;/code&gt; that represents a lazily populated sequence of numbers from your file, and you can call those methods on it.  There is no need to eagerly load them into memory.&lt;/p&gt;&#xA;" OwnerUserId="1159478" LastEditorUserId="1159478" LastEditDate="2014-01-29T18:46:38.357" LastActivityDate="2014-01-29T18:46:38.357" CommentCount="8" />
  <row Id="21439752" PostTypeId="2" ParentId="21439616" CreationDate="2014-01-29T18:39:52.797" Score="0" Body="&lt;p&gt;1 million numbers (32 bit int) would take about 4mb of memory, which is small.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Just load them all into a List of int and then you can operate on them with the built in linq methods.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Update:&#xA;How to do the operations with linq:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/4134366/math-stats-with-linq&quot;&gt;math stats with Linq&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="567524" LastActivityDate="2014-01-29T18:39:52.797" CommentCount="1" />
  <row Id="21440304" PostTypeId="2" ParentId="21440275" CreationDate="2014-01-29T19:07:07.920" Score="0" Body="&lt;p&gt;All temp tables are logged under SQL server &gt; Databases &gt; System Databases &gt; tempdb -&gt; Temporary Tables&lt;/p&gt;&#xA;" OwnerUserId="2908279" LastEditorUserId="3241774" LastEditDate="2014-01-29T19:14:22.030" LastActivityDate="2014-01-29T19:14:22.030" CommentCount="8" />
  <row Id="21440321" PostTypeId="2" ParentId="21440087" CreationDate="2014-01-29T19:07:57.230" Score="1" Body="&lt;p&gt;&lt;code&gt;TBLAccount&lt;/code&gt; is expecting a non-null value in the &lt;code&gt;AccountID&lt;/code&gt; column. Your stored proc and &lt;code&gt;SetApplicationForm&lt;/code&gt; method don't handle this. You may have set the column up wrong if you're expecting it to be an auto-increment ID field.&lt;/p&gt;&#xA;" OwnerUserId="806952" LastActivityDate="2014-01-29T19:07:57.230" CommentCount="0" />
  <row Id="21440391" PostTypeId="2" ParentId="21440087" CreationDate="2014-01-29T19:12:36.743" Score="1" Body="&lt;p&gt;I think you need to make &lt;code&gt;TBLAccount.AccountID&lt;/code&gt; as &lt;code&gt;Identity&lt;/code&gt; column if it's datatype is &lt;code&gt;int&lt;/code&gt; or &lt;code&gt;bigint&lt;/code&gt;. else you need to specify  a value for it in 2nd insert command of your SP.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If your &lt;code&gt;TBLAccount.AccountID&lt;/code&gt; is &lt;code&gt;uiqueidentifier&lt;/code&gt; then set the default value to &lt;code&gt;(newId())&lt;/code&gt;&lt;/p&gt;&#xA;" OwnerUserId="1309193" LastEditorUserId="1309193" LastEditDate="2014-01-30T07:46:13.860" LastActivityDate="2014-01-30T07:46:13.860" CommentCount="0" />
  <row Id="21440435" PostTypeId="2" ParentId="21440201" CreationDate="2014-01-29T19:14:35.983" Score="0" Body="&lt;p&gt;I think this answer your need:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.morgantechspace.com/2013/08/bulk-insert-records-into-sql-server.html&quot; rel=&quot;nofollow&quot;&gt;http://www.morgantechspace.com/2013/08/bulk-insert-records-into-sql-server.html&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1267160" LastActivityDate="2014-01-29T19:14:35.983" CommentCount="0" />
  <row Id="21440753" PostTypeId="2" ParentId="21440275" CreationDate="2014-01-29T19:30:26.180" Score="2" Body="&lt;p&gt;After the code has finished and the session is closed, the temporary table will cease to exist. If you want to see it in SQL Server Management Studio (SSMS), you need to keep the code session open until the data has been reviewed in SSMS.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Per &lt;a href=&quot;http://technet.microsoft.com/en-us/library/ms186986%28v=sql.105%29.aspx&quot; rel=&quot;nofollow&quot;&gt;Technet&lt;/a&gt;:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;  &lt;p&gt;Global temporary tables are visible to any user and any connection&#xA;  after they are created, and are deleted when all users that are&#xA;  referencing the table disconnect from the instance of SQL Server.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;As an alternative, there's a C# code option here that selects the data from the temporary table into a code variable for review in the code ... (and if the code is to exist, you could possibly write it to a file or review by another means) -- see: &lt;a href=&quot;http://stackoverflow.com/a/6748570/3063884&quot;&gt;http://stackoverflow.com/a/6748570/3063884&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="3063884" LastActivityDate="2014-01-29T19:30:26.180" CommentCount="0" />
  <row Id="21440811" PostTypeId="2" ParentId="21440087" CreationDate="2014-01-29T19:33:28.600" Score="0" Body="&lt;p&gt;Check the table dbo.TBLAccount schema definition , you should have there an AccountID column with NOT NULL definition , you either allow null without changing your current code or set a value  for it in your current code:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&quot;http://i.stack.imgur.com/2npPJ.jpg&quot; alt=&quot;enter image description here&quot;&gt;&lt;/p&gt;&#xA;" OwnerUserId="1267160" LastActivityDate="2014-01-29T19:33:28.600" CommentCount="0" />
  <row Id="21440915" PostTypeId="2" ParentId="21440275" CreationDate="2014-01-29T19:38:51.970" Score="0" Body="&lt;p&gt;Create a test table &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SELECT * INTO ##temp1&#xA;FROM dbo.SomeTable_Name&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Now to check if table is there &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;SELECT  * FROM tempdb.dbo.sysobjects O&#xA;WHERE O.xtype in ('U') &#xA;AND O.ID = OBJECT_ID(N'tempdb..##temp1')&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="2041092" LastActivityDate="2014-01-29T19:38:51.970" CommentCount="0" />
  <row Id="21441029" PostTypeId="2" ParentId="21438751" CreationDate="2014-01-29T19:44:58.910" Score="4" Body="&lt;p&gt;To look at what the &lt;em&gt;C# compiler&lt;/em&gt; does for you, you need to look at the IL. If you want to see how that affects the JITted code, you'll need to look at the native code as described by Scott Chamberlain. Be aware that the JITted code will very based on processor architecture, CLR version, how the process was launched, and possibly other things.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I would usually start with the IL, and then &lt;em&gt;potentially&lt;/em&gt; look at the JITted code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Comparing the IL using &lt;code&gt;ildasm&lt;/code&gt; can be slightly tricky, as it includes a label for each instruction. Here are two versions of your method compiled with and without optimization (using the C# 5 compiler), with extraneous labels (and &lt;code&gt;nop&lt;/code&gt; instructions) removed to make them as easy to compare as possible:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Optimized&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  .method public hidebysig static uint32 &#xA;          CalculateCheckSum(string str) cil managed&#xA;  {&#xA;    // Code size       46 (0x2e)&#xA;    .maxstack  2&#xA;    .locals init (char[] V_0,&#xA;             uint32 V_1,&#xA;             char V_2,&#xA;             char[] V_3,&#xA;             int32 V_4)&#xA;    ldarg.0&#xA;    callvirt   instance char[] [mscorlib]System.String::ToCharArray()&#xA;    stloc.0&#xA;    ldc.i4.0&#xA;    stloc.1&#xA;    ldloc.0&#xA;    stloc.3&#xA;    ldc.i4.0&#xA;    stloc.s    V_4&#xA;    br.s       loopcheck&#xA;  loopstart:&#xA;    ldloc.3&#xA;    ldloc.s    V_4&#xA;    ldelem.u2&#xA;    stloc.2&#xA;    ldloc.1&#xA;    ldloc.2&#xA;    add&#xA;    stloc.1&#xA;    ldloc.s    V_4&#xA;    ldc.i4.1&#xA;    add&#xA;    stloc.s    V_4&#xA;  loopcheck:&#xA;    ldloc.s    V_4&#xA;    ldloc.3&#xA;    ldlen&#xA;    conv.i4&#xA;    blt.s      loopstart&#xA;    ldloc.1&#xA;    ldc.i4     0x100&#xA;    rem.un&#xA;    ret&#xA;  } // end of method Program::CalculateCheckSum&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Unoptimized&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;  .method public hidebysig static uint32 &#xA;          CalculateCheckSum(string str) cil managed&#xA;  {&#xA;    // Code size       63 (0x3f)&#xA;    .maxstack  2&#xA;    .locals init (char[] V_0,&#xA;             uint32 V_1,&#xA;             char V_2,&#xA;             uint32 V_3,&#xA;             char[] V_4,&#xA;             int32 V_5,&#xA;             bool V_6)&#xA;    ldarg.0&#xA;    callvirt   instance char[] [mscorlib]System.String::ToCharArray()&#xA;    stloc.0&#xA;    ldc.i4.0&#xA;    stloc.1&#xA;    ldloc.0&#xA;    stloc.s    V_4&#xA;    ldc.i4.0&#xA;    stloc.s    V_5&#xA;    br.s       loopcheck&#xA;&#xA;  loopstart:&#xA;    ldloc.s    V_4&#xA;    ldloc.s    V_5&#xA;    ldelem.u2&#xA;    stloc.2&#xA;    ldloc.1&#xA;    ldloc.2&#xA;    add&#xA;    stloc.1&#xA;    ldloc.s    V_5&#xA;    ldc.i4.1&#xA;    add&#xA;    stloc.s    V_5&#xA;  loopcheck:&#xA;    ldloc.s    V_5&#xA;    ldloc.s    V_4&#xA;    ldlen&#xA;    conv.i4&#xA;    clt&#xA;    stloc.s    V_6&#xA;    ldloc.s    V_6&#xA;    brtrue.s   loopstart&#xA;&#xA;    ldloc.1&#xA;    ldc.i4     0x100&#xA;    rem.un&#xA;    stloc.3&#xA;    br.s       methodend&#xA;&#xA;  methodend:&#xA;    ldloc.3&#xA;    ret&#xA;  }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Points to note:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;The optimized version uses fewer locals. This may allow the JIT to use registers more effectively.&lt;/li&gt;&#xA;&lt;li&gt;The optimized version uses &lt;code&gt;blt.s&lt;/code&gt; rather than &lt;code&gt;clt&lt;/code&gt; followed by &lt;code&gt;brtrue.s&lt;/code&gt; when checking whether or not to go round the loop again (this is the reason for one of the extra locals).&lt;/li&gt;&#xA;&lt;li&gt;The unoptimized version uses an additional local to store the return value before returning, presumably to make debugging easier.&lt;/li&gt;&#xA;&lt;li&gt;The unoptimized version has an unconditional branch just before it returns.&lt;/li&gt;&#xA;&lt;li&gt;The optimized version is shorter, but I doubt that it's short enough to be inlined, so I suspect that's irrelevant.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="22656" LastEditorUserId="22656" LastEditDate="2014-01-29T19:50:26.087" LastActivityDate="2014-01-29T19:50:26.087" CommentCount="0" />
  <row Id="21441288" PostTypeId="2" ParentId="21439618" CreationDate="2014-01-29T19:56:43.190" Score="-1" Body="&lt;p&gt;Basically you have to check for the presence of the single quote if it exist then add two more to it and insert it into the database:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;use &lt;code&gt;lastName.Contains(&quot;\'&quot;)&lt;/code&gt; to chcek and to replace it use &lt;code&gt;lastName.Replace(&quot;'&quot;,&quot;''&quot;)&lt;/code&gt;&lt;/p&gt;&#xA;" OwnerUserId="1267160" LastActivityDate="2014-01-29T19:56:43.190" CommentCount="0" />
  <row Id="21441293" PostTypeId="2" ParentId="21441134" CreationDate="2014-01-29T19:57:00.870" Score="1" Body="&lt;p&gt;That will work as long as the other forms have some way of getting the main form's instance. One way would be to pass &lt;code&gt;this&lt;/code&gt; to the forms when you create them from the main form. Then change the other form constructors to accept a Form object. The forms can use that object to access the &lt;code&gt;comport&lt;/code&gt; property:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;// Main form&#xA;private void OpenSomeForm()&#xA;{&#xA;    SomeForm frm = new SomeForm(this);&#xA;    frm.Show();&#xA;}&#xA;&#xA;// SomeForm&#xA;public class SomeForm&#xA;{&#xA;    private MainForm _mainForm;&#xA;&#xA;    public SomeForm(MainForm mainForm)&#xA;    {&#xA;        InitializeComponent();&#xA;&#xA;        _mainForm = mainForm;&#xA;    }&#xA;&#xA;    private WriteToSerialPort()&#xA;    {&#xA;        _mainForm.comport.Write(/* stuff */);&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1141432" LastEditorUserId="1141432" LastEditDate="2014-01-29T20:20:31.987" LastActivityDate="2014-01-29T20:20:31.987" CommentCount="3" />
  <row Id="21441544" PostTypeId="2" ParentId="21436954" CreationDate="2014-01-29T20:08:51.790" Score="0" Body="&lt;p&gt;With NuGet, you can now specify the directory the packages are installed in. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://docs.nuget.org/docs/release-notes/nuget-2.1&quot; rel=&quot;nofollow&quot;&gt;http://docs.nuget.org/docs/release-notes/nuget-2.1&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;Specify ‘packages’ Folder Location&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the past, NuGet has managed a solution’s packages from a known ‘packages’ folder found beneath the solution root directory. For development teams that have many different solutions which have NuGet packages installed, this can result in the same package being installed in many different places on the file system. NuGet 2.1 provides more granular control over the location of the packages folder via the ‘repositoryPath’ element in the NuGet.config file. Building on the previous example of hierarchical nuget.config support, assume that we wish to have all projects under C:\myteam\ share the same packages folder. To accomplish this, simply add the following entry to C:\myteam\nuget.config.&lt;/p&gt;&#xA;" OwnerUserId="453176" LastActivityDate="2014-01-29T20:08:51.790" CommentCount="1" />
  <row Id="21441661" PostTypeId="2" ParentId="21439618" CreationDate="2014-01-29T20:14:03.193" Score="1" Body="&lt;p&gt;You could try to achieve your goal if you change your query text to include the SQL Function &lt;a href=&quot;http://technet.microsoft.com/en-us/library/ms186862.aspx&quot; rel=&quot;nofollow&quot;&gt;REPLACE&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Supposing that your command text is the following&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;string cmdText = &quot;SELECT * FROM customers WHERE REPLACE(LastName, '''', '') LIKE @lastname&quot;;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Now if you prepare your parameter &lt;code&gt;@lastname&lt;/code&gt; removing all quotes present in its value like &lt;a href=&quot;http://stackoverflow.com/users/61305/aaron-bertrand&quot;&gt;Mr Bertrand&lt;/a&gt; suggests&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;command.Parameters.Add(new SqlParameter(&quot;@lastname&quot;, lastName.Trim().Replace(&quot;'&quot;,&quot;&quot;));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You will retrieve all records in your test set above.&#xA;Be aware to check the performance of this query because I have a strong feeling that using REPLACE in this way will kill any kind of optimizer&lt;/p&gt;&#xA;" OwnerUserId="1197518" LastActivityDate="2014-01-29T20:14:03.193" CommentCount="0" />
  <row Id="21442609" PostTypeId="2" ParentId="21439616" CreationDate="2014-01-29T21:03:42.867" Score="1" Body="&lt;p&gt;To calculate mean and standard deviation while processing one number at a time:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Initialize &lt;code&gt;Count&lt;/code&gt;, &lt;code&gt;Sum&lt;/code&gt;, and &lt;code&gt;SumOfSquares&lt;/code&gt; to zero.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As you receive each number, add one to &lt;code&gt;Count&lt;/code&gt;, add the number to &lt;code&gt;Sum&lt;/code&gt;, and add the square of the number to &lt;code&gt;SumOfSquares&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;When you have processed each number, set &lt;code&gt;Mean&lt;/code&gt; to &lt;code&gt;Sum / Count&lt;/code&gt;, and set &lt;code&gt;StandardDeviation&lt;/code&gt; to &lt;code&gt;Math.Sqrt(SumOfSquares / Count - Mean * Mean)&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A derivation for the latter formula is shown in &lt;a href=&quot;http://en.wikipedia.org/wiki/Standard_deviation&quot; rel=&quot;nofollow&quot;&gt;the Wikipedia page for standard deviation&lt;/a&gt;.&lt;/p&gt;&#xA;" OwnerUserId="298225" LastActivityDate="2014-01-29T21:03:42.867" CommentCount="0" />
  <row Id="21442731" PostTypeId="2" ParentId="21442551" CreationDate="2014-01-29T21:10:01.863" Score="0" Body="&lt;p&gt;This should work for you&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://support.microsoft.com/default.aspx?scid=kb;en-us;812425&quot; rel=&quot;nofollow&quot;&gt;RTF Printer Control&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="974840" LastActivityDate="2014-01-29T21:10:01.863" CommentCount="0" />
  <row Id="21443673" PostTypeId="2" ParentId="21443472" CreationDate="2014-01-29T22:05:56.677" Score="1" Body="&lt;p&gt;I guess you could do something like this.  Get your List of Ids in some TempTable or table variable and use &lt;code&gt;IN&lt;/code&gt; operator in your update statement. something like this .....    &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;UPDATE my_table&#xA;SET certainColumn = 'foo bar'&#xA;WHERE uniqueID IN (SELECT uniqueID &#xA;                   FROM @List_Table)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="2041092" LastActivityDate="2014-01-29T22:05:56.677" CommentCount="0" />
  <row Id="21443703" PostTypeId="2" ParentId="21443472" CreationDate="2014-01-29T22:07:19.670" Score="2" Body="&lt;pre&gt;&lt;code&gt;var query = &quot;UPDATE my_table&#xA;SET certainColumn = 'foo bar'&#xA;WHERE uniqueID in (&quot; + String.Join(&quot;,&quot;, uniqueIDs) + &quot;)&quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1295965" LastEditorUserId="2041092" LastEditDate="2014-01-29T22:07:37.217" LastActivityDate="2014-01-29T22:07:37.217" CommentCount="5" />
  <row Id="21443764" PostTypeId="2" ParentId="21443646" CreationDate="2014-01-29T22:11:17.190" Score="1" Body="&lt;p&gt;It would help if you could elaborate on &quot;does not allow me to&quot;, does it give you an error and what did that error tell you?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I think you could benefit from a different design though. You should not have to model your business logic to your data model. How you fill the object I'll leave to you, but take a look at this approach. If you declare a &lt;code&gt;Card&lt;/code&gt; class as such:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class Card&#xA;{&#xA;    public string Name { get; private set; }&#xA;&#xA;    public IList&amp;lt;string&amp;gt; PersonsHoldingThisCard { get; private set; }&#xA;&#xA;    public Card(string name)&#xA;    {&#xA;        Name = name;&#xA;        PersonsHoldingThisCard = new List&amp;lt;string&amp;gt;();&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You can store instances of it in a &lt;code&gt;HashSet&amp;lt;Card&amp;gt;&lt;/code&gt;, which has great lookup speeds, and the list allows for easy additions and removal of names of persons holding that particular card compared to your array.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you mean you need to look up cards by name, you can use a &lt;code&gt;Dictionary&amp;lt;string, Card&amp;gt;&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I'm not sure whether you want to actually use this approach or rather want to declare a &lt;code&gt;Player&lt;/code&gt; with a &lt;code&gt;List&amp;lt;string&amp;gt; CardsInHand&lt;/code&gt; property, but I think that depends on what you want your program to do.&lt;/p&gt;&#xA;" OwnerUserId="266143" LastEditorUserId="266143" LastEditDate="2014-01-29T22:17:24.123" LastActivityDate="2014-01-29T22:17:24.123" CommentCount="0" />
  <row Id="21443767" PostTypeId="2" ParentId="21443646" CreationDate="2014-01-29T22:11:28.527" Score="1" Body="&lt;p&gt;You have the syntax incorrect. Try:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Dictionary&amp;lt;string, string[][]&amp;gt; myDict = new Dictionary&amp;lt;string, string[][]&amp;gt;();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;However, you may want to use a class for the card itself rather than a string array if most cards will contain the same information. This makes your code more readable and, if you have any card specific methods, allows you to include them in that object (called encapsulation).&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are adding or removing fields to the cards, arrays will be inefficient because they have a fixed size, too. Consider a &lt;code&gt;Collection&amp;lt;string&amp;gt;&lt;/code&gt; or &lt;code&gt;List&amp;lt;string&amp;gt;&lt;/code&gt;. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Alternatively, if the cards are going to have varying information or a lot of fields, have a Dictionary of Dictionaries, e.g.:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;Dictionary&amp;lt;string, Dictionary&amp;lt;string, string&amp;gt;&amp;gt; myDict = &#xA;    new Dictionary&amp;lt;string, IDictionary&amp;lt;string, string&amp;gt;&amp;gt;();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1634846" LastActivityDate="2014-01-29T22:11:28.527" CommentCount="0" />
  <row Id="21444263" PostTypeId="2" ParentId="21384706" CreationDate="2014-01-29T22:42:33.787" Score="3" Body="&lt;p&gt;After digging a bit into this issue, I found a semi-solution. I looked at how the &lt;code&gt;UIMap&lt;/code&gt; designer files generate their code for a &lt;code&gt;ListView&lt;/code&gt; (I adjusted the code a bit for my own variables):&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;var itemscontrol = new WpfList(window);&#xA;itemscontrol.SearchProperties[WpfList.PropertyNames.AutomationId] = &quot;CustomersItemsControl&quot;;&#xA;itemscontrol.WindowTitles.Add(&quot;MainWindow&quot;);&#xA;&#xA;var count = itemscontrol.Items.Count(); // Returns the correct value!&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;I copied this code and it seems to work for an &lt;code&gt;ItemsControl&lt;/code&gt; as well, at least some properties do, such as &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/microsoft.visualstudio.testtools.uitesting.wpfcontrols.wpflist.items.aspx&quot; rel=&quot;nofollow&quot;&gt;&lt;code&gt;WpfList.Items&lt;/code&gt;&lt;/a&gt;. So, it's a partial solution I guess.&lt;/p&gt;&#xA;" OwnerUserId="347172" LastActivityDate="2014-01-29T22:42:33.787" CommentCount="0" />
  <row Id="21444312" PostTypeId="2" ParentId="21443472" CreationDate="2014-01-29T22:45:27.827" Score="5" Body="&lt;p&gt;Well, you could use a TVP. First, create this on your server:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-sql prettyprint-override&quot;&gt;&lt;code&gt;CREATE TYPE dbo.UniqueIDs AS TABLE(ID INT PRIMARY KEY);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then a stored procedure:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-sql prettyprint-override&quot;&gt;&lt;code&gt;CREATE PROCEDURE dbo.UpdateByID&#xA;  @tvp dbo.UniqueIDs READONLY&#xA;AS&#xA;BEGIN&#xA;  SET NOCOUNT ON;&#xA;&#xA;  UPDATE t SET certainColumn = 'foo bar'&#xA;    FROM dbo.my_table AS t&#xA;    INNER JOIN @tvp AS tvp&#xA;    ON t.uniqueID = tvp.ID;&#xA;END&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Or:&lt;/p&gt;&#xA;&#xA;&lt;pre class=&quot;lang-sql prettyprint-override&quot;&gt;&lt;code&gt;CREATE PROCEDURE dbo.UpdateByID&#xA;  @tvp dbo.UniqueIDs READONLY&#xA;AS&#xA;BEGIN&#xA;  SET NOCOUNT ON;&#xA;&#xA;  UPDATE t SET certainColumn = 'foo bar'&#xA;    FROM dbo.my_table AS t&#xA;    WHERE EXISTS (SELECT 1 FROM @tvp&#xA;      WHERE ID = t.uniqueID);&#xA;END&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Then instead of a &lt;code&gt;List&lt;/code&gt; use a &lt;code&gt;DataTable&lt;/code&gt; to hold your IDs in your C# application, and call the stored procedure, passing &lt;code&gt;@tvp&lt;/code&gt; as a &lt;code&gt;Structured&lt;/code&gt; parameter. I have simple examples of the C# side posted all over this site:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/a/10405622/61305&quot;&gt;How to pass an array into a SQL Server stored procedure&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/a/10405622/61305&quot;&gt;Insert entire DataTable into database at once instead of row by row?&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/a/10744731/61305&quot;&gt;Parameters to the EXISTS clause in a stored procedure&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;" OwnerUserId="61305" LastActivityDate="2014-01-29T22:45:27.827" CommentCount="0" />
  <row Id="21444600" PostTypeId="2" ParentId="21432144" CreationDate="2014-01-29T23:04:54.567" Score="0" Body="&lt;p&gt;I have no idea what you mean by 'impossible' or 'manual', but when reading from a TCP socket in any language it is essential to take notice of the count returned by the read API. You can't assume that it fills the buffer. It's only required to read one or more bytes.&lt;/p&gt;&#xA;" OwnerUserId="207421" LastActivityDate="2014-01-29T23:04:54.567" CommentCount="0" />
  <row Id="21445630" PostTypeId="2" ParentId="20964250" CreationDate="2014-01-30T00:30:39.953" Score="0" Body="&lt;p&gt;I do something similar currently using MS web deploy.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.iis.net/downloads/microsoft/web-deploy&quot; rel=&quot;nofollow&quot;&gt;http://www.iis.net/downloads/microsoft/web-deploy&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It's a bit of a pain to set up, but once you do, you can deploy to your site directly from within Visual Studio. You can publish to multiple sites by importing or configuring them as different endpoints.&lt;/p&gt;&#xA;" OwnerUserId="308687" LastActivityDate="2014-01-30T00:30:39.953" CommentCount="0" />
  <row Id="21446657" PostTypeId="2" ParentId="21436954" CreationDate="2014-01-30T02:20:25.973" Score="1" Body="&lt;p&gt;I'm having the same issue. I was trying to install the package as said in this article &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/dn205064(v=vs.110).aspx&quot; rel=&quot;nofollow&quot;&gt;http://msdn.microsoft.com/en-us/library/dn205064(v=vs.110).aspx&lt;/a&gt; &#xA;So, I look into the package history and finally I installed the previous package &#xA;&lt;a href=&quot;http://www.nuget.org/packages/System.IdentityModel.Tokens.Jwt/3.0.0&quot; rel=&quot;nofollow&quot;&gt;http://www.nuget.org/packages/System.IdentityModel.Tokens.Jwt/3.0.0&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It works fine for me. &lt;/p&gt;&#xA;" OwnerUserId="1534501" LastActivityDate="2014-01-30T02:20:25.973" CommentCount="2" />
  <row Id="21449369" PostTypeId="2" ParentId="21449316" CreationDate="2014-01-30T06:30:48.253" Score="0" Body="&lt;p&gt;you dont need to create a second instance of service for that. just start another thread and pass it the second IP and port as parameter.&lt;/p&gt;&#xA;" OwnerUserId="2298211" LastActivityDate="2014-01-30T06:30:48.253" CommentCount="1" />
  <row Id="21449444" PostTypeId="2" ParentId="21444094" CreationDate="2014-01-30T06:35:28.310" Score="0" Body="&lt;p&gt;What about wrapping this getter in an ad hoc virtual method that could be overrided by a mock?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Eg:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class Customer : CustomerBase&#xA;{&#xA;  // internals are visible to test&#xA;  internal string GenString()&#xA;  {&#xA;    // this actually composes a number of different properties &#xA;    // from the parent, child and system properties&#xA;    return InfoPropertyNameGetter() + DateTime.Now.ToString() + &quot;something else&quot;; &#xA;  }&#xA;&#xA;  public virtual string InfoPropertyNameGetter(){&#xA;    retrn this.InfoProperty.Name;&#xA;  }&#xA;}&#xA;&#xA;Mock&amp;lt;Customer&amp;gt; mock = new Mock&amp;lt;Customer&amp;gt;();&#xA;mock.Setup(m =&amp;gt; m.InfoPropertyNameGetter()).Returns(&quot;My custom value&quot;);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;It would look a bit like the &lt;code&gt;Introduce Instance Delegator&lt;/code&gt; pattern described in &lt;a href=&quot;http://rads.stackoverflow.com/amzn/click/0131177052&quot; rel=&quot;nofollow&quot;&gt;Working effectively with legacy code&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1796345" LastActivityDate="2014-01-30T06:35:28.310" CommentCount="0" />
  <row Id="21449606" PostTypeId="2" ParentId="21449316" CreationDate="2014-01-30T06:45:22.730" Score="1" Body="&lt;p&gt;no you dont need to restart the service.. &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;protected override void OnStart(string[] args)&#xA;{&#xA;    _thread1 = new Thread(DoWork);&#xA;    _thread1.Start();&#xA;    _thread2 = new Thread(DoWork);&#xA;    _thread2.Start();&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Pass some parameters to both the threads and then work accordingly&lt;/p&gt;&#xA;" OwnerUserId="2298211" LastActivityDate="2014-01-30T06:45:22.730" CommentCount="4" />
  <row Id="21451328" PostTypeId="2" ParentId="21451154" CreationDate="2014-01-30T08:34:25.830" Score="3" Body="&lt;p&gt;You should be using the &lt;code&gt;Microsoft.VisualStudio.TestTools.UnitTesting&lt;/code&gt; namespace, which contains the MSTest framework classes (which you are using as implied by the &lt;code&gt;TestClass&lt;/code&gt; and &lt;code&gt;TestMethod&lt;/code&gt; attributes). You should then use the &lt;code&gt;Assert&lt;/code&gt; class' methods to verify your test outcome. You code might look like this:&#xA;`&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;[TestMethod]&#xA;public void deserializationTest()&#xA;{&#xA;    var something = Configuration.DeSerialize&amp;lt;Item&amp;gt;(@&quot;d:\CoffeeShop.Items.config&quot;);&#xA;    Assert.AreEqual(&quot;expected item name&quot;, something.Name);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This test verifies that the &lt;code&gt;DeSerialize&lt;/code&gt; call returns an &lt;code&gt;Item&lt;/code&gt; which &lt;code&gt;Name&lt;/code&gt; property is equal to &lt;code&gt;&quot;expected item name&quot;&lt;/code&gt;. Of course, this is just an assumption on how your &lt;code&gt;Item&lt;/code&gt; class looks like, but you probably get the gist.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you are getting started with unit testing in Visual Studio, this tutorial might come in handy: &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms182532.aspx&quot; rel=&quot;nofollow&quot;&gt;http://msdn.microsoft.com/en-us/library/ms182532.aspx&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="2071395" LastActivityDate="2014-01-30T08:34:25.830" CommentCount="3" />
  <row Id="21452619" PostTypeId="2" ParentId="21452456" CreationDate="2014-01-30T09:37:10.723" Score="0" Body="&lt;p&gt;if you are using asp.net mvc 4.0 form authentication with required tables in mssql server.&#xA;you can create new user as follows.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;[AllowAnonymous]&#xA;    public JsonResult RegisterUser()&#xA;    {&#xA;        String Uid = Request.QueryString[&quot;id&quot;];&#xA;        String Pass = Request.QueryString[&quot;pass&quot;];&#xA;        String username = Uid;&#xA;        String password = Pass;&#xA;        try&#xA;        {&#xA;&#xA;            //Session[&quot;username&quot;] = username;&#xA;            Membership.CreateUser(Uid, Pass);&#xA;            return Json(&quot;success&quot;, JsonRequestBehavior.AllowGet);&#xA;        }&#xA;        catch(Exception e)&#xA;        {&#xA;            return Json(&quot;falied&quot;, JsonRequestBehavior.AllowGet);&#xA;        }&#xA;&#xA;&#xA;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;and you can validate the user in the same as follows.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;[AllowAnonymous]&#xA;    public JsonResult ValidateUser()&#xA;    {&#xA;        String Uid = Request.QueryString[&quot;id&quot;];&#xA;        String Pass = Request.QueryString[&quot;pass&quot;];&#xA;        String username = Uid;&#xA;        String password = Pass;&#xA;        if (Membership.ValidateUser(username, password))&#xA;        {&#xA;&#xA;            //Session[&quot;username&quot;] = username;&#xA;            FormsAuthentication.RedirectFromLoginPage(username, true);&#xA;            return Json(&quot;success&quot;, JsonRequestBehavior.AllowGet);&#xA;        }&#xA;        else&#xA;        {&#xA;            return Json(&quot;falied&quot;, JsonRequestBehavior.AllowGet);&#xA;        }&#xA;&#xA;&#xA;&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Hope this will help you.&lt;/p&gt;&#xA;" OwnerUserId="2891929" LastActivityDate="2014-01-30T09:37:10.723" CommentCount="0" />
  <row Id="21452787" PostTypeId="2" ParentId="21438825" CreationDate="2014-01-30T09:43:48.417" Score="0" Body="&lt;p&gt;Set a listener:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt; _myButton.SetOnTouchListener(this);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Add &lt;code&gt;View.IOnTouchListener&lt;/code&gt; to your activity&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class YourActivity : Activity, View.IOnTouchListener&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Implement the listener&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public bool OnTouch(View v, MotionEvent e)&#xA;   {&#xA;       switch (e.Action)&#xA;       {&#xA;           case MotionEventActions.Down:&#xA;               _viewX = e.GetX();&#xA;               break;&#xA;           case MotionEventActions.Move:&#xA;               var left = (int) (e.RawX - _viewX);&#xA;               var right = (int) (left + v.Width);&#xA;               v.Layout(left, v.Top, right, v.Bottom);&#xA;               break;&#xA;       }&#xA;       return true;&#xA;   }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;full tutorial here:&#xA;&lt;a href=&quot;http://docs.xamarin.com/recipes/android/other_ux/gestures/detect_a_touch/&quot; rel=&quot;nofollow&quot;&gt;http://docs.xamarin.com/recipes/android/other_ux/gestures/detect_a_touch/&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1793906" LastActivityDate="2014-01-30T09:43:48.417" CommentCount="3" />
  <row Id="21452912" PostTypeId="2" ParentId="21452739" CreationDate="2014-01-30T09:49:13.053" Score="0" Body="&lt;p&gt;Try like this&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt; protected void loginButton_Click(object sender, EventArgs e)&#xA;{&#xA;&#xA;    SqlConnection con = new SqlConnection();&#xA;    con.ConnectionString = &quot;Data Source=.\\SQLEXPRESS;Initial Catalog=University;Integrated Security=True;Pooling=False&quot;;&#xA;&#xA;&#xA;    Int32 verify;&#xA;    string query1 = &quot;Select count(*) from Login where ID='&quot; + idBox.Text + &quot;' and Password='&quot; + passwordBox.Text + &quot;' &quot;;&#xA;    SqlCommand cmd1 = new SqlCommand(query1, con);&#xA;    con.Open();&#xA;    verify = Convert.ToInt32(cmd1.ExecuteScalar());&#xA;    con.Close();&#xA;    if (verify &amp;gt; 0)&#xA;    {&#xA;        Response.Redirect(&quot;succesful.aspx&quot;);&#xA;    }&#xA;    else&#xA;    {&#xA;        Response.Redirect(&quot;unsuccesful.aspx&quot;,true);&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;But you need to go for Stored Procedure to avoid &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL_injection&quot; rel=&quot;nofollow&quot;&gt;SQL INJECTION&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="2118383" LastActivityDate="2014-01-30T09:49:13.053" CommentCount="1" />
  <row Id="21454622" PostTypeId="2" ParentId="21454419" CreationDate="2014-01-30T11:03:17.047" Score="1" Body="&lt;p&gt;OK Found the solution!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am still new to iOS development and Xamarin but the following page mentions that '&lt;strong&gt;you aren't supposed to mix Objective-C delegates with C# events&lt;/strong&gt;'.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://forums.xamarin.com/discussion/6136/uitableviewsource-scrolled-is-not-fired-in-debug-mode-on-iphone-device&quot; rel=&quot;nofollow&quot;&gt;http://forums.xamarin.com/discussion/6136/uitableviewsource-scrolled-is-not-fired-in-debug-mode-on-iphone-device&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I don't fully understand how Objective-C delegates work but I suspect by overriding that even I was somehow changing the internal event handler?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;To trap the scrolled event UITableViewSource has a helpful method called 'Scrolled' just needs overriding to catch the event!&lt;/p&gt;&#xA;" OwnerUserId="1167223" LastActivityDate="2014-01-30T11:03:17.047" CommentCount="0" />
  <row Id="21455056" PostTypeId="2" ParentId="21454992" CreationDate="2014-01-30T11:22:27.277" Score="3" Body="&lt;p&gt;You'd rather put &lt;strong&gt;using&lt;/strong&gt; whenever you work with &lt;code&gt;IDisposable&lt;/code&gt; instances:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public void Method3() {&#xA;  string sqlStr = &quot;my SQL query&quot;;&#xA;&#xA;  // Do not forget to configure connection pull so that&#xA;  // establishing a connection will not be expensive &#xA;  using (SqlConnection con = new SqlConnection(connectionString)) {&#xA;    con.Open();&#xA;&#xA;    using (SqlCommand com = new SqlCommand(sqlStr, con)) {&#xA;      com.ExecuteNonQuery();&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You can combine queries if you like:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    public void Method4() {&#xA;      string sqlStr1 = &quot;my SQL query 1&quot;;&#xA;      string sqlStr1 = &quot;my SQL query 2&quot;;&#xA;&#xA;      // Do not forget to configure connection pull so that&#xA;      // establishing a connection will not be expensive &#xA;      using (SqlConnection con = new SqlConnection(connectionString)) {&#xA;        con.Open();&#xA;&#xA;        // Think on having both queries executed in one transaction&#xA;        using (SqlCommand com1 = new SqlCommand(sqlStr1, con)) {&#xA;          com1.ExecuteNonQuery();&#xA;        }&#xA;&#xA;        using (SqlCommand com2 = new SqlCommand(sqlStr2, con)) {&#xA;          com2.ExecuteNonQuery();&#xA;        } &#xA;      }&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Static connections could be &lt;em&gt;very hard to maintain&lt;/em&gt;, esp. if you are implementing &lt;em&gt;multithreading&lt;/em&gt; software, that's why you should &lt;em&gt;avoid&lt;/em&gt; using them&lt;/p&gt;&#xA;" OwnerUserId="2319407" LastEditorUserId="2319407" LastEditDate="2014-01-30T18:04:04.937" LastActivityDate="2014-01-30T18:04:04.937" CommentCount="3" />
  <row Id="21455351" PostTypeId="2" ParentId="21454574" CreationDate="2014-01-30T11:34:36.177" Score="0" Body="&lt;p&gt;you can use this...&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;USE [dbName]&#xA;GO&#xA;&#xA;SET ANSI_NULLS ON&#xA;GO&#xA;&#xA;SET QUOTED_IDENTIFIER ON&#xA;GO&#xA;&#xA;CREATE PROCEDURE [dbo].[abc] &#xA;&#xA;@SearchText nvarchar(100) &#xA;&#xA;AS&#xA;BEGIN&#xA;DECLARE @sql nvarchar(4000)&#xA;SET @sql = 'SELECT a,b,c,d,e FROM myTable ' + @SearchText&#xA;-- what should be the criteria here.&#xA;EXEC sp_executesql @sql&#xA;END&#xA;&#xA;GO&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="3247937" LastActivityDate="2014-01-30T11:34:36.177" CommentCount="0" />
  <row Id="21455633" PostTypeId="2" ParentId="21428787" CreationDate="2014-01-30T11:46:33.053" Score="0" Body="&lt;p&gt;I did find this info on MSDN &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/vstudio/hh507838.aspx&quot; rel=&quot;nofollow&quot;&gt;Upgrading Unit Tests from Visual Studio 2010&lt;/a&gt; where it explains about using &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/vstudio/microsoft.visualstudio.testtools.unittesting.privateobject.aspx&quot; rel=&quot;nofollow&quot;&gt;PrivateObject&lt;/a&gt; if melike's answer is not an option for some reason. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Even though melike's answer worked for me, I thought I'd just learn how this works, here's a sample test in case it helps anyone:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;    [TestMethod]&#xA;    public void MyCellExampleTest()&#xA;    {&#xA;        var target = new MyCell();&#xA;        var targetPrivateObject = new PrivateObject(target);&#xA;&#xA;        var result = targetPrivateObject.Invoke(&quot;MyCustomFormatting&quot;, new object[] { &quot;Test&quot; });&#xA;&#xA;        Assert.AreEqual(string.Empty, result);&#xA;    }&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;One obvious downside of using the PrivateObject is the method name is just stored as a string - will be harder to maintain if you change the name or method signature.&lt;/p&gt;&#xA;" OwnerUserId="2285996" LastActivityDate="2014-01-30T11:46:33.053" CommentCount="0" />
  <row Id="21456131" PostTypeId="2" ParentId="21454992" CreationDate="2014-01-30T12:08:36.153" Score="0" Body="&lt;p&gt;Don't use a static connection, check the database connectionstring to enable the connection pooling. Is the connection pooling that controls the connection, leave it open until timeout (improve the performance) and close it when you don't need it.&#xA;Use the 'using' clause for every disposable object!&lt;/p&gt;&#xA;" OwnerUserId="3244930" LastActivityDate="2014-01-30T12:08:36.153" CommentCount="0" />
  <row Id="21456145" PostTypeId="2" ParentId="21455054" CreationDate="2014-01-30T12:09:06.480" Score="1" Body="&lt;p&gt;use the relative layout's &lt;code&gt;layout_toLeftOf&lt;/code&gt; propperty:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&#xA;&amp;lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#xA;    android:id=&quot;@+id/dialogContainer&quot;&#xA;    android:layout_width=&quot;fill_parent&quot;&#xA;    android:layout_height=&quot;fill_parent&quot;&#xA;    android:background=&quot;#FFF&quot;&#xA;    android:paddingBottom=&quot;25dip&quot;&amp;gt;&#xA;    &amp;lt;TextView&#xA;        android:id=&quot;@+id/dialogTitle&quot;&#xA;        android:layout_height=&quot;wrap_content&quot;&#xA;        android:layout_marginLeft=&quot;10dip&quot;&#xA;        android:layout_marginRight=&quot;10dip&quot;&#xA;        android:layout_marginTop=&quot;10dip&quot;&#xA;        android:textColor=&quot;#158849&quot;&#xA;        android:textSize=&quot;25dip&quot;&#xA;        android:layout_alignParentTop=&quot;true&quot;&#xA;        android:layout_alignParentLeft=&quot;true&quot;&#xA;        android:layout_toLeftOf=&quot;@+id/dialogTitle&quot;&#xA;        android:layout_width=&quot;wrap_content&quot; /&amp;gt;&#xA;    &amp;lt;ImageView&#xA;        android:id=&quot;@+id/dialogTitle&quot;&#xA;        android:layout_width=&quot;26dip&quot;&#xA;        android:layout_height=&quot;26dip&quot;&#xA;        android:background=&quot;@drawable/LoadingAnimation&quot;&#xA;        android:layout_alignParentRight=&quot;true&quot;&#xA;        android:layout_marginTop=&quot;10dp&quot;&#xA;        android:layout_marginRight=&quot;10dp&quot;&#xA;        android:layout_alignParentTop=&quot;true&quot; /&amp;gt;&#xA;&amp;lt;!--this doesn't work, there is no spacing--&amp;gt;&#xA;&amp;lt;/RelativeLayout&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;updated my answer&lt;/p&gt;&#xA;" OwnerUserId="1793906" LastEditorUserId="1793906" LastEditDate="2014-01-30T13:35:16.927" LastActivityDate="2014-01-30T13:35:16.927" CommentCount="7" />
  <row Id="21457309" PostTypeId="2" ParentId="21440763" CreationDate="2014-01-30T13:02:07.830" Score="1" Body="&lt;p&gt;Solved this problem by using the SelectionDrag event on the maingrid instead of MouseLeaveElement.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void maingrid_SelectionDrag(object sender, Infragistics.Win.UIElementEventArgs e)&#xA;{&#xA;    if (leftMouseDown)&#xA;    {&#xA;        ...&#xA;        DataObject data = new DataObject();&#xA;        data.SetFileDropList(files);&#xA;        this.mainGrid.DoDragDrop(data, DragDropEffects.Copy);&#xA;        leftMouseDown = false;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;instead of&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;void mainGrid_MouseLeaveElement(object sender, Infragistics.Win.UIElementEventArgs e)&#xA;{&#xA;    if (leftMouseDown)&#xA;    {&#xA;        ...&#xA;        DataObject data = new DataObject();&#xA;        data.SetFileDropList(files);&#xA;        this.mainGrid.DoDragDrop(data, DragDropEffects.Copy);&#xA;        leftMouseDown = false;&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1859954" LastEditorUserId="1859954" LastEditDate="2014-02-09T20:03:32.947" LastActivityDate="2014-02-09T20:03:32.947" CommentCount="1" />
  <row Id="21458157" PostTypeId="2" ParentId="21458059" CreationDate="2014-01-30T13:42:25.057" Score="0" Body="&lt;p&gt;You should use a &lt;code&gt;StringBuilder&lt;/code&gt; and &lt;code&gt;Append&lt;/code&gt; to it instead of using &lt;code&gt;content = content + ...&lt;/code&gt;. This copies the string every time.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Also, did you consider it could be that your code doesn't have a problem, but the server? Maybe the server slows down?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;And: Where's the code where you measure the rate? I can't see it in your sample?&lt;/p&gt;&#xA;" OwnerUserId="117362" LastActivityDate="2014-01-30T13:42:25.057" CommentCount="0" />
  <row Id="21458553" PostTypeId="2" ParentId="21458186" CreationDate="2014-01-30T14:01:03.790" Score="1" Body="&lt;p&gt;With the * you are searching all columns&lt;br&gt;&#xA;Try&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;where contains(code,N'(&quot;*1107*&quot;))&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;How is searching all columns better search results if they want to search a specific column?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Not going to SQL fulltext search the same as Google as they are not the same engines.&lt;br&gt;&#xA;I don't think the Google engine is available.&lt;br&gt;&#xA;Lucene is a freeware search engine.   &lt;/p&gt;&#xA;&#xA;&lt;p&gt;Why did you go down a path of writing your own DMS?    &lt;/p&gt;&#xA;" OwnerUserId="607314" LastEditorUserId="607314" LastEditDate="2014-01-30T20:05:12.963" LastActivityDate="2014-01-30T20:05:12.963" CommentCount="2" />
  <row Id="21459090" PostTypeId="2" ParentId="21458382" CreationDate="2014-01-30T14:25:23.013" Score="1" Body="&lt;p&gt;Did you tried by applying group by functionality in to DataTable that you are binding to repeater?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I am pointing to something like below.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Ref: &lt;a href=&quot;http://www.codeproject.com/Questions/111761/DataTable-compute-with-group-by&quot; rel=&quot;nofollow&quot;&gt;Link&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thanks!&lt;/p&gt;&#xA;" OwnerUserId="3182059" LastActivityDate="2014-01-30T14:25:23.013" CommentCount="0" />
  <row Id="21460451" PostTypeId="2" ParentId="21460038" CreationDate="2014-01-30T15:22:40.610" Score="1" Body="&lt;p&gt;In your Scripts use the following, naturally this is not all the code, but enough based off tutorials to get you going. Your userId will be generated server side, and somehow your script can get it off an element of the page, or whatever method you want. It runs when the connection is started and then every 10 seconds. Pinging our server side method of &lt;strong&gt;CheckMessage()&lt;/strong&gt; .&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This js would need refactoring but should give you the general idea.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;...&#xA;var messageHub = $.connection.messageHub;&#xA;var userId = 4;&#xA;$.connection.hub.start().done(function () {&#xA;         StartCheck();&#xA;}&#xA;&#xA;//Runs every 10 seconds..&#xA;function StartCheck()&#xA;{&#xA;    setInterval(messageHub.server.checkMessage(userId,$.connection.hub.id), 10000);&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;This method takes in a userId, assuming your db is set up that way, and grabs them all from your database; naturally the method used is probably not appropriate for your system, however change it as you need to. It also checks if the user has any messages, and if so sends down another message to our SignalR scripts.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public void CheckMessage(int userId,int connectionId)&#xA;{&#xA;&#xA;    var user = userRepo.RetrieveAllUsers.FirstOrDefault(u=&amp;gt;u.id == userId);&#xA;&#xA;    if(user.HasMessages)&#xA;    {&#xA;&#xA;     Clients.Group(connectionId).DisplayMailPopUp();&#xA;    }&#xA;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Finally this message, upon being called would run your code to do the 'You have Mail alert' - be it a popup, a div being faded in or whatever.&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;...&#xA;messageHub.client.displayMailPopUp = function () {&#xA;  alert(&quot;You have Mail!&quot;);&#xA;};&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Hopefully this helps - I recommend the following links for reading up and building your first SignalR app:&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.asp.net/signalr/overview/signalr-20/getting-started-with-signalr-20/tutorial-getting-started-with-signalr-20-and-mvc-5&quot; rel=&quot;nofollow&quot;&gt;http://www.asp.net/signalr/overview/signalr-20/getting-started-with-signalr-20/tutorial-getting-started-with-signalr-20-and-mvc-5&lt;/a&gt;&#xA;And a smaller sample: &lt;a href=&quot;http://code.msdn.microsoft.com/SignalR-Getting-Started-b9d18aa9&quot; rel=&quot;nofollow&quot;&gt;http://code.msdn.microsoft.com/SignalR-Getting-Started-b9d18aa9&lt;/a&gt;&lt;/p&gt;&#xA;" OwnerUserId="1225935" LastEditorUserId="1225935" LastEditDate="2014-01-30T15:29:17.557" LastActivityDate="2014-01-30T15:29:17.557" CommentCount="1" />
  <row Id="21461341" PostTypeId="2" ParentId="4836381" CreationDate="2014-01-30T15:59:38.140" Score="1" Body="&lt;p&gt;Found nothing suitable so created a very simple TSQL script. Here is the &lt;a href=&quot;https://gist.github.com/evgeny-myasishchev/8711676&quot; rel=&quot;nofollow&quot;&gt;gist&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Sample output:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class EmployeeDto&#xA;{&#xA;        public int Id { get; set; }&#xA;        public int AccountId { get; set; }&#xA;        public string ExternalId { get; set; }&#xA;        public string EmailAddress { get; set; }&#xA;        public bool IsActive { get; set; }&#xA;        public string UniqueId { get; set; }&#xA;        public bool IsBuiltIn { get; set; }&#xA;        public string LastName { get; set; }&#xA;        public string FirstName { get; set; }&#xA;        public string MiddleName { get; set; }&#xA;        public bool IsAuthorizedOnAllDepartments { get; set; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1053931" LastActivityDate="2014-01-30T15:59:38.140" CommentCount="1" />
  <row Id="21462547" PostTypeId="2" ParentId="21462295" CreationDate="2014-01-30T16:52:00.620" Score="0" Body="&lt;p&gt;You could create custom getters in your Foo class:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class Foo&#xA;{&#xA;    //your code&#xA;    [NotMapped]&#xA;    public string Prefix { get { return /*whatever*/; }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;I think this should work.&lt;/p&gt;&#xA;" OwnerUserId="1822164" LastActivityDate="2014-01-30T16:52:00.620" CommentCount="3" />
  <row Id="21462682" PostTypeId="2" ParentId="21462295" CreationDate="2014-01-30T16:57:34.387" Score="0" Body="&lt;p&gt;You cannot filter your database selection based on a custom function - as you say, it cannot convert this to SQL.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For this specific problem, I could propose you use the StartsWith function, which does work on SQL server&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;context.FooTable.Where(w =&amp;gt; w.Foo.StartsWith(&quot;13940&quot;));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1018435" LastActivityDate="2014-01-30T16:57:34.387" CommentCount="1" />
  <row Id="21462697" PostTypeId="2" ParentId="21462295" CreationDate="2014-01-30T16:58:07.490" Score="2" Body="&lt;p&gt;You could try creating your own &lt;code&gt;IQueryable&lt;/code&gt; filters for the FooTable, a bit like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public static class Filters&#xA;{&#xA;    public static IQueryable&amp;lt;FooTable&amp;gt; WithPrefix(this IQueryable&amp;lt;FooTable&amp;gt; item, string prefix)&#xA;    {&#xA;        return item.Where(i =&amp;gt; i.Foo.StartsWith(prefix));&#xA;        // note that this should be the same code you have in the &#xA;        // Prefix() method inside HelperFoo...&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Which you can use like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;context.FooTable.WithPrefix(&quot;13940&quot;);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;UPDATE: Sadly the second option here does not work:&lt;/strong&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Another option would be to have the helper methods not return a value but a &lt;code&gt;Predicate&amp;lt;&amp;gt;&lt;/code&gt; for &lt;code&gt;FooTable&lt;/code&gt;:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public class HelperFoo&#xA;{&#xA;    public static Func&amp;lt;FooTable, bool&amp;gt; Prefix(string value)&#xA;    {&#xA;        return (i) =&amp;gt; i.Foo.Substring(0, 5) == value;&#xA;    }&#xA;    public static Func&amp;lt;FooTable, bool&amp;gt; Suffix(string value) { /* code here */ }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And use it like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;context.FooTable.Where(HelperFoo.Prefix(&quot;13940&quot;));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Caveat: I'm not entirely sure the second method would not give you the same problem though.&lt;/p&gt;&#xA;" OwnerUserId="319633" LastEditorUserId="319633" LastEditDate="2014-01-30T17:03:33.967" LastActivityDate="2014-01-30T17:03:33.967" CommentCount="6" />
  <row Id="21462793" PostTypeId="2" ParentId="21462295" CreationDate="2014-01-30T17:01:47.620" Score="1" Body="&lt;p&gt;You can use &lt;code&gt;.StartsWith&lt;/code&gt; to check the prefix:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;string prefix = &quot;13940&quot;;&#xA;var result = context.FooTable.Where(w =&amp;gt; w.Foo.StartsWith(prefix + &quot;-&quot;));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;and &lt;code&gt;.EndsWith&lt;/code&gt; to check the suffix:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;string suffix = &quot;02&quot;;&#xA;var result = context.FooTable.Where(w =&amp;gt; w.Foo.EndsWith(&quot;-&quot; + suffix));&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;" OwnerUserId="1905949" LastActivityDate="2014-01-30T17:01:47.620" CommentCount="1" />
  <row Id="21462817" PostTypeId="2" ParentId="21462295" CreationDate="2014-01-30T17:03:15.097" Score="0" Body="&lt;p&gt;Use &lt;code&gt;Microsoft.Linq.Translations&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It would look something like this:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;partial class FooTable &#xA;{&#xA;    private static readonly CompiledExpression&amp;lt;FooTable,string&amp;gt; prefixExpression&#xA;            = DefaultTranslationOf&amp;lt;FooTable&amp;gt;.Property(e =&amp;gt; e.Prefix).Is(e =&amp;gt; e.Foo.Substring(0, 5));&#xA;&#xA;    public string Prefix&#xA;    {&#xA;        get { return prefixExpression.Evaluate(this); }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;And queried like:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;context.FooTable.Where(w =&amp;gt; w.Prefix == &quot;13940&quot;).WithTranslations();&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://www.nuget.org/packages/Microsoft.Linq.Translations&quot; rel=&quot;nofollow&quot;&gt;Nuget gallery page&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&quot;http://damieng.com/blog/2009/06/24/client-side-properties-and-any-remote-linq-provider&quot; rel=&quot;nofollow&quot;&gt;Documentation&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: This solution works in Select, GroupBy, OrderBy.&lt;/p&gt;&#xA;" OwnerUserId="101197" LastEditorUserId="101197" LastEditDate="2014-01-30T17:14:37.943" LastActivityDate="2014-01-30T17:14:37.943" CommentCount="0" />
  <row Id="27727099" PostTypeId="2" ParentId="9520802" CreationDate="2014-12-31T23:03:39.657" Score="2" Body="&lt;blockquote&gt;&#xA;  &lt;p&gt;Is there an easier way to do this?&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;No, I don't think so, atleast for a &amp;lt;= VS2013, it seems that the &lt;code&gt;CodeAttributeArgument&lt;/code&gt; doesn't go any further, which is shame. They should've released &lt;code&gt;CodeAttributeArgument2&lt;/code&gt; that has &lt;code&gt;Value&lt;/code&gt; as &lt;code&gt;CodeExpr&lt;/code&gt; :\..&lt;/p&gt;&#xA;&#xA;&lt;p&gt;If you use &gt;=VS2014, you can get access to Roslyn, and it &lt;strong&gt;should&lt;/strong&gt; &lt;strong&gt;become&lt;/strong&gt; easier - don't know exactly how you can access roslyn inside VS extension, have to wait and see. &lt;/p&gt;&#xA;&#xA;&lt;p&gt;In order to get attributes, you can use VS helper:&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;public List&amp;lt;CodeElement&amp;gt; GetAllCodeElementsOfType(&#xA;    CodeElements elements, &#xA;    vsCMElement elementType, &#xA;&#xA;    bool includeExternalTypes)&#xA;{&#xA;    var ret = new List&amp;lt;CodeElement&amp;gt;();&#xA;&#xA;    foreach (CodeElement elem in elements)&#xA;    {&#xA;        // iterate all namespaces (even if they are external)&#xA;        // &amp;gt; they might contain project code&#xA;        if (elem.Kind == vsCMElement.vsCMElementNamespace)&#xA;        {&#xA;            ret.AddRange(&#xA;                GetAllCodeElementsOfType(&#xA;                    ((CodeNamespace)elem).Members, &#xA;                    elementType, &#xA;                    includeExternalTypes));&#xA;        }&#xA;&#xA;        // if its not a namespace but external&#xA;        // &amp;gt; ignore it&#xA;        else if (elem.InfoLocation == vsCMInfoLocation.vsCMInfoLocationExternal &amp;amp;&amp;amp; !includeExternalTypes)&#xA;            continue;&#xA;&#xA;        // if its from the project&#xA;        // &amp;gt; check its members&#xA;        else if (elem.IsCodeType)&#xA;        {&#xA;            ret.AddRange(&#xA;                GetAllCodeElementsOfType(&#xA;                    ((CodeType)elem).Members, &#xA;                    elementType, &#xA;                    includeExternalTypes));&#xA;        }&#xA;&#xA;        if (elem.Kind == elementType)&#xA;            ret.Add(elem);&#xA;    }&#xA;    return ret;&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;Original source: &lt;a href=&quot;https://github.com/PombeirP/T4Factories/blob/master/T4Factories.Testbed/CodeTemplates/VisualStudioAutomationHelper.ttinclude&quot; rel=&quot;nofollow&quot;&gt;https://github.com/PombeirP/T4Factories/blob/master/T4Factories.Testbed/CodeTemplates/VisualStudioAutomationHelper.ttinclude&lt;/a&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In a meanwhile, you could use backtracking solution, this is not nice, but it should work, haven't tested it exactly 100%. The basic idea is to start tracking backwards from the class, and keep track of different namespaces/usings that arein the path of a class. This tries to simulate pretty much what a real compiler would do, if it's going to resolve a type: &lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt; var solution = (Solution2) _applicationObject.Solution;&#xA;var projects = solution.Projects;&#xA;var activeProject = projects&#xA;    .OfType&amp;lt;Project&amp;gt;()&#xA;    .First();&#xA;&#xA;// locate my class.&#xA;var myClass = GetAllCodeElementsOfType(&#xA;    activeProject.CodeModel.CodeElements,&#xA;    vsCMElement.vsCMElementClass, false)&#xA;    .OfType&amp;lt;CodeClass2&amp;gt;()&#xA;    .First(x =&amp;gt; x.Name == &quot;Program&quot;);&#xA;&#xA;// locate my attribute on class.&#xA;var mySpecialAttrib = myClass&#xA;    .Attributes&#xA;    .OfType&amp;lt;CodeAttribute2&amp;gt;()&#xA;    .First();&#xA;&#xA;&#xA;&#xA;var attributeArgument = mySpecialAttrib.Arguments&#xA;    .OfType&amp;lt;CodeAttributeArgument&amp;gt;()&#xA;    .First();&#xA;&#xA;string myType = Regex.Replace(&#xA;    attributeArgument.Value, // typeof(MyType)&#xA;    &quot;^typeof.*\\((.*)\\)$&quot;, &quot;$1&quot;); // MyType*/&#xA;&#xA;var codeNamespace = myClass.Namespace;&#xA;var classNamespaces = new List&amp;lt;string&amp;gt;();&#xA;&#xA;while (codeNamespace != null)&#xA;{&#xA;    var codeNs = codeNamespace;&#xA;    var namespaceName = codeNs.FullName;&#xA;&#xA;    var foundNamespaces = new List&amp;lt;string&amp;gt; {namespaceName};&#xA;&#xA;    // generate namespaces from usings.&#xA;    var @usings = codeNs.Children&#xA;        .OfType&amp;lt;CodeImport&amp;gt;()&#xA;        .Select(x =&amp;gt;&#xA;            new[]&#xA;            {&#xA;                x.Namespace,&#xA;                namespaceName + &quot;.&quot; + x.Namespace&#xA;            })&#xA;        .SelectMany(x =&amp;gt; x)&#xA;        .ToList();&#xA;&#xA;    foundNamespaces.AddRange(@usings);&#xA;&#xA;    // prepend all namespaces:&#xA;    var extra = (&#xA;        from ns2 in classNamespaces&#xA;        from ns1 in @usings&#xA;        select ns1 + &quot;.&quot; + ns2)&#xA;        .ToList();&#xA;&#xA;    classNamespaces.AddRange(foundNamespaces);&#xA;    classNamespaces.AddRange(extra);&#xA;&#xA;    codeNamespace = codeNs.Parent as CodeNamespace;&#xA;    if (codeNamespace == null)&#xA;    {&#xA;        var codeModel = codeNs.Parent as FileCodeModel2;&#xA;        if (codeModel == null) return;&#xA;&#xA;        var elems = codeModel.CodeElements;&#xA;        if (elems == null) continue;&#xA;&#xA;        var @extraUsings = elems&#xA;            .OfType&amp;lt;CodeImport&amp;gt;()&#xA;            .Select(x =&amp;gt; x.Namespace);&#xA;&#xA;        classNamespaces.AddRange(@extraUsings);&#xA;    }&#xA;}&#xA;&#xA;// resolve to a type!&#xA;var typeLocator = new EnvDTETypeLocator();&#xA;var resolvedType = classNamespaces.Select(type =&amp;gt;&#xA;        typeLocator.FindTypeExactMatch(activeProject, type + &quot;.&quot; + myType))&#xA;    .FirstOrDefault(type =&amp;gt; type != null);&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;You need &lt;a href=&quot;http://domasmvc.googlecode.com/svn/trunk/mvcscaffolding/T4Scaffolding/Core/ProjectTypeLocators/EnvDTETypeLocator.cs&quot; rel=&quot;nofollow&quot;&gt;EnvDTETypeLocator&lt;/a&gt; too.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;strong&gt;For VS2015&lt;/strong&gt;, an example of roslyn integration can be found from here: &lt;a href=&quot;https://github.com/tomasr/roslyn-colorizer/blob/master/RoslynColorizer/RoslynColorizer.cs&quot; rel=&quot;nofollow&quot;&gt;https://github.com/tomasr/roslyn-colorizer/blob/master/RoslynColorizer/RoslynColorizer.cs&lt;/a&gt; &lt;/p&gt;&#xA;&#xA;&lt;p&gt;It'll definitely be A lot easier than it is with current &lt;code&gt;CodeModel&lt;/code&gt;.&lt;/p&gt;&#xA;" OwnerUserId="1936622" LastEditorUserId="1936622" LastEditDate="2015-01-13T15:14:22.920" LastActivityDate="2015-01-13T15:14:22.920" CommentCount="0" />
</posts>
